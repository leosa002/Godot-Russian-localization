<?xml version="1.0" encoding="UTF-8" ?>
<class name="GDScriptFunctionState" inherits="Reference" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../doc/class.xsd">
	<brief_description>
		Состояние вызова функции после выхода из неё.
	</brief_description>
	<description>
		Вызов [метода @GDScript.yield] внутри функции приведет к выходу этой функции и возврату ее текущего состояния в виде объекта этого типа. Вызов функции может быть возобновлен позже вызовом [метода resume] на этом объекте состояния.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="is_valid" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="extended_check" type="bool" default="false" />
			<description>
				Проверьте, можно ли возобновить вызов функции. Это не так, если состояние функции уже было возобновлено.
				Если включена [code]extended_check[/code], то также проверяется, существуют ли еще связанные скрипт и объект. Расширенная проверка выполняется в режиме отладки как часть [метода GDScriptFunctionState.resume], но вы можете использовать этот метод, если знаете, что можете попытаться возобновить работу, не будучи уверенным, что объект и/или скрипт сохранились до этого момента.
			</description>
		</method>
		<method name="resume">
			<return type="Variant" />
			<argument index="0" name="arg" type="Variant" default="null" />
			<description>
				Возобновите выполнение вызова уступленной функции.
				Если аргумент передан, верните аргумент из вызова [метода @GDScript.yield] в вызове уступленной функции. Вы можете передать, например, [Array], чтобы передать несколько аргументов.
				Эта функция возвращает то, что вернул возобновленный вызов функции, возможно, другое состояние функции, если она была передана снова.
			</description>
		</method>
	</methods>
	<signals>
		<signal name="completed">
			<argument index="0" name="result" type="Variant" />
			<description>
			</description>
		</signal>
	</signals>
	<constants>
	</constants>
</class>
