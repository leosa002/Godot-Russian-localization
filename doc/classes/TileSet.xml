<?xml version="1.0" encoding="UTF-8" ?>
<class name="TileSet" inherits="Resource" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Библиотека для работы с плиточными картами(Тайлмапы).
	</brief_description>
	<description>
		TileSet - это библиотека тайлов для [TileMap]. Он содержит список тайлов, каждый из которых состоит из спрайта и необязательных фигур столкновения.
		На тайлы ссылается уникальный целочисленный идентификатор.
	</description>
	<tutorials>
		<link title="Using Tilemaps">$DOCS_URL/tutorials/2d/using_tilemaps.html</link>
		<link title="2D Platformer Demo">https://godotengine.org/asset-library/asset/120</link>
		<link title="2D Isometric Demo">https://godotengine.org/asset-library/asset/112</link>
		<link title="2D Hexagonal Demo">https://godotengine.org/asset-library/asset/111</link>
		<link title="2D Navigation Astar Demo">https://godotengine.org/asset-library/asset/519</link>
		<link title="2D Role Playing Game Demo">https://godotengine.org/asset-library/asset/520</link>
		<link title="2D Kinematic Character Demo">https://godotengine.org/asset-library/asset/113</link>
	</tutorials>
	<methods>
		<method name="_forward_atlas_subtile_selection" qualifiers="virtual">
			<return type="Vector2" />
			<argument index="0" name="atlastile_id" type="int" />
			<argument index="1" name="tilemap" type="Object" />
			<argument index="2" name="tile_location" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="_forward_subtile_selection" qualifiers="virtual">
			<return type="Vector2" />
			<argument index="0" name="autotile_id" type="int" />
			<argument index="1" name="bitmask" type="int" />
			<argument index="2" name="tilemap" type="Object" />
			<argument index="3" name="tile_location" type="Vector2" />
			<description>
			</description>
		</method>
		<method name="_is_tile_bound" qualifiers="virtual">
			<return type="bool" />
			<argument index="0" name="drawn_id" type="int" />
			<argument index="1" name="neighbor_id" type="int" />
			<description>
				Определяет, когда автоплиточник должен считать два разных идентификатора автоплитки связанными вместе.
				[b]Примечание:[/b] [code]neighbor_id[/code] будет [code]-1[/code] ([константа TileMap.INVALID_CELL]) при проверке тайла на пустой соседний тайл.
			</description>
		</method>
		<method name="autotile_clear_bitmask_map">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<description>
				Очищает всю информацию о битовой маске автотайла.
			</description>
		</method>
		<method name="autotile_get_bitmask">
			<return type="int" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="coord" type="Vector2" />
			<description>
				Возвращает битовую маску субтайла из автотайла, заданного его координатами.
				Значение представляет собой сумму значений в [enum AutotileBindings], присутствующих в субтиле (например, значение 5 означает, что битовая маска имеет привязки в верхнем левом и верхнем правом углу).
			</description>
		</method>
		<method name="autotile_get_bitmask_mode" qualifiers="const">
			<return type="int" enum="TileSet.BitmaskMode" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает [enum BitmaskMode] автотайла.
			</description>
		</method>
		<method name="autotile_get_icon_coordinate" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает субтиль, который используется в качестве иконки в атласе/автотайла, учитывая его координаты.
				Субтиль, определенный как иконка, будет использоваться в качестве запасного варианта, когда информация о растровой маске атласа/автотайла будет неполной. Он также будет использоваться для представления в редакторе TileSet.
			</description>
		</method>
		<method name="autotile_get_light_occluder" qualifiers="const">
			<return type="OccluderPolygon2D" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="coord" type="Vector2" />
			<description>
				Возвращает светлый окклюдер субтиля из атласа/автотайла с указанием его координат.
			</description>
		</method>
		<method name="autotile_get_navigation_polygon" qualifiers="const">
			<return type="NavigationPolygon" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="coord" type="Vector2" />
			<description>
				Возвращает навигационный полигон субтиля из атласа/автотайла с заданными координатами.
			</description>
		</method>
		<method name="autotile_get_size" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает размер подтилей в атласе/автотайла.
			</description>
		</method>
		<method name="autotile_get_spacing" qualifiers="const">
			<return type="int" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает расстояние между подтилями атласа/автотайла.
			</description>
		</method>
		<method name="autotile_get_subtile_priority">
			<return type="int" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="coord" type="Vector2" />
			<description>
				Возвращает приоритет субтайла из автотайла, заданного его координатами.
				Если более одного субтайла имеют одинаковое значение битовой маски, один из них будет выбран для отрисовки случайным образом. Его приоритет определяет, как часто он будет выбираться.
			</description>
		</method>
		<method name="autotile_get_z_index">
			<return type="int" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="coord" type="Vector2" />
			<description>
				Возвращает индекс рисунка субтиля из атласа/автотайла, заданный его координатами.
			</description>
		</method>
		<method name="autotile_set_bitmask">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="bitmask" type="Vector2" />
			<argument index="2" name="flag" type="int" />
			<description>
				Устанавливает битовую маску субтайла из автотайла с учетом его координат.
				Значение представляет собой сумму значений в [enum AutotileBindings], присутствующих в субтиле (например, значение 5 означает, что битовая маска имеет привязки в верхнем левом и верхнем правом углу).
			</description>
		</method>
		<method name="autotile_set_bitmask_mode">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="mode" type="int" enum="TileSet.BitmaskMode" />
			<description>
				Устанавливает [enum BitmaskMode] автотайла.
			</description>
		</method>
		<method name="autotile_set_icon_coordinate">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="coord" type="Vector2" />
			<description>
				Устанавливает субтиль, который будет использоваться в качестве иконки в атласе/автотайла с учетом его координат.
				Субтиль, заданный в качестве иконки, будет использоваться в качестве запасного варианта, когда информация о растровой маске атласа/автотайла будет неполной. Он также будет использоваться для представления в редакторе TileSet.
			</description>
		</method>
		<method name="autotile_set_light_occluder">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="light_occluder" type="OccluderPolygon2D" />
			<argument index="2" name="coord" type="Vector2" />
			<description>
				Устанавливает светлый окклюдер субтильного объекта из атласа/автотайла, задав его координаты.
			</description>
		</method>
		<method name="autotile_set_navigation_polygon">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="navigation_polygon" type="NavigationPolygon" />
			<argument index="2" name="coord" type="Vector2" />
			<description>
				Устанавливает навигационный полигон субтиля из атласа/автотайла, задавая его координаты.
			</description>
		</method>
		<method name="autotile_set_size">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="size" type="Vector2" />
			<description>
				Устанавливает размер субтилей в атласе/автотайла.
			</description>
		</method>
		<method name="autotile_set_spacing">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="spacing" type="int" />
			<description>
				Устанавливает расстояние между подтилями атласа/автотайла.
			</description>
		</method>
		<method name="autotile_set_subtile_priority">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="coord" type="Vector2" />
			<argument index="2" name="priority" type="int" />
			<description>
				Устанавливает приоритет субтайла из автотайла с учетом его координат.
				Если более одного субтайла имеют одинаковое значение битовой маски, один из них будет выбран для отрисовки случайным образом. Его приоритет определяет, как часто он будет выбираться.
			</description>
		</method>
		<method name="autotile_set_z_index">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="coord" type="Vector2" />
			<argument index="2" name="z_index" type="int" />
			<description>
				Устанавливает индекс отрисовки субтиля из атласа/автотайла с учетом его координат.
			</description>
		</method>
		<method name="clear">
			<return type="void" />
			<description>
				Очищает все плитки.
			</description>
		</method>
		<method name="create_tile">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<description>
				Создает новую плитку с заданным ID.
			</description>
		</method>
		<method name="find_tile_by_name" qualifiers="const">
			<return type="int" />
			<argument index="0" name="name" type="String" />
			<description>
				Возвращает первую плитку, соответствующую заданному имени.
			</description>
		</method>
		<method name="get_last_unused_tile_id" qualifiers="const">
			<return type="int" />
			<description>
				Возвращает ID, следующий за последним используемым в данный момент ID, что полезно при создании новой плитки.
			</description>
		</method>
		<method name="get_tiles_ids" qualifiers="const">
			<return type="Array" />
			<description>
				Возвращает массив всех используемых в данный момент идентификаторов/ID плиток.
			</description>
		</method>
		<method name="remove_tile">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<description>
				Удаляет заданный ID плитки.
			</description>
		</method>
		<method name="tile_add_shape">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="shape" type="Shape2D" />
			<argument index="2" name="shape_transform" type="Transform2D" />
			<argument index="3" name="one_way" type="bool" default="false" />
			<argument index="4" name="autotile_coord" type="Vector2" default="Vector2( 0, 0 )" />
			<description>
				Добавляет фигуру к плитке.
			</description>
		</method>
		<method name="tile_get_light_occluder" qualifiers="const">
			<return type="OccluderPolygon2D" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает световые окклюдеры плитки.
			</description>
		</method>
		<method name="tile_get_material" qualifiers="const">
			<return type="ShaderMaterial" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает материал плитки.
			</description>
		</method>
		<method name="tile_get_modulate" qualifiers="const">
			<return type="Color" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает цвет модуляции плитки.
			</description>
		</method>
		<method name="tile_get_name" qualifiers="const">
			<return type="String" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает название плитки.
			</description>
		</method>
		<method name="tile_get_navigation_polygon" qualifiers="const">
			<return type="NavigationPolygon" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает навигационный многоугольник плитки.
			</description>
		</method>
		<method name="tile_get_navigation_polygon_offset" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает смещение навигационного полигона плитки.
			</description>
		</method>
		<method name="tile_get_normal_map" qualifiers="const">
			<return type="Texture" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает текстуру карты нормалей плитки.
			</description>
		</method>
		<method name="tile_get_occluder_offset" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает смещение светового окклюдера плитки.
			</description>
		</method>
		<method name="tile_get_region" qualifiers="const">
			<return type="Rect2" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает субрегион плитки в текстуре.
			</description>
		</method>
		<method name="tile_get_shape" qualifiers="const">
			<return type="Shape2D" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<description>
				Возвращает заданную форму плитки.
			</description>
		</method>
		<method name="tile_get_shape_count" qualifiers="const">
			<return type="int" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает количество фигур, назначенных плитке.
			</description>
		</method>
		<method name="tile_get_shape_offset" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<description>
				Возвращает смещение формы плитки.
			</description>
		</method>
		<method name="tile_get_shape_one_way" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<description>
				Возвращает значение одностороннего столкновения для формы плитки.
			</description>
		</method>
		<method name="tile_get_shape_one_way_margin" qualifiers="const">
			<return type="float" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<description>
			</description>
		</method>
		<method name="tile_get_shape_transform" qualifiers="const">
			<return type="Transform2D" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<description>
				Возвращает [Transform2D] формы плитки.
			</description>
		</method>
		<method name="tile_get_shapes" qualifiers="const">
			<return type="Array" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает массив словарей, описывающих формы плитки.
				[b]Структура словарей в массиве, возвращаемом этим методом:[/b]
				[codeblock]
				{
				    "autotile_coord": Vector2,
				    "one_way": bool,
				    "one_way_margin": int,
				    "shape": CollisionShape2D,
				    "shape_transform": Transform2D,
				}
				[/codeblock]
			</description>
		</method>
		<method name="tile_get_texture" qualifiers="const">
			<return type="Texture" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает текстуру плитки.
			</description>
		</method>
		<method name="tile_get_texture_offset" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает смещение текстуры плитки.
			</description>
		</method>
		<method name="tile_get_tile_mode" qualifiers="const">
			<return type="int" enum="TileSet.TileMode" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает [enum TileMode] плитки.
			</description>
		</method>
		<method name="tile_get_z_index" qualifiers="const">
			<return type="int" />
			<argument index="0" name="id" type="int" />
			<description>
				Возвращает индекс Z плитки (слоя рисования).
			</description>
		</method>
		<method name="tile_set_light_occluder">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="light_occluder" type="OccluderPolygon2D" />
			<description>
				Устанавливает светлый окклюдер для плитки.
			</description>
		</method>
		<method name="tile_set_material">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="material" type="ShaderMaterial" />
			<description>
				Устанавливает материал плитки.
			</description>
		</method>
		<method name="tile_set_modulate">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="color" type="Color" />
			<description>
				Устанавливает цвет модуляции тайла.
				[b]Примечание:[/b] Модуляция осуществляется путем задания цвета вершин тайла. Чтобы получить к нему доступ в шейдере, используйте [code]COLOR[/code], а не [code]MODULATE[/code] (который вместо этого обращается к свойству [member CanvasItem.modulate] тайла [TileMap]).
			</description>
		</method>
		<method name="tile_set_name">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="name" type="String" />
			<description>
				Устанавливает имя плитки.
			</description>
		</method>
		<method name="tile_set_navigation_polygon">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="navigation_polygon" type="NavigationPolygon" />
			<description>
				Устанавливает навигационный полигон плитки.
			</description>
		</method>
		<method name="tile_set_navigation_polygon_offset">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="navigation_polygon_offset" type="Vector2" />
			<description>
				Устанавливает смещение для навигационного полигона плитки.
			</description>
		</method>
		<method name="tile_set_normal_map">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="normal_map" type="Texture" />
			<description>
				Устанавливает текстуру карты нормалей плитки.
				[b]Примечание:[/b] Godot ожидает, что карта нормалей будет использовать координаты X+, Y- и Z+. Сравнение координат карты нормалей, ожидаемых популярными движками, приведено на [url=http://wiki.polycount.com/wiki/Normal_Map_Technical_Details#Common_Swizzle_Coordinates]этой странице[/url].
			</description>
		</method>
		<method name="tile_set_occluder_offset">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="occluder_offset" type="Vector2" />
			<description>
				Устанавливает смещение для светового окклюдера плитки.
			</description>
		</method>
		<method name="tile_set_region">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="region" type="Rect2" />
			<description>
				Устанавливает субрегион плитки в текстуре. Это часто встречается в атласах текстур.
			</description>
		</method>
		<method name="tile_set_shape">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<argument index="2" name="shape" type="Shape2D" />
			<description>
				Устанавливает форму для плитки, обеспечивая столкновение.
			</description>
		</method>
		<method name="tile_set_shape_offset">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<argument index="2" name="shape_offset" type="Vector2" />
			<description>
				Устанавливает смещение формы плитки.
			</description>
		</method>
		<method name="tile_set_shape_one_way">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<argument index="2" name="one_way" type="bool" />
			<description>
				Включает одностороннее столкновение с формой плитки.
			</description>
		</method>
		<method name="tile_set_shape_one_way_margin">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<argument index="2" name="one_way" type="float" />
			<description>
			</description>
		</method>
		<method name="tile_set_shape_transform">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<argument index="2" name="shape_transform" type="Transform2D" />
			<description>
				Устанавливает [Transform2D] на форму плитки.
			</description>
		</method>
		<method name="tile_set_shapes">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="shapes" type="Array" />
			<description>
				Устанавливает массив фигур для тайла, обеспечивая столкновение.
			</description>
		</method>
		<method name="tile_set_texture">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="texture" type="Texture" />
			<description>
				Устанавливает текстуру плитки.
			</description>
		</method>
		<method name="tile_set_texture_offset">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="texture_offset" type="Vector2" />
			<description>
				Устанавливает смещение текстуры плитки.
			</description>
		</method>
		<method name="tile_set_tile_mode">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="tilemode" type="int" enum="TileSet.TileMode" />
			<description>
				Устанавливает режим работы плитки [enum TileMode].
			</description>
		</method>
		<method name="tile_set_z_index">
			<return type="void" />
			<argument index="0" name="id" type="int" />
			<argument index="1" name="z_index" type="int" />
			<description>
				Устанавливает индекс рисования плитки.
			</description>
		</method>
	</methods>
	<constants>
		<constant name="BITMASK_2X2" value="0" enum="BitmaskMode">
		</constant>
		<constant name="BITMASK_3X3_MINIMAL" value="1" enum="BitmaskMode">
		</constant>
		<constant name="BITMASK_3X3" value="2" enum="BitmaskMode">
		</constant>
		<constant name="BIND_TOPLEFT" value="1" enum="AutotileBindings">
		</constant>
		<constant name="BIND_TOP" value="2" enum="AutotileBindings">
		</constant>
		<constant name="BIND_TOPRIGHT" value="4" enum="AutotileBindings">
		</constant>
		<constant name="BIND_LEFT" value="8" enum="AutotileBindings">
		</constant>
		<constant name="BIND_CENTER" value="16" enum="AutotileBindings">
		</constant>
		<constant name="BIND_RIGHT" value="32" enum="AutotileBindings">
		</constant>
		<constant name="BIND_BOTTOMLEFT" value="64" enum="AutotileBindings">
		</constant>
		<constant name="BIND_BOTTOM" value="128" enum="AutotileBindings">
		</constant>
		<constant name="BIND_BOTTOMRIGHT" value="256" enum="AutotileBindings">
		</constant>
		<constant name="SINGLE_TILE" value="0" enum="TileMode">
		</constant>
		<constant name="AUTO_TILE" value="1" enum="TileMode">
		</constant>
		<constant name="ATLAS_TILE" value="2" enum="TileMode">
		</constant>
	</constants>
</class>
