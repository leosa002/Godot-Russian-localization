<?xml version="1.0" encoding="UTF-8" ?>
<class name="Tree" inherits="Control" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Элемент управления для отображения дерева элементов.
	</brief_description>
	<description>
		Здесь отображается дерево элементов, которые можно выбирать, разворачивать и сворачивать. Дерево может иметь несколько столбцов с пользовательскими элементами управления, такими как редактирование текста, кнопки и всплывающие окна. Это может быть полезно для структурированных отображений и взаимодействий.
		Деревья строятся с помощью кода, используя объекты [TreeItem] для создания структуры. У них один корень, но можно смоделировать несколько корней, если добавить фиктивный скрытый корень.
		[codeblock]
		func _ready():
		    var tree = Tree.new()
		    var root = tree.create_item()
		    tree.set_hide_root(true)
		    var child1 = tree.create_item(root)
		    var child2 = tree.create_item(root)
		    var subchild1 = tree.create_item(child1)
		    subchild1.set_text(0, "Subchild1")
		[/codeblock]
		Чтобы перебрать все объекты [TreeItem] в объекте [Tree], используйте [метод TreeItem.get_next] и [метод TreeItem.get_children] после получения корня с помощью [метода get_root]. Вы можете использовать [метод Object.free] на [TreeItem], чтобы удалить его из [Tree].
		[b]Инкрементный поиск:[/b] Как и [ItemList] и [PopupMenu], [Tree] поддерживает поиск внутри списка, пока элемент управления находится в фокусе. Нажмите клавишу, соответствующую первой букве названия элемента, чтобы выбрать первый элемент, начинающийся на эту букву. После этого есть два способа выполнить инкрементный поиск: 1) Нажмите ту же клавишу еще раз до истечения времени ожидания, чтобы выбрать следующий элемент, начинающийся с той же буквы. 2) До истечения времени ожидания нажать клавиши с буквами, совпадающими с остальной частью слова, чтобы выбрать непосредственно нужный элемент. Оба действия будут сброшены в начало списка, если с момента регистрации последнего нажатия прошло время. Длительность тайм-аута можно настроить, изменив [member ProjectSettings.gui/timers/incremental_search_max_interval_msec].
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="clear">
			<return type="void" />
			<description>
				Очищает дерево. При этом удаляются все элементы.
			</description>
		</method>
		<method name="create_item">
			<return type="TreeItem" />
			<argument index="0" name="parent" type="Object" default="null" />
			<argument index="1" name="idx" type="int" default="-1" />
			<description>
				Создает элемент в дереве и добавляет его в качестве дочернего элемента [code]parent[/code], который может быть либо действительным [TreeItem], либо [code]null[/code].
				Если [code]parent[/code] - [code]null[/code], то родителем будет корневой элемент, или новый элемент будет самим корнем, если дерево пустое.
				Новый элемент будет [code]idx[/code] дочерним элементом родителя, или последним, если не хватает братьев и сестер.
			</description>
		</method>
		<method name="edit_selected">
			<return type="bool" />
			<description>
				Редактирует выбранный элемент дерева, как если бы он был щелкнут. Элемент должен быть установлен редактируемым с помощью [метода TreeItem.set_editable]. Возвращает [code]true[/code], если элемент может быть отредактирован. Не работает, если ни один элемент не выбран.
			</description>
		</method>
		<method name="ensure_cursor_is_visible">
			<return type="void" />
			<description>
				Делает видимой текущую сфокусированную ячейку.
				При необходимости дерево прокручивается. В режиме [constant SELECT_ROW] этот метод не будет выполнять горизонтальную прокрутку, так как все ячейки в выбранном ряду фокусируются логически.
				[b]Примечание:[/b] Несмотря на название этого метода, сам курсор фокуса виден только в режиме [constant SELECT_MULTI].
			</description>
		</method>
		<method name="get_button_id_at_position" qualifiers="const">
			<return type="int" />
			<argument index="0" name="position" type="Vector2" />
			<description>
				Возвращает идентификатор кнопки в [code]позиции[/code], или -1, если кнопки нет.
			</description>
		</method>
		<method name="get_column_at_position" qualifiers="const">
			<return type="int" />
			<argument index="0" name="position" type="Vector2" />
			<description>
				Возвращает индекс столбца в [code]позиции[/code], или -1, если там нет элемента.
			</description>
		</method>
		<method name="get_column_title" qualifiers="const">
			<return type="String" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает заголовок столбца.
			</description>
		</method>
		<method name="get_column_width" qualifiers="const">
			<return type="int" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает ширину столбца в пикселях.
			</description>
		</method>
		<method name="get_custom_popup_rect" qualifiers="const">
			<return type="Rect2" />
			<description>
				Возвращает прямоугольник для пользовательских всплывающих окон. Помощник для создания пользовательских элементов управления ячейками, которые отображают всплывающее окно. Смотрите [метод TreeItem.set_cell_mode].
			</description>
		</method>
		<method name="get_drop_section_at_position" qualifiers="const">
			<return type="int" />
			<argument index="0" name="position" type="Vector2" />
			<description>
				Возвращает секцию падения в [code]позиции[/code], или -100, если там нет предмета.
				Значения -1, 0 или 1 будут возвращены для секций падения "над элементом", "на элементе" и "под элементом" соответственно. Описание каждой секции падения см. в [enum DropModeFlags].
				Чтобы получить элемент, к которому относится возвращаемая секция падения, используйте [метод get_item_at_position].
			</description>
		</method>
		<method name="get_edited" qualifiers="const">
			<return type="TreeItem" />
			<description>
				Возвращает текущий отредактированный элемент. Может использоваться с [signal item_edited] для получения измененного элемента.
				[codeblock]
				func _ready():
				    $Tree.connect("item_edited", self, "on_Tree_item_edited")

				func on_Tree_item_edited():
				    print($Tree.get_edited()) # Этот элемент только что был отредактирован (например, проверен).
				[/codeblock]
			</description>
		</method>
		<method name="get_edited_column" qualifiers="const">
			<return type="int" />
			<description>
				Возвращает колонку для текущего редактируемого элемента.
			</description>
		</method>
		<method name="get_item_area_rect" qualifiers="const">
			<return type="Rect2" />
			<argument index="0" name="item" type="Object" />
			<argument index="1" name="column" type="int" default="-1" />
			<description>
				Возвращает площадь прямоугольника для указанного [TreeItem]. Если указан [code]столбец[/code], возвращается только позиция и размер этого столбца, в противном случае возвращается прямоугольник, содержащий все столбцы.
			</description>
		</method>
		<method name="get_item_at_position" qualifiers="const">
			<return type="TreeItem" />
			<argument index="0" name="position" type="Vector2" />
			<description>
				Возвращает элемент дерева в указанной позиции (относительно начальной позиции дерева).
			</description>
		</method>
		<method name="get_next_selected">
			<return type="TreeItem" />
			<argument index="0" name="from" type="Object" />
			<description>
				Возвращает следующий выбранный [TreeItem] после заданного, или [code]null[/code], если достигнут конец.
				Если [code]from[/code] равен [code]null[/code], возвращается первый выбранный элемент.
			</description>
		</method>
		<method name="get_pressed_button" qualifiers="const">
			<return type="int" />
			<description>
				Возвращает индекс последней нажатой кнопки.
			</description>
		</method>
		<method name="get_root">
			<return type="TreeItem" />
			<description>
				Возвращает корневой элемент дерева или [code]null[/code], если дерево пустое.
			</description>
		</method>
		<method name="get_scroll" qualifiers="const">
			<return type="Vector2" />
			<description>
				Возвращает текущую позицию прокрутки.
			</description>
		</method>
		<method name="get_selected" qualifiers="const">
			<return type="TreeItem" />
			<description>
				Возвращает текущий сфокусированный элемент или [code]null[/code], если ни один элемент не сфокусирован.
				В режимах [constant SELECT_ROW] и [constant SELECT_SINGLE] сфокусированный элемент совпадает с выбранным элементом. В режиме [constant SELECT_MULTI] фокусируемый элемент - это элемент под курсором фокуса, не обязательно выбранный.
				Чтобы получить текущий выбранный элемент (элементы), используйте [метод get_next_selected].
			</description>
		</method>
		<method name="get_selected_column" qualifiers="const">
			<return type="int" />
			<description>
Возвращает текущий сфокусированный столбец, или -1, если ни один столбец не сфокусирован.
				В режиме [constant SELECT_SINGLE] сфокусированным столбцом является выбранный столбец. В режиме [constant SELECT_ROW] фокусируемый столбец всегда равен 0, если выбран любой элемент. В режиме [constant SELECT_MULTI] фокусируемый столбец - это столбец под курсором фокусировки, и не обязательно какой-либо столбец выбран.
				Чтобы узнать, выбран ли столбец элемента, используйте [метод TreeItem.is_selected].
			</description>
		</method>
		<method name="scroll_to_item">
			<return type="void" />
			<argument index="0" name="item" type="Object" />
			<description>
				Приводит к переходу [Tree] к указанному элементу [TreeItem].
			</description>
		</method>
		<method name="set_column_expand">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="expand" type="bool" />
			<description>
				Если [code]true[/code], то колонка будет иметь флаг "Expand" [Control]. Колонки, имеющие флаг "Expand", будут использовать свою "min_width" аналогично [member Control.size_flags_stretch_ratio].
			</description>
		</method>
		<method name="set_column_min_width">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="min_width" type="int" />
			<description>
				Устанавливает минимальную ширину столбца. Колонки, имеющие флаг "Expand", будут использовать свою "min_width" аналогично [member Control.size_flags_stretch_ratio].
			</description>
		</method>
		<method name="set_column_title">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="title" type="String" />
			<description>
				Устанавливает заголовок столбца.
			</description>
		</method>
	</methods>
	<members>
		<member name="allow_reselect" type="bool" setter="set_allow_reselect" getter="get_allow_reselect" default="false">
			Если [code]true[/code], то текущая выделенная ячейка может быть выбрана снова.
		</member>
		<member name="allow_rmb_select" type="bool" setter="set_allow_rmb_select" getter="get_allow_rmb_select" default="false">
			Если [code]true[/code], щелчок правой кнопкой мыши позволяет выбрать элементы.
		</member>
		<member name="column_titles_visible" type="bool" setter="set_column_titles_visible" getter="are_column_titles_visible" default="false">
			Если [code]true[/code], заголовки столбцов будут видны.
		</member>
		<member name="columns" type="int" setter="set_columns" getter="get_columns" default="1">
			Количество столбцов.
		</member>
		<member name="drop_mode_flags" type="int" setter="set_drop_mode_flags" getter="get_drop_mode_flags" default="0">
			Режим падения как комбинация флагов в виде ИЛИ. См. константы [enum DropModeFlags]. После завершения сброса возвращается к [константе DROP_MODE_DISABLED]. Рекомендуется устанавливать это значение во время [метод Control.can_drop_data].
			Это управляет секциями падения, т.е. решением и отрисовкой возможных мест падения на основе положения мыши.
		</member>
		<member name="focus_mode" type="int" setter="set_focus_mode" getter="get_focus_mode" overrides="Control" enum="Control.FocusMode" default="2" />
		<member name="hide_folding" type="bool" setter="set_hide_folding" getter="is_folding_hidden" default="false">
			Если [code]true[/code], стрелка сворачивания будет скрыта.
		</member>
		<member name="hide_root" type="bool" setter="set_hide_root" getter="is_root_hidden" default="false">
			Если [code]true[/code], корень дерева будет скрыт.
		</member>
		<member name="rect_clip_content" type="bool" setter="set_clip_contents" getter="is_clipping_contents" overrides="Control" default="true" />
		<member name="select_mode" type="int" setter="set_select_mode" getter="get_select_mode" enum="Tree.SelectMode" default="0">
			Позволяет выбрать один или несколько вариантов. См. константы [enum SelectMode].
		</member>
	</members>
	<signals>
		<signal name="button_pressed">
			<argument index="0" name="item" type="TreeItem" />
			<argument index="1" name="column" type="int" />
			<argument index="2" name="id" type="int" />
			<description>
				Выдается при нажатии кнопки на дереве (см. [метод TreeItem.add_button]).
			</description>
		</signal>
		<signal name="cell_selected">
			<description>
				Выдается при выделении ячейки.
			</description>
		</signal>
		<signal name="column_title_pressed">
			<argument index="0" name="column" type="int" />
			<description>
				Выдается при нажатии на заголовок колонки.
			</description>
		</signal>
		<signal name="custom_popup_edited">
			<argument index="0" name="arrow_clicked" type="bool" />
			<description>
				Выдается, когда ячейка с [константой TreeItem.CELL_MODE_CUSTOM] щелкается для редактирования.
			</description>
		</signal>
		<signal name="empty_rmb">
			<argument index="0" name="position" type="Vector2" />
			<description>
				Выдается при нажатии правой кнопки мыши в пустом пространстве дерева.
			</description>
		</signal>
		<signal name="empty_tree_rmb_selected">
			<argument index="0" name="position" type="Vector2" />
			<description>
				Выдается при нажатии правой кнопки мыши, если активен выбор правой кнопкой мыши и дерево пустое.
			</description>
		</signal>
		<signal name="item_activated">
			<description>
				Выдается при двойном щелчке по ярлыку элемента.
			</description>
		</signal>
		<signal name="item_collapsed">
			<argument index="0" name="item" type="TreeItem" />
			<description>
				Выдается, когда элемент сворачивается при нажатии на стрелку сворачивания.
			</description>
		</signal>
		<signal name="item_custom_button_pressed">
			<description>
				Выдается при нажатии пользовательской кнопки (т.е. в ячейке режима [constant TreeItem.CELL_MODE_CUSTOM]).
			</description>
		</signal>
		<signal name="item_double_clicked">
			<description>
				Выдается при двойном щелчке по значку элемента.
			</description>
		</signal>
		<signal name="item_edited">
			<description>
				Выдается при редактировании элемента.
			</description>
		</signal>
		<signal name="item_rmb_edited">
			<description>
				Выдается, когда элемент редактируется с помощью правой кнопки мыши.
			</description>
		</signal>
		<signal name="item_rmb_selected">
			<argument index="0" name="position" type="Vector2" />
			<description>
				Выдается при выборе элемента правой кнопкой мыши.
			</description>
		</signal>
		<signal name="item_selected">
			<description>
				Выдается при выборе элемента.
			</description>
		</signal>
		<signal name="multi_selected">
			<argument index="0" name="item" type="TreeItem" />
			<argument index="1" name="column" type="int" />
			<argument index="2" name="selected" type="bool" />
			<description>
				Выдается вместо [code]item_selected[/code], если [code]select_mode[/code] - [constant SELECT_MULTI].
			</description>
		</signal>
		<signal name="nothing_selected">
			<description>
				Выдается, когда при нажатии левой кнопки мыши не выбран ни один элемент.
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="SELECT_SINGLE" value="0" enum="SelectMode">
			Позволяет выбрать одну ячейку за раз. С точки зрения элементов можно выбрать только один элемент. В выбранном элементе может быть выделен только один столбец.
			В этом режиме курсор фокуса всегда скрыт, но он располагается на текущем выделении, делая выбранный элемент текущим фокусируемым элементом.
		</constant>
		<constant name="SELECT_ROW" value="1" enum="SelectMode">
			Позволяет выбрать одну строку за раз. С точки зрения элементов можно выбрать только один элемент. При этом в выбранном элементе выделяются все столбцы.
			В этом режиме курсор фокуса всегда скрыт, но он располагается в первом столбце текущего выделения, делая выбранный элемент текущим фокусируемым элементом.
		</constant>
		<constant name="SELECT_MULTI" value="2" enum="SelectMode">
			Позволяет выбирать несколько ячеек одновременно. С точки зрения элементов, разрешается выбирать несколько элементов. В каждом выбранном элементе может быть выделено несколько столбцов.
			В этом режиме виден курсор фокуса, но элемент или столбец под курсором не обязательно выбран.
		</constant>
		<constant name="DROP_MODE_DISABLED" value="0" enum="DropModeFlags">
			Отключает все секции падения, но по-прежнему позволяет обнаружить секцию падения "на предмете" с помощью [метода get_drop_section_at_position].
			[b]Примечание:[/b] Это флаг по умолчанию, он не имеет эффекта в сочетании с другими флагами.
		</constant>
		<constant name="DROP_MODE_ON_ITEM" value="1" enum="DropModeFlags">
			Включает секцию падения "на предмет". Эта секция падения охватывает весь элемент.
			В сочетании с [constant DROP_MODE_INBETWEEN] эта секция уменьшает высоту в два раза и остается выровненной по вертикали.
		</constant>
		<constant name="DROP_MODE_INBETWEEN" value="2" enum="DropModeFlags">
			Включает секции падения "над элементом" и "под элементом". Секция падения "над элементом" охватывает верхнюю половину элемента, а секция падения "под элементом" - нижнюю половину.
			В сочетании с [constant DROP_MODE_ON_ITEM] эти секции падения уменьшают высоту вдвое и остаются сверху/снизу соответственно.
		</constant>
	</constants>
	<theme_items>
		<theme_item name="custom_button_font_highlight" data_type="color" type="Color" default="Color( 0.94, 0.94, 0.94, 1 )">
			Текст [Color] для ячейки режима [constant TreeItem.CELL_MODE_CUSTOM] при наведении на нее курсора.
		</theme_item>
		<theme_item name="drop_position_color" data_type="color" type="Color" default="Color( 1, 0.3, 0.2, 1 )">
			[Color] used to draw possible drop locations. See [enum DropModeFlags] constants for further description of drop locations.
		</theme_item>
		<theme_item name="font_color" data_type="color" type="Color" default="Color( 0.69, 0.69, 0.69, 1 )">
			Текст [Color] элемента по умолчанию.
		</theme_item>
		<theme_item name="font_color_selected" data_type="color" type="Color" default="Color( 1, 1, 1, 1 )">
			Текст [Color], используемый при выборе элемента.
		</theme_item>
		<theme_item name="guide_color" data_type="color" type="Color" default="Color( 0, 0, 0, 0.1 )">
			[Color] руководящего принципа.
		</theme_item>
		<theme_item name="relationship_line_color" data_type="color" type="Color" default="Color( 0.27, 0.27, 0.27, 1 )">
			[Color] линии отношений.
		</theme_item>
		<theme_item name="title_button_color" data_type="color" type="Color" default="Color( 0.88, 0.88, 0.88, 1 )">
			Текст по умолчанию [Color] кнопки заголовка.
		</theme_item>
		<theme_item name="button_margin" data_type="constant" type="int" default="4">
			Горизонтальное пространство между каждой кнопкой в ячейке.
		</theme_item>
		<theme_item name="draw_guides" data_type="constant" type="int" default="1">
			Рисует направляющие, если они не равны нулю. Ориентир - это горизонтальная линия, проведенная внизу каждого элемента.
		</theme_item>
		<theme_item name="draw_relationship_lines" data_type="constant" type="int" default="0">
			Рисует линии отношений, если они не равны нулю. Линии отношений рисуются в начале дочерних элементов, чтобы показать иерархию.
		</theme_item>
		<theme_item name="hseparation" data_type="constant" type="int" default="4">[StyleBox] используется при нажатии кнопки заголовка.
			Горизонтальное пространство между ячейками элемента. Также используется в качестве поля в начале элемента, когда сворачивание отключено.
		</theme_item>
		<theme_item name="item_margin" data_type="constant" type="int" default="12">
			Горизонтальное поле в начале элемента. Используется, если для элемента включена функция сворачивания.
		</theme_item>
		<theme_item name="scroll_border" data_type="constant" type="int" default="4">
			Максимальное расстояние между курсором мыши и границей элемента управления для запуска прокрутки границы при перетаскивании.
		</theme_item>
		<theme_item name="scroll_speed" data_type="constant" type="int" default="12">
			Скорость прокрутки границ.
		</theme_item>
		<theme_item name="vseparation" data_type="constant" type="int" default="4">
			Вертикальная подложка внутри каждого элемента, т.е. расстояние между содержимым элемента и верхней/нижней границей.
		</theme_item>
		<theme_item name="font" data_type="font" type="Font">
			[Font] текста элемента.
		</theme_item>
		<theme_item name="title_button_font" data_type="font" type="Font">
			[Font] текст кнопки с заголовком.
		</theme_item>
		<theme_item name="arrow" data_type="icon" type="Texture">
			Значок стрелки, используемый, когда складной элемент не свернут.
		</theme_item>
		<theme_item name="arrow_collapsed" data_type="icon" type="Texture">
			Значок стрелки, используемый, когда складной элемент сворачивается.
		</theme_item>
		<theme_item name="checked" data_type="icon" type="Texture">
			Значок проверки, отображаемый при проверке ячейки режима [constant TreeItem.CELL_MODE_CHECK].
		</theme_item>
		<theme_item name="select_arrow" data_type="icon" type="Texture">
			Значок стрелки, отображаемый для ячейки режима [constant TreeItem.CELL_MODE_RANGE].
		</theme_item>
		<theme_item name="unchecked" data_type="icon" type="Texture">
			Значок галочки, отображаемый, когда ячейка режима [constant TreeItem.CELL_MODE_CHECK] снята с галочки.
		</theme_item>
		<theme_item name="updown" data_type="icon" type="Texture">
			Значок стрелки вверх, отображаемый для ячейки режима [constant TreeItem.CELL_MODE_RANGE].
		</theme_item>
		<theme_item name="bg" data_type="style" type="StyleBox">
			Стиль по умолчанию [StyleBox] для [Tree], т.е. используется, когда элемент управления не фокусируется.
		</theme_item>
		<theme_item name="bg_focus" data_type="style" type="StyleBox">
			[StyleBox] используется при фокусировке [Tree].
		</theme_item>
		<theme_item name="button_pressed" data_type="style" type="StyleBox">
			[StyleBox] используется при нажатии кнопки в дереве.
		</theme_item>
		<theme_item name="cursor" data_type="style" type="StyleBox">
			[StyleBox] используется для курсора, когда фокусируется [Tree].
		</theme_item>
		<theme_item name="cursor_unfocused" data_type="style" type="StyleBox">
			[StyleBox] используется для курсора, когда [Tree] не сфокусировано.
		</theme_item>
		<theme_item name="custom_button" data_type="style" type="StyleBox">
			Стиль по умолчанию [StyleBox] для ячейки режима [constant TreeItem.CELL_MODE_CUSTOM].
		</theme_item>
		<theme_item name="custom_button_hover" data_type="style" type="StyleBox">
			[StyleBox] для ячейки режима [constant TreeItem.CELL_MODE_CUSTOM] при наведении на нее курсора.
		</theme_item>
		<theme_item name="custom_button_pressed" data_type="style" type="StyleBox">
			[StyleBox] для ячейки режима [constant TreeItem.CELL_MODE_CUSTOM] при нажатии на нее.
		</theme_item>
		<theme_item name="selected" data_type="style" type="StyleBox">
			[StyleBox] для выбранных элементов, используется, когда [Tree] не фокусируется.
		</theme_item>
		<theme_item name="selected_focus" data_type="style" type="StyleBox">
			[StyleBox] для выбранных элементов, используется при фокусировке [Tree].
		</theme_item>
		<theme_item name="title_button_hover" data_type="style" type="StyleBox">
			[StyleBox] используется при наведении на кнопку заголовка.
		</theme_item>
		<theme_item name="title_button_normal" data_type="style" type="StyleBox">
			По умолчанию [StyleBox] для кнопки заголовка.
		</theme_item>
		<theme_item name="title_button_pressed" data_type="style" type="StyleBox">
			[StyleBox] используется при нажатии кнопки заголовка.
		</theme_item>
	</theme_items>
</class>
