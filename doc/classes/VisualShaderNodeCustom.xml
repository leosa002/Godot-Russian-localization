<?xml version="1.0" encoding="UTF-8" ?>
<class name="VisualShaderNodeCustom" inherits="VisualShaderNode" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Виртуальный класс для определения пользовательских [VisualShaderNode]ов для использования в редакторе визуальных шейдеров.
	</brief_description>
	<description>
		Наследуя этот класс, вы можете создать собственный скрипт [VisualShader], который будет автоматически добавлен в редактор визуальных шейдеров. Поведение [VisualShaderNode] определяется переопределением предоставленных виртуальных методов.
		Чтобы узел был зарегистрирован как аддон редактора, вы должны использовать ключевое слово [code]tool[/code] и указать [code]class_name[/code] для вашего пользовательского скрипта. Например:
		[codeblock]
		tool
		extends VisualShaderNodeCustom
		class_name VisualShaderNodeNoise
		[/codeblock]
	</description>
	<tutorials>
		<link>$DOCS_URL/tutorials/plugins/editor/visual_shader_plugins.html</link>
	</tutorials>
	<methods>
		<method name="_get_category" qualifiers="virtual">
			<return type="String" />
			<description>
				Переопределите этот метод, чтобы определить категорию связанного пользовательского узла в диалоге членов Visual Shader Editor. Путь может выглядеть как [code]"MyGame/MyFunctions/Noise"[/code].
				Определение этого метода является [b]необязательным[/b]. Если его не переопределить, то узел будет помещен в категорию "Custom".
			</description>
		</method>
		<method name="_get_code" qualifiers="virtual">
			<return type="String" />
			<argument index="0" name="input_vars" type="Array" />
			<argument index="1" name="output_vars" type="Array" />
			<argument index="2" name="mode" type="int" />
			<argument index="3" name="type" type="int" />
			<description>
				Переопределите этот метод, чтобы определить фактический код шейдера для связанного пользовательского узла. Код шейдера должен быть возвращен в виде строки, которая может иметь несколько строк (для удобства может быть использована конструкция [code]"""[/code] многострочной строки).
				Массивы [code]input_vars[/code] и [code]output_vars[/code] содержат строковые имена различных входных и выходных переменных, определяемых виртуальными методами [code]_get_input_*[/code] и [code]_get_output_*[/code] этого класса.
				Выходным портам могут быть присвоены значения в коде шейдера. Например, [code]return output_vars[0] + " = " + input_vars[0] + ";"[/code].
				Вы можете настроить генерируемый код в зависимости от [code]режима[/code] шейдера (см. [enum Shader.Mode]) и/или [code]типа[/code] (см. [enum VisualShader.Type]).
				Определение этого метода является [b]обязательным[/b].
			</description>
		</method>
		<method name="_get_description" qualifiers="virtual">
			<return type="String" />
			<description>
				Переопределите этот метод, чтобы определить описание связанного пользовательского узла в диалоге членов редактора Visual Shader Editor.
				Определение этого метода является [b]необязательным[/b].
			</description>
		</method>
		<method name="_get_global_code" qualifiers="virtual">
			<return type="String" />
			<argument index="0" name="mode" type="int" />
			<description>
				Переопределите этот метод, чтобы добавить код шейдера поверх глобального шейдера, чтобы определить свою собственную стандартную библиотеку многократно используемых методов, вариаций, констант, форм и т. д. Код шейдера должен быть возвращен в виде строки, которая может иметь несколько строк (для удобства можно использовать конструкцию [code]"""[/code] многострочной строки).
				Будьте осторожны с этой функциональностью, так как она может вызвать конфликт имен с другими пользовательскими узлами, поэтому не забудьте дать определяемым сущностям уникальные имена.
				Вы можете настроить генерируемый код в зависимости от [code]режима[/code] шейдера (см. [enum Shader.Mode]).
				Определение этого метода является [b]необязательным[/b].
			</description>
		</method>
		<method name="_get_input_port_count" qualifiers="virtual">
			<return type="int" />
			<description>
				Переопределите этот метод, чтобы определить количество входных портов связанного пользовательского узла.
				Определение этого метода является [b]обязательным[/b]. Если он не переопределен, узел не имеет входных портов.
			</description>
		</method>
		<method name="_get_input_port_name" qualifiers="virtual">
			<return type="String" />
			<argument index="0" name="port" type="int" />
			<description>
				Переопределите этот метод, чтобы задать имена входных портов связанного пользовательского узла. Имена используются как для входных слотов в редакторе, так и в качестве идентификаторов в коде шейдера, и передаются в массиве [code]input_vars[/code] в [метод _get_code].
				Определение этого метода [b]необязательно[/b], но рекомендуется. Если он не переопределен, входные порты именуются как [code]"in" + str(port)[/code].
			</description>
		</method>
		<method name="_get_input_port_type" qualifiers="virtual">
			<return type="int" />
			<argument index="0" name="port" type="int" />
			<description>
				Переопределите этот метод, чтобы определить возвращаемый тип каждого входного порта связанного пользовательского узла (см. [enum VisualShaderNode.PortType] для возможных типов).
				Определение этого метода [b]необязательно[/b], но рекомендуется. Если он не переопределен, входные порты будут возвращать тип [constant VisualShaderNode.PORT_TYPE_SCALAR].
			</description>
		</method>
		<method name="_get_name" qualifiers="virtual">
			<return type="String" />
			<description>
				Переопределите этот метод, чтобы определить имя связанного пользовательского узла в диалоге членов и графике редактора Visual Shader Editor.
				Определение этого метода [b]необязательно[/b], но рекомендуется. Если его не переопределить, узел будет назван "Unnamed".
			</description>
		</method>
		<method name="_get_output_port_count" qualifiers="virtual">
			<return type="int" />
			<description>
				Переопределите этот метод, чтобы определить количество выходных портов связанного пользовательского узла.
				Определение этого метода является [b]обязательным[/b]. Если он не переопределен, узел не имеет выходных портов.
			</description>
		</method>
		<method name="_get_output_port_name" qualifiers="virtual">
			<return type="String" />
			<argument index="0" name="port" type="int" />
			<description>
				Переопределите этот метод, чтобы задать имена выходных портов связанного пользовательского узла. Имена используются как для слотов вывода в редакторе, так и в качестве идентификаторов в коде шейдера, и передаются в массиве [code]output_vars[/code] в [метод _get_code].
				Определение этого метода [b]необязательно[/b], но рекомендуется. Если он не переопределен, порты вывода именуются как [code]"out" + str(port)[/code].
			</description>
		</method>
		<method name="_get_output_port_type" qualifiers="virtual">
			<return type="int" />
			<argument index="0" name="port" type="int" />
			<description>
				Переопределите этот метод, чтобы определить возвращаемый тип каждого выходного порта связанного пользовательского узла (см. [enum VisualShaderNode.PortType] для возможных типов).
				Определение этого метода [b]необязательно[/b], но рекомендуется. Если он не переопределен, выходные порты будут возвращать тип [constant VisualShaderNode.PORT_TYPE_SCALAR].
			</description>
		</method>
		<method name="_get_return_icon_type" qualifiers="virtual">
			<return type="int" />
			<description>
				Переопределите этот метод, чтобы определить иконку возврата связанного пользовательского узла в диалоге членов Visual Shader Editor.
				Определение этого метода является [b]необязательным[/b]. Если он не переопределен, значок возврата не отображается.
			</description>
		</method>
		<method name="_get_subcategory" qualifiers="virtual">
			<return type="String" />
			<description>
				Переопределите этот метод, чтобы определить подкатегорию связанного пользовательского узла в диалоге членов редактора Visual Shader Editor.
				Определение этого метода является [b]необязательным[/b]. Если он не переопределен, узел будет помещен в корень основной категории (см. [метод _get_category]).
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
