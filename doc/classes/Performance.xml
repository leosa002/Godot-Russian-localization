<?xml version="1.0" encoding="UTF-8" ?>
<class name="Performance" inherits="Object" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Предоставляет данные о производительности.
	</brief_description>
	<description>
		Этот класс предоставляет доступ к ряду различных мониторов, связанных с производительностью, таких как использование памяти, вызовы отрисовки и FPS. Это те же значения, что отображаются на вкладке [b]Monitor[/b] в панели [b]Debugger[/b] редактора. Используя метод [method get_monitor] этого класса, вы можете получить доступ к этим данным из своего кода.
		[b]Примечание:[/b] Некоторые из этих мониторов доступны только в режиме отладки и всегда будут возвращать 0 при использовании в релизной сборке.
		[b]Примечание:[/b] Многие из этих мониторов не обновляются в реальном времени, поэтому между изменениями может быть небольшая задержка.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_monitor" qualifiers="const">
			<return type="float" />
			<argument index="0" name="monitor" type="int" enum="Performance.Monitor" />
			<description>
				Возвращает значение одного из доступных мониторов. В качестве аргумента следует указать одну из констант [enum Monitor], например:
				[codeblock]
				print(Performance.get_monitor(Performance.TIME_FPS)) # Выводит FPS в консоль
				[/codeblock]
			</description>
		</method>
	</methods>
	<constants>
		<constant name="TIME_FPS" value="0" enum="Monitor">
			Количество кадров в секунду.
		</constant>
		<constant name="TIME_PROCESS" value="1" enum="Monitor">
			Время выполнения одного кадра, в секундах.
		</constant>
		<constant name="TIME_PHYSICS_PROCESS" value="2" enum="Monitor">
			Время, необходимое для завершения одного физического кадра, в секундах.
		</constant>
		<constant name="MEMORY_STATIC" value="3" enum="Monitor">
			Статическая память, используемая в данный момент, в байтах. Недоступно в сборках релизов.
		</constant>
		<constant name="MEMORY_DYNAMIC" value="4" enum="Monitor">
			Динамическая память, используемая в данный момент, в байтах. Недоступно в сборках релизов.
		</constant>
		<constant name="MEMORY_STATIC_MAX" value="5" enum="Monitor">
			Доступная статическая память. Недоступно в релизных сборках.
		</constant>
		<constant name="MEMORY_DYNAMIC_MAX" value="6" enum="Monitor">
			Доступная динамическая память. Недоступно в сборках релиза.
		</constant>
		<constant name="MEMORY_MESSAGE_BUFFER_MAX" value="7" enum="Monitor">
			Наибольший объем памяти, использованный буфером очереди сообщений, в байтах. Очередь сообщений используется для отложенных вызовов функций и уведомлений.
		</constant>
		<constant name="OBJECT_COUNT" value="8" enum="Monitor">
			Количество объектов, инстансированных в данный момент (включая узлы/ноды).
		</constant>
		<constant name="OBJECT_RESOURCE_COUNT" value="9" enum="Monitor">
			Количество ресурсов, используемых в данный момент.
		</constant>
		<constant name="OBJECT_NODE_COUNT" value="10" enum="Monitor">
			Количество узлов, инстансированных в дереве сцены. Сюда также входит корневой узел.
		</constant>
		<constant name="OBJECT_ORPHAN_NODE_COUNT" value="11" enum="Monitor">
			Количество узлов-сирот, т.е. узлов, не являющихся родителями узла дерева сцены.
		</constant>
		<constant name="RENDER_OBJECTS_IN_FRAME" value="12" enum="Monitor">
			3D-объекты, отрисованные за кадр.
		</constant>
		<constant name="RENDER_VERTICES_IN_FRAME" value="13" enum="Monitor">
			Вершины рисующиеся за кадр. Только 3D.
		</constant>
		<constant name="RENDER_MATERIAL_CHANGES_IN_FRAME" value="14" enum="Monitor">
			Смена материала в каждом кадре. Только 3D.
		</constant>
		<constant name="RENDER_SHADER_CHANGES_IN_FRAME" value="15" enum="Monitor">
			Смена шейдеров в каждом кадре. Только 3D.
		</constant>
		<constant name="RENDER_SURFACE_CHANGES_IN_FRAME" value="16" enum="Monitor">
			Изменение поверхности рендера в каждом кадре. Только 3D.
		</constant>
		<constant name="RENDER_DRAW_CALLS_IN_FRAME" value="17" enum="Monitor">
			Вызовы рисования за кадр. Только 3D.
		</constant>
		<constant name="RENDER_2D_ITEMS_IN_FRAME" value="18" enum="Monitor">
			Элементы или объединенные элементы, нарисованные на один кадр.
		</constant>
		<constant name="RENDER_2D_DRAW_CALLS_IN_FRAME" value="19" enum="Monitor">
			Вызовы рисования за кадр.
		</constant>
		<constant name="RENDER_VIDEO_MEM_USED" value="20" enum="Monitor">
			Объем используемой видеопамяти, т.е. текстурной и вершинной памяти вместе взятых.
		</constant>
		<constant name="RENDER_TEXTURE_MEM_USED" value="21" enum="Monitor">
			Объем используемой текстурной памяти.
		</constant>
		<constant name="RENDER_VERTEX_MEM_USED" value="22" enum="Monitor">
			Объем используемой вершинной памяти.
		</constant>
		<constant name="RENDER_USAGE_VIDEO_MEM_TOTAL" value="23" enum="Monitor">
			Не реализовано в бэкендах рендеринга GLES2 и GLES3, всегда возвращает 0.
		</constant>
		<constant name="PHYSICS_2D_ACTIVE_OBJECTS" value="24" enum="Monitor">
			Количество активных узлов [RigidBody2D] в игре.
		</constant>
		<constant name="PHYSICS_2D_COLLISION_PAIRS" value="25" enum="Monitor">
			Количество пар столкновений в физическом движке 2D.
		</constant>
		<constant name="PHYSICS_2D_ISLAND_COUNT" value="26" enum="Monitor">
			Количество островов в 2D физическом движке.
		</constant>
		<constant name="PHYSICS_3D_ACTIVE_OBJECTS" value="27" enum="Monitor">
			Количество активных узлов [RigidBody] и [VehicleBody] в игре.
		</constant>
		<constant name="PHYSICS_3D_COLLISION_PAIRS" value="28" enum="Monitor">
			Количество пар столкновений в физическом движке 3D.
		</constant>
		<constant name="PHYSICS_3D_ISLAND_COUNT" value="29" enum="Monitor">
			Количество островов в физическом движке 3D.
		</constant>
		<constant name="AUDIO_OUTPUT_LATENCY" value="30" enum="Monitor">
			Задержка выходного сигнала [AudioServer].
		</constant>
		<constant name="MONITOR_MAX" value="31" enum="Monitor">
			Представляет размер перечисления [enum Monitor].
		</constant>
	</constants>
</class>
