<?xml version="1.0" encoding="UTF-8" ?>
<class name="ParticlesMaterial" inherits="Material" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Свойства частиц для узлов [Particles] и [Particles2D].
	</brief_description>
	<description>
		ParticlesMaterial определяет свойства и поведение частиц. Он используется в [code]process_material[/code] узлов эмиттера [Particles] и [Particles2D].
		Некоторые свойства этого материала применяются к каждой частице при испускании, а к другим можно применить [CurveTexture] для изменения значений в течение времени жизни частицы.
		Когда к свойству применяется коэффициент случайности, он используется для масштабирования этого свойства на случайную величину. Коэффициент случайности используется для интерполяции между [code]1.0[/code] и случайным числом меньше единицы, результат умножается на свойство, чтобы получить рандомизированное свойство. Например, случайное соотношение [code]0.4[/code] изменит исходное свойство на [code]0.4-1.0[/code] от его первоначального значения.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_flag" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="flag" type="int" enum="ParticlesMaterial.Flags" />
			<description>
				Возвращает [code]true[/code], если указанный флаг включен.
			</description>
		</method>
		<method name="get_param" qualifiers="const">
			<return type="float" />
			<argument index="0" name="param" type="int" enum="ParticlesMaterial.Parameter" />
			<description>
				Возвращает значение указанного параметра.
			</description>
		</method>
		<method name="get_param_randomness" qualifiers="const">
			<return type="float" />
			<argument index="0" name="param" type="int" enum="ParticlesMaterial.Parameter" />
			<description>
				Возвращает коэффициент случайности, связанный с указанным параметром.
			</description>
		</method>
		<method name="get_param_texture" qualifiers="const">
			<return type="Texture" />
			<argument index="0" name="param" type="int" enum="ParticlesMaterial.Parameter" />
			<description>
				Возвращает [Texture], используемую указанным параметром.
			</description>
		</method>
		<method name="set_flag">
			<return type="void" />
			<argument index="0" name="flag" type="int" enum="ParticlesMaterial.Flags" />
			<argument index="1" name="enable" type="bool" />
			<description>
				Если [code]true[/code], включает указанный флаг. Параметры см. в [enum Flags].
			</description>
		</method>
		<method name="set_param">
			<return type="void" />
			<argument index="0" name="param" type="int" enum="ParticlesMaterial.Parameter" />
			<argument index="1" name="value" type="float" />
			<description>
				Устанавливает заданный [enum Parameter].
			</description>
		</method>
		<method name="set_param_randomness">
			<return type="void" />
			<argument index="0" name="param" type="int" enum="ParticlesMaterial.Parameter" />
			<argument index="1" name="randomness" type="float" />
			<description>
				Устанавливает коэффициент случайности для указанного [enum Parameter].
			</description>
		</method>
		<method name="set_param_texture">
			<return type="void" />
			<argument index="0" name="param" type="int" enum="ParticlesMaterial.Parameter" />
			<argument index="1" name="texture" type="Texture" />
			<description>
				Устанавливает [Texture] для указанного [enum Parameter].
			</description>
		</method>
	</methods>
	<members>
		<member name="angle" type="float" setter="set_param" getter="get_param" default="0.0">
			Начальное вращение, применяемое к каждой частице, в градусах.
			[b]Примечание:[/b] Применяется только в том случае, если [member flag_disable_z] или [member flag_rotate_y] равны [code]true[/code] или если в [SpatialMaterial], используемом для отрисовки частиц, используется [constant SpatialMaterial.BILLBOARD_PARTICLES].
		</member>
		<member name="angle_curve" type="Texture" setter="set_param_texture" getter="get_param_texture">
			Вращение каждой частицы будет анимировано вдоль этой [CurveTexture].
		</member>
		<member name="angle_random" type="float" setter="set_param_randomness" getter="get_param_randomness" default="0.0">
			Коэффициент случайности вращения.
		</member>
		<member name="angular_velocity" type="float" setter="set_param" getter="get_param" default="0.0">
			Начальная угловая скорость, применяемая к каждой частице, в [i]градусах[/i] в секунду. Устанавливает скорость вращения частицы.
			[b]Примечание:[/b] Применяется только в том случае, если [member flag_disable_z] или [member flag_rotate_y] равны [code]true[/code] или [SpatialMaterial], используемый для отрисовки частиц, использует [constant SpatialMaterial.BILLBOARD_PARTICLES].
		</member>
		<member name="angular_velocity_curve" type="Texture" setter="set_param_texture" getter="get_param_texture">
			Угловая скорость каждой частицы будет меняться вдоль этой [CurveTexture].
		</member>
		<member name="angular_velocity_random" type="float" setter="set_param_randomness" getter="get_param_randomness" default="0.0">
			Коэффициент случайности угловой скорости.
		</member>
		<member name="anim_offset" type="float" setter="set_param" getter="get_param" default="0.0">
			Смещение анимации частиц.
		</member>
		<member name="anim_offset_curve" type="Texture" setter="set_param_texture" getter="get_param_texture">
			Смещение анимации каждой частицы будет меняться вдоль этой [CurveTexture].
		</member>
		<member name="anim_offset_random" type="float" setter="set_param_randomness" getter="get_param_randomness" default="0.0">
			Коэффициент случайности смещения анимации.
		</member>
		<member name="anim_speed" type="float" setter="set_param" getter="get_param" default="0.0">
			Скорость анимации частиц.
		</member>
		<member name="anim_speed_curve" type="Texture" setter="set_param_texture" getter="get_param_texture">
			Скорость анимации каждой частицы будет меняться вдоль этой [CurveTexture].
		</member>
		<member name="anim_speed_random" type="float" setter="set_param_randomness" getter="get_param_randomness" default="0.0">
			Коэффициент случайности скорости анимации.
		</member>
		<member name="color" type="Color" setter="set_color" getter="get_color" default="Color( 1, 1, 1, 1 )">
			Начальный цвет каждой частицы. Если у [Particles2D] или [Particles] определена [code]текстура[/code], она будет умножена на этот цвет.
			[b]Примечание:[/b] [member color] умножает цвета вершин сетки частиц. Чтобы эффект был заметен для [SpatialMaterial], [member SpatialMaterial.vertex_color_use_as_albedo] [i]должен[/i] быть [code]true[/code]. Для [ShaderMaterial], [code]ALBEDO *= COLOR.rgb;[/code] должно быть вставлено в функцию шейдера [code]fragment()[/code]. В противном случае [member color] не будет иметь видимого эффекта.
		</member>
		<member name="color_initial_ramp" type="Texture" setter="set_color_initial_ramp" getter="get_color_initial_ramp">
			Начальный цвет каждой частицы будет меняться в соответствии с этим [GradientTexture] (умноженным на [member color]).
			[b]Примечание:[/b] [member color_initial_ramp] умножает цвета вершин сетки частиц. Чтобы эффект был заметен для [SpatialMaterial], [member SpatialMaterial.vertex_color_use_as_albedo] [i]должен[/i] быть [code]true[/code]. Для [ShaderMaterial], [code]ALBEDO *= COLOR.rgb;[/code] должен быть вставлен в функцию шейдера [code]fragment()[/code]. В противном случае [member color_initial_ramp] не будет иметь видимого эффекта.
		</member>
		<member name="color_ramp" type="Texture" setter="set_color_ramp" getter="get_color_ramp">
			Цвет каждой частицы будет меняться по этой [GradientTexture] в течение всего времени ее существования (умноженной на [member color]).
			[b]Примечание:[/b] [member color_ramp] умножает цвета вершин сетки частиц. Чтобы эффект был заметен для [SpatialMaterial], [member SpatialMaterial.vertex_color_use_as_albedo] [i]должен[/i] быть [code]true[/code]. Для [ShaderMaterial], [code]ALBEDO *= COLOR.rgb;[/code] должно быть вставлено в функцию [code]fragment()[/code] шейдера. В противном случае [member color_ramp] не будет иметь видимого эффекта.
		</member>
		<member name="damping" type="float" setter="set_param" getter="get_param" default="0.0">
			Скорость, с которой частицы теряют скорость.
		</member>
		<member name="damping_curve" type="Texture" setter="set_param_texture" getter="get_param_texture">
			Демпфирование будет изменяться вдоль этой [CurveTexture].
		</member>
		<member name="damping_random" type="float" setter="set_param_randomness" getter="get_param_randomness" default="0.0">
			Коэффициент случайности демпфирования.
		</member>
		<member name="direction" type="Vector3" setter="set_direction" getter="get_direction" default="Vector3( 1, 0, 0 )">
			Единичный вектор, задающий направление испускания частиц.
		</member>
		<member name="emission_box_extents" type="Vector3" setter="set_emission_box_extents" getter="get_emission_box_extents">
			Размеры коробки, если для [code]emission_shape[/code] установлено значение [constant EMISSION_SHAPE_BOX].
		</member>
		<member name="emission_color_texture" type="Texture" setter="set_emission_color_texture" getter="get_emission_color_texture">
			Цвет частиц будет модулироваться цветом, определенным путем выборки этой текстуры в той же точке, что и [member emission_point_texture].
			[b]Примечание:[/b] [member emission_color_texture] умножает цвета вершин сетки частиц. Чтобы эффект был заметен для [SpatialMaterial], [member SpatialMaterial.vertex_color_use_as_albedo] [i]должен[/i] быть [code]true[/code]. Для [ShaderMaterial], [code]ALBEDO *= COLOR.rgb;[/code] должно быть вставлено в функцию шейдера [code]fragment()[/code]. В противном случае [member emission_color_texture] не будет иметь видимого эффекта.
		</member>
		<member name="emission_normal_texture" type="Texture" setter="set_emission_normal_texture" getter="get_emission_normal_texture">
			Скорость и вращение частиц будут заданы путем выборки этой текстуры в той же точке, что и [member emission_point_texture]. Используется только в [constant EMISSION_SHAPE_DIRECTED_POINTS]. Может быть создана автоматически из сетки или узла путем выбора "Create Emission Points from Mesh/Node" под инструментом "Particles" на панели инструментов.
		</member>
		<member name="emission_point_count" type="int" setter="set_emission_point_count" getter="get_emission_point_count">
			Количество точек выброса, если для [code]emission_shape[/code] установлено значение [constant EMISSION_SHAPE_POINTS] или [constant EMISSION_SHAPE_DIRECTED_POINTS].
		</member>
		<member name="emission_point_texture" type="Texture" setter="set_emission_point_texture" getter="get_emission_point_texture">
			Частицы будут испускаться в позициях, определяемых выборкой этой текстуры в случайной позиции. Используется с [constant EMISSION_SHAPE_POINTS] и [constant EMISSION_SHAPE_DIRECTED_POINTS]. Может быть создана автоматически из сетки или узла, если выбрать "Create Emission Points from Mesh/Node" в панели инструментов "Particles".
		</member>
		<member name="emission_ring_axis" type="Vector3" setter="set_emission_ring_axis" getter="get_emission_ring_axis">
			Ось кольца при использовании эмиттера [constant EMISSION_SHAPE_RING].
		</member>
		<member name="emission_ring_height" type="float" setter="set_emission_ring_height" getter="get_emission_ring_height">
			Высота кольца при использовании эмиттера [константа EMISSION_SHAPE_RING].
		</member>
		<member name="emission_ring_inner_radius" type="float" setter="set_emission_ring_inner_radius" getter="get_emission_ring_inner_radius">
			Внутренний радиус кольца при использовании эмиттера [константа EMISSION_SHAPE_RING].
		</member>
		<member name="emission_ring_radius" type="float" setter="set_emission_ring_radius" getter="get_emission_ring_radius">
			Радиус кольца при использовании эмиттера [константа EMISSION_SHAPE_RING].
		</member>
		<member name="emission_shape" type="int" setter="set_emission_shape" getter="get_emission_shape" enum="ParticlesMaterial.EmissionShape" default="0">
			Частицы будут испускаться внутри этой области. Для значений используйте константы [enum EmissionShape].
		</member>
		<member name="emission_sphere_radius" type="float" setter="set_emission_sphere_radius" getter="get_emission_sphere_radius">
			Радиус сферы, если [code]emission_shape[/code] установлен на [constant EMISSION_SHAPE_SPHERE].
		</member>
		<member name="flag_align_y" type="bool" setter="set_flag" getter="get_flag" default="false">
			Совместите ось Y частицы с направлением ее скорости.
		</member>
		<member name="flag_disable_z" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], частицы не будут двигаться по оси Z.
		</member>
		<member name="flag_rotate_y" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], частицы поворачиваются вокруг оси Y на [member angle].
		</member>
		<member name="flatness" type="float" setter="set_flatness" getter="get_flatness" default="0.0">
			Величина [member spread] вдоль оси Y.
		</member>
		<member name="gravity" type="Vector3" setter="set_gravity" getter="get_gravity" default="Vector3( 0, -9.8, 0 )">
			Гравитация действует на все частицы.
		</member>
		<member name="hue_variation" type="float" setter="set_param" getter="get_param" default="0.0">
			Начальная вариация оттенка, применяемая к каждой частице.
		</member>
		<member name="hue_variation_curve" type="Texture" setter="set_param_texture" getter="get_param_texture">
			Оттенок каждой частицы будет меняться в соответствии с этой [CurveTexture].
		</member>
		<member name="hue_variation_random" type="float" setter="set_param_randomness" getter="get_param_randomness" default="0.0">
			Коэффициент случайности изменения оттенка.
		</member>
		<member name="initial_velocity" type="float" setter="set_param" getter="get_param" default="0.0">
			Величина начальной скорости для каждой частицы. Направление берется из [member spread] и ориентации узла.
		</member>
		<member name="initial_velocity_random" type="float" setter="set_param_randomness" getter="get_param_randomness" default="0.0">
			Коэффициент случайности начальной скорости.
		</member>
		<member name="lifetime_randomness" type="float" setter="set_lifetime_randomness" getter="get_lifetime_randomness" default="0.0">
			Коэффициент случайности времени жизни частиц.
		</member>
		<member name="linear_accel" type="float" setter="set_param" getter="get_param" default="0.0">
			Линейное ускорение, действующее на каждую частицу в направлении движения.
		</member>
		<member name="linear_accel_curve" type="Texture" setter="set_param_texture" getter="get_param_texture">
			Линейное ускорение каждой частицы будет меняться вдоль этой [CurveTexture].
		</member>
		<member name="linear_accel_random" type="float" setter="set_param_randomness" getter="get_param_randomness" default="0.0">
			Коэффициент случайности линейного ускорения.
		</member>
		<member name="orbit_velocity" type="float" setter="set_param" getter="get_param">
			Орбитальная скорость, приложенная к каждой частице. Заставляет частицы кружить вокруг начала координат. Задается в количестве полных оборотов вокруг начала координат в секунду.
			[b]Примечание:[/b] Доступно только в том случае, если [member flag_disable_z] имеет значение [code]true[/code].
		</member>
		<member name="orbit_velocity_curve" type="Texture" setter="set_param_texture" getter="get_param_texture">
			Орбитальная скорость каждой частицы будет меняться вдоль этой [CurveTexture].
		</member>
		<member name="orbit_velocity_random" type="float" setter="set_param_randomness" getter="get_param_randomness">
			Коэффициент случайности орбитальной скорости.
		</member>
		<member name="radial_accel" type="float" setter="set_param" getter="get_param" default="0.0">
			Радиальное ускорение, применяемое к каждой частице. Заставляет частицу ускоряться в направлении от начала координат.
		</member>
		<member name="radial_accel_curve" type="Texture" setter="set_param_texture" getter="get_param_texture">
			Радиальное ускорение каждой частицы будет меняться вдоль этой [CurveTexture].
		</member>
		<member name="radial_accel_random" type="float" setter="set_param_randomness" getter="get_param_randomness" default="0.0">
			Коэффициент случайности радиального ускорения.
		</member>
		<member name="scale" type="float" setter="set_param" getter="get_param" default="1.0">
			Начальный масштаб, применяемый к каждой частице.
		</member>
		<member name="scale_curve" type="Texture" setter="set_param_texture" getter="get_param_texture">
			Масштаб каждой частицы будет меняться в соответствии с этой [CurveTexture].
		</member>
		<member name="scale_random" type="float" setter="set_param_randomness" getter="get_param_randomness" default="0.0">
			Коэффициент случайности шкалы.
		</member>
		<member name="spread" type="float" setter="set_spread" getter="get_spread" default="45.0">
			Начальное направление каждой частицы варьируется от [code]+spread[/code] до [code]-spread[/code] градусов.
		</member>
		<member name="tangential_accel" type="float" setter="set_param" getter="get_param" default="0.0">
			Тангенциальное ускорение, приложенное к каждой частице. Тангенциальное ускорение перпендикулярно скорости частицы, что придает частицам вихревое движение.
		</member>
		<member name="tangential_accel_curve" type="Texture" setter="set_param_texture" getter="get_param_texture">
			Тангенциальное ускорение каждой частицы будет меняться вдоль этой [CurveTexture].
		</member>
		<member name="tangential_accel_random" type="float" setter="set_param_randomness" getter="get_param_randomness" default="0.0">
			Коэффициент случайности тангенциального ускорения.
		</member>
		<member name="trail_color_modifier" type="GradientTexture" setter="set_trail_color_modifier" getter="get_trail_color_modifier">
			Цвет частиц дорожки будет меняться в зависимости от этого [GradientTexture].
		</member>
		<member name="trail_divisor" type="int" setter="set_trail_divisor" getter="get_trail_divisor" default="1">
			Излучатель будет испускать [code]количество[/code], разделенное на [code]trail_divisor[/code] частиц. Оставшиеся частицы будут использованы в качестве следа (следов).
		</member>
		<member name="trail_size_modifier" type="CurveTexture" setter="set_trail_size_modifier" getter="get_trail_size_modifier">
			Размер частиц дорожки будет меняться вдоль этой [CurveTexture].
		</member>
	</members>
	<constants>
		<constant name="PARAM_INITIAL_LINEAR_VELOCITY" value="0" enum="Parameter">
			Используется вместе с [method set_param], [method set_param_randomness] и [method set_param_texture] для задания свойств начальной скорости.
		</constant>
		<constant name="PARAM_ANGULAR_VELOCITY" value="1" enum="Parameter">
			Используется вместе с [method set_param], [method set_param_randomness] и [method set_param_texture] для задания свойств угловой скорости.
		</constant>
		<constant name="PARAM_ORBIT_VELOCITY" value="2" enum="Parameter">
			Используйте вместе с [method set_param], [method set_param_randomness] и [method set_param_texture] для задания свойств орбитальной скорости.
		</constant>
		<constant name="PARAM_LINEAR_ACCEL" value="3" enum="Parameter">
			Используется с [method set_param], [method set_param_randomness] и [method set_param_texture] для установки свойств линейного ускорения.
		</constant>
		<constant name="PARAM_RADIAL_ACCEL" value="4" enum="Parameter">
			Используется вместе с [method set_param], [method set_param_randomness] и [method set_param_texture] для установки свойств радиального ускорения.
		</constant>
		<constant name="PARAM_TANGENTIAL_ACCEL" value="5" enum="Parameter">
			Используется вместе с [method set_param], [method set_param_randomness] и [method set_param_texture] для задания свойств тангенциального ускорения.
		</constant>
		<constant name="PARAM_DAMPING" value="6" enum="Parameter">
			Используйте вместе с [method set_param], [method set_param_randomness] и [method set_param_texture] для установки свойств демпфирования.
		</constant>
		<constant name="PARAM_ANGLE" value="7" enum="Parameter">
			Используйте вместе с [method set_param], [method set_param_randomness] и [method set_param_texture] для установки свойств угла.
		</constant>
		<constant name="PARAM_SCALE" value="8" enum="Parameter">
			Используйте вместе с [method set_param], [method set_param_randomness] и [method set_param_texture] для установки свойств масштаба.
		</constant>
		<constant name="PARAM_HUE_VARIATION" value="9" enum="Parameter">
			Используйте вместе с [method set_param], [method set_param_randomness] и [method set_param_texture] для установки свойств изменения оттенка.
		</constant>
		<constant name="PARAM_ANIM_SPEED" value="10" enum="Parameter">
			Используется вместе с [method set_param], [method set_param_randomness] и [method set_param_texture] для установки свойств скорости анимации.
		</constant>
		<constant name="PARAM_ANIM_OFFSET" value="11" enum="Parameter">
			Используется вместе с [method set_param], [method set_param_randomness] и [method set_param_texture] для установки свойств смещения анимации.
		</constant>
		<constant name="PARAM_MAX" value="12" enum="Parameter">
			Представляет размер перечисления [enum Parameter].
		</constant>
		<constant name="FLAG_ALIGN_Y_TO_VELOCITY" value="0" enum="Flags">
			Используется с [method set_flag] для установки [member flag_align_y].
		</constant>
		<constant name="FLAG_ROTATE_Y" value="1" enum="Flags">
			Используется с [method set_flag] для установки [member flag_rotate_y].
		</constant>
		<constant name="FLAG_DISABLE_Z" value="2" enum="Flags">
			Используется с [method set_flag] для установки [member flag_disable_z].
		</constant>
		<constant name="FLAG_MAX" value="3" enum="Flags">
			Представляет размер перечисления [enum Flags].
		</constant>
		<constant name="EMISSION_SHAPE_POINT" value="0" enum="EmissionShape">
			Все частицы будут испускаться из одной точки.
		</constant>
		<constant name="EMISSION_SHAPE_SPHERE" value="1" enum="EmissionShape">
			Частицы будут испускаться в объеме сферы.
		</constant>
		<constant name="EMISSION_SHAPE_BOX" value="2" enum="EmissionShape">
			Частицы будут испускаться в объеме коробки.
		</constant>
		<constant name="EMISSION_SHAPE_POINTS" value="3" enum="EmissionShape">
			Частицы будут испускаться в позиции, определенной путем выборки случайной точки на [member emission_point_texture]. Цвет частиц будет модулироваться [member emission_color_texture].
		</constant>
		<constant name="EMISSION_SHAPE_DIRECTED_POINTS" value="4" enum="EmissionShape">
			Частицы будут испускаться в позиции, определенной путем выборки случайной точки на [member emission_point_texture]. Скорость и вращение частиц будут заданы на основе [member emission_normal_texture]. Цвет частиц будет модулироваться [member emission_color_texture].
		</constant>
		<constant name="EMISSION_SHAPE_RING" value="5" enum="EmissionShape">
			Частицы будут испускаться в виде кольца или цилиндра.
		</constant>
		<constant name="EMISSION_SHAPE_MAX" value="6" enum="EmissionShape">
			Представляет размер перечисления [enum EmissionShape].
		</constant>
	</constants>
</class>
