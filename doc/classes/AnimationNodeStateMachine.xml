<?xml version="1.0" encoding="UTF-8" ?>
<class name="AnimationNodeStateMachine" inherits="AnimationRootNode" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Машина состояний для управления анимацией.
	</brief_description>
	<description>
		Содержит несколько узлов, представляющих состояния анимации, соединенных в граф. Переходы между узлами могут происходить автоматически или с помощью кода, используя алгоритм кратчайшего пути. Для программного управления узлом [AnimationTree] из него можно извлечь объект [AnimationNodeStateMachinePlayback].
		[b]Пример:[/b]
		[codeblock]
		var state_machine = $AnimationTree.get("parameters/playback")
		state_machine.travel("some_state")
		[/codeblock]
	</description>
	<tutorials>
		<link>$DOCS_URL/tutorials/animation/animation_tree.html</link>
	</tutorials>
	<methods>
		<method name="add_node">
			<return type="void" />
			<argument index="0" name="name" type="String" />
			<argument index="1" name="node" type="AnimationNode" />
			<argument index="2" name="position" type="Vector2" default="Vector2( 0, 0 )" />
			<description>
				Добавляет новый узел в граф. Для отображения в редакторе используется [code]позиция[/code].
			</description>
		</method>
		<method name="add_transition">
			<return type="void" />
			<argument index="0" name="from" type="String" />
			<argument index="1" name="to" type="String" />
			<argument index="2" name="transition" type="AnimationNodeStateMachineTransition" />
			<description>
				Добавляет переход между заданными узлами.
			</description>
		</method>
		<method name="get_end_node" qualifiers="const">
			<return type="String" />
			<description>
				Возвращает конечный узел графа.
			</description>
		</method>
		<method name="get_graph_offset" qualifiers="const">
			<return type="Vector2" />
			<description>
				Возвращает смещение графика при отрисовке. Используется для отображения в редакторе.
			</description>
		</method>
		<method name="get_node" qualifiers="const">
			<return type="AnimationNode" />
			<argument index="0" name="name" type="String" />
			<description>
				Возвращает узел анимации с заданным именем.
			</description>
		</method>
		<method name="get_node_name" qualifiers="const">
			<return type="String" />
			<argument index="0" name="node" type="AnimationNode" />
			<description>
				Возвращает имя заданного узла анимации.
			</description>
		</method>
		<method name="get_node_position" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="name" type="String" />
			<description>
				Возвращает координаты заданного узла. Используется для отображения в редакторе.
			</description>
		</method>
		<method name="get_start_node" qualifiers="const">
			<return type="String" />
			<description>
				Возвращает конечный узел графа.
			</description>
		</method>
		<method name="get_transition" qualifiers="const">
			<return type="AnimationNodeStateMachineTransition" />
			<argument index="0" name="idx" type="int" />
			<description>
				Возвращает заданный переход.
			</description>
		</method>
		<method name="get_transition_count" qualifiers="const">
			<return type="int" />
			<description>
				Возвращает количество соединений в графе.
			</description>
		</method>
		<method name="get_transition_from" qualifiers="const">
			<return type="String" />
			<argument index="0" name="idx" type="int" />
			<description>
				Возвращает начальный узел данного перехода.
			</description>
		</method>
		<method name="get_transition_to" qualifiers="const">
			<return type="String" />
			<argument index="0" name="idx" type="int" />
			<description>
				Возвращает конечный узел данного перехода.
			</description>
		</method>
		<method name="has_node" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="name" type="String" />
			<description>
				Возвращает [code]true[/code], если граф содержит заданную вершину.
			</description>
		</method>
		<method name="has_transition" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="from" type="String" />
			<argument index="1" name="to" type="String" />
			<description>
				Возвращает [code]true[/code], если между заданными узлами существует переход.
			</description>
		</method>
		<method name="remove_node">
			<return type="void" />
			<argument index="0" name="name" type="String" />
			<description>
				Удаляет заданный узел из графа.
			</description>
		</method>
		<method name="remove_transition">
			<return type="void" />
			<argument index="0" name="from" type="String" />
			<argument index="1" name="to" type="String" />
			<description>
				Удаляет переход между двумя указанными узлами.
			</description>
		</method>
		<method name="remove_transition_by_index">
			<return type="void" />
			<argument index="0" name="idx" type="int" />
			<description>
				Удаляет заданный переход по индексу.
			</description>
		</method>
		<method name="rename_node">
			<return type="void" />
			<argument index="0" name="name" type="String" />
			<argument index="1" name="new_name" type="String" />
			<description>
				Переименовывает заданный узел.
			</description>
		</method>
		<method name="replace_node">
			<return type="void" />
			<argument index="0" name="name" type="String" />
			<argument index="1" name="node" type="AnimationNode" />
			<description>
				Заменяет узел, сохраняя его переходы неизменными.
			</description>
		</method>
		<method name="set_end_node">
			<return type="void" />
			<argument index="0" name="name" type="String" />
			<description>
				Устанавливает заданный узел в качестве конечной точки графа.
			</description>
		</method>
		<method name="set_graph_offset">
			<return type="void" />
			<argument index="0" name="offset" type="Vector2" />
			<description>
				Устанавливает смещение отрисовки графика. Используется для отображения в редакторе.
			</description>
		</method>
		<method name="set_node_position">
			<return type="void" />
			<argument index="0" name="name" type="String" />
			<argument index="1" name="position" type="Vector2" />
			<description>
				Устанавливает координаты узла. Используется для отображения в редакторе.
			</description>
		</method>
		<method name="set_start_node">
			<return type="void" />
			<argument index="0" name="name" type="String" />
			<description>
				Устанавливает заданный узел в качестве начальной точки графа.
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
