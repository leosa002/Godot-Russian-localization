<?xml version="1.0" encoding="UTF-8" ?>
<class name="EditorProperty" inherits="Container" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Пользовательский элемент управления для редактирования свойств для добавления в инспектор.
	</brief_description>
	<description>
		Этот элемент управления позволяет редактировать свойства для одного или нескольких свойств в [EditorInspector]. Он добавляется с помощью [EditorInspectorPlugin].
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="add_focusable">
			<return type="void" />
			<argument index="0" name="control" type="Control" />
			<description>
				Если какой-либо из добавленных элементов управления может получить фокус клавиатуры, добавьте его сюда. Это гарантирует, что фокус будет восстановлен при обновлении инспектора.
			</description>
		</method>
		<method name="emit_changed">
			<return type="void" />
			<argument index="0" name="property" type="String" />
			<argument index="1" name="value" type="Variant" />
			<argument index="2" name="field" type="String" default="&quot;&quot;" />
			<argument index="3" name="changing" type="bool" default="false" />
			<description>
				Если изменилось одно или несколько свойств, необходимо вызвать этот вызов. [code]field[/code] используется в том случае, если ваш редактор может изменять поля отдельно (как пример, Vector3.x). Аргумент [code]changing[/code] позволяет избежать запроса редактора на обновление этого свойства (оставьте [code]false[/code], если не уверены).
			</description>
		</method>
		<method name="get_edited_object">
			<return type="Object" />
			<description>
				Получает отредактированный объект.
			</description>
		</method>
		<method name="get_edited_property">
			<return type="String" />
			<description>
				Получает отредактированное свойство. Если ваш редактор предназначен для одного свойства (добавленного с помощью [метода EditorInspectorPlugin.parse_property]), то это свойство будет возвращено.
			</description>
		</method>
		<method name="get_tooltip_text" qualifiers="const">
			<return type="String" />
			<description>
				Должна быть реализована для создания пользовательской всплывающей подсказки в редакторе свойств.
			</description>
		</method>
		<method name="set_bottom_editor">
			<return type="void" />
			<argument index="0" name="editor" type="Control" />
			<description>
				Размещает элемент управления [code]editor[/code] под меткой свойства. Элемент управления должен быть предварительно добавлен с помощью [метода Node.add_child].
			</description>
		</method>
		<method name="update_property" qualifiers="virtual">
			<return type="void" />
			<description>
				Когда вызывается эта виртуальная функция, вы должны обновить редактор.
			</description>
		</method>
	</methods>
	<members>
		<member name="checkable" type="bool" setter="set_checkable" getter="is_checkable" default="false">
			Используется инспектором, устанавливается в [code]true[/code], если свойство проверяемо.
		</member>
		<member name="checked" type="bool" setter="set_checked" getter="is_checked" default="false">
			Используется инспектором, устанавливается в [code]true[/code], когда свойство отмечено.
		</member>
		<member name="draw_red" type="bool" setter="set_draw_red" getter="is_draw_red" default="false">
			Используется в инспекторе, устанавливается в [code]true[/code], если свойство отрисовывается цветом предупреждения темы редактора. Используется для редактируемых дочерних свойств.
		</member>
		<member name="keying" type="bool" setter="set_keying" getter="is_keying" default="false">
			Используется инспектором, имеет значение [code]true[/code], если свойство может добавлять ключи для анимации.
		</member>
		<member name="label" type="String" setter="set_label" getter="get_label" default="&quot;&quot;">
			Установите это свойство, чтобы изменить ярлык (если вы хотите его показать).
		</member>
		<member name="read_only" type="bool" setter="set_read_only" getter="is_read_only" default="false">
			Используется инспектором, устанавливается в [code]true[/code], если свойство доступно только для чтения.
		</member>
	</members>
	<signals>
		<signal name="multiple_properties_changed">
			<argument index="0" name="properties" type="PoolStringArray" />
			<argument index="1" name="value" type="Array" />
			<description>
				Выдавайте его, если хотите одновременно изменить несколько свойств. Не используйте, если добавлено через [метод EditorInspectorPlugin.parse_property].
			</description>
		</signal>
		<signal name="object_id_selected">
			<argument index="0" name="property" type="String" />
			<argument index="1" name="id" type="int" />
			<description>
				Используется субинспекторами. Выдается, если был выбран идентификатор объекта.
			</description>
		</signal>
		<signal name="property_changed">
			<argument index="0" name="property" type="String" />
			<argument index="1" name="value" type="Variant" />
			<argument index="2" name="field" type="String" />
			<argument index="3" name="changing" type="bool" />
			<description>
				Не создавайте его вручную, вместо этого используйте метод [method emit_changed].
			</description>
		</signal>
		<signal name="property_checked">
			<argument index="0" name="property" type="String" />
			<argument index="1" name="checked" type="bool" />
			<description>
				Выдается, когда свойство было проверено. Используется внутренне.
			</description>
		</signal>
		<signal name="property_keyed">
			<argument index="0" name="property" type="String" />
			<description>
				Выдайте его, если хотите добавить это значение в качестве ключа анимации (сначала проверьте, включена ли функция ключа).
			</description>
		</signal>
		<signal name="property_keyed_with_value">
			<argument index="0" name="property" type="String" />
			<argument index="1" name="value" type="Variant" />
			<description>
				Выдавайте его, если хотите задать ключ к свойству с единственным значением.
			</description>
		</signal>
		<signal name="property_pinned">
			<argument index="0" name="property" type="String" />
			<argument index="1" name="pinned" type="bool" />
			<description>
				Используйте его, если хотите пометить (или снять пометку) значение свойства для сохранения, независимо от того, равно ли оно значению по умолчанию.
				Значение по умолчанию - это значение, которое свойство получит при инстанцировании узла, и оно может быть получено от сцены-предка в цепочке наследования/инстанцирования, скрипта или встроенного класса.
			</description>
		</signal>
		<signal name="resource_selected">
			<argument index="0" name="path" type="String" />
			<argument index="1" name="resource" type="Resource" />
			<description>
				Если вы хотите, чтобы подресурс был отредактирован, подайте этот сигнал вместе с ресурсом.
			</description>
		</signal>
		<signal name="selected">
			<argument index="0" name="path" type="String" />
			<argument index="1" name="focusable_idx" type="int" />
			<description>
				Выдается при выборе. Используется внутренне.
			</description>
		</signal>
	</signals>
	<constants>
	</constants>
</class>
