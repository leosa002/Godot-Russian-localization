<?xml version="1.0" encoding="UTF-8" ?>
<class name="bool" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Встроенный тип Boolean.
	</brief_description>
	<description>
		Boolean является встроенным типом. Существует два булевых значения: [code]true[/code] и [code]false[/code]. Можно представить его как переключатель с параметрами включения или выключения (1 или 0). Булевы значения используются в программировании для логики в операторах условия, например, в операторах [code]if[/code].
		Булевы числа можно напрямую использовать в операторах [code]if[/code]. В приведенном ниже коде это демонстрируется в строке [code]if can_shoot:[/code]. Использовать [code]== true[/code] не нужно, достаточно [code]if can_shoot:[/code]. Аналогично, используйте [code]if not can_shoot:[/code], а не [code]== false[/code].
		[codeblock]
		var can_shoot = true

		func shoot():
		    if can_shoot:
		        pass # Здесь выполняются действия по съемке.
		[/codeblock]
		Следующий код создаст пулю, только если выполнены оба условия: нажато действие "стрелять" и если [code]can_shoot[/code] равно [code]true[/code].
		[b]Примечание:[/b] [code]Input.is_action_pressed("shoot")[/code] - это также булево значение, которое является [code]true[/code], когда нажато действие "shoot", и [code]false[/code], когда "shoot" не нажато.
		[codeblock]
		var can_shoot = true

		func shoot():
		    if can_shoot and Input.is_action_pressed("shoot"):
		        create_bullet()
		[/codeblock]
		Следующий код установит [code]can_shoot[/code] в [code]false[/code] и запустит таймер. Это не позволит игроку стрелять до тех пор, пока не закончится таймер. Затем [code]can_shoot[/code] будет установлен в [code]true[/code], что снова позволит игроку стрелять.
		[codeblock]
		var can_shoot = true
		onready var cool_down = $CoolDownTimer

		func shoot():
		    if can_shoot and Input.is_action_pressed("shoot"):
		        create_bullet()
		        can_shoot = false
		        cool_down.start()

		func _on_CoolDownTimer_timeout():
		    can_shoot = true
		[/codeblock]
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="bool">
			<return type="bool" />
			<argument index="0" name="from" type="int" />
			<description>
				Приведение значения [int] к булевому значению, этот метод вернет [code]false[/code], если передан [code]0[/code], и [code]true[/code] для всех остальных значений int.
			</description>
		</method>
		<method name="bool">
			<return type="bool" />
			<argument index="0" name="from" type="float" />
			<description>
				Приведение значения [float] к булевому значению, этот метод вернет [code]false[/code], если передано [code]0.0[/code], и [code]true[/code] для всех остальных плавающих значений.
			</description>
		</method>
		<method name="bool">
			<return type="bool" />
			<argument index="0" name="from" type="String" />
			<description>
				Приведение значения [String] к булевому значению, этот метод вернет [code]false[/code], если передана [code]""[/code], и [code]true[/code] для всех непустых строк.
				Примеры: [code]bool("False")[/code] возвращает [code]true[/code], [code]bool("")[/code] возвращает [code]false[/code].
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
