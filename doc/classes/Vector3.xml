<?xml version="1.0" encoding="UTF-8" ?>
<class name="Vector3" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Вектор, используемый для 3D-математики.
	</brief_description>
	<description>
		Трехэлементная структура, которая может быть использована для представления позиций в трехмерном пространстве или любого другого триплета числовых значений.
		[b]Примечание:[/b] В булевом контексте Vector3 будет иметь значение [code]false[/code], если он равен [code]Vector3(0, 0, 0)[/code]. В противном случае Vector3 всегда будет оцениваться как [code]true[/code].
	</description>
	<tutorials>
		<link title="Math tutorial index">$DOCS_URL/tutorials/math/index.html</link>
		<link title="Vector math">$DOCS_URL/tutorials/math/vector_math.html</link>
		<link title="Advanced vector math">$DOCS_URL/tutorials/math/vectors_advanced.html</link>
		<link title="3Blue1Brown Essence of Linear Algebra">https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab</link>
		<link title="Matrix Transform Demo">https://godotengine.org/asset-library/asset/584</link>
		<link title="All 3D Demos">https://github.com/godotengine/godot-demo-projects/tree/master/3d</link>
	</tutorials>
	<methods>
		<method name="Vector3">
			<return type="Vector3" />
			<argument index="0" name="x" type="float" />
			<argument index="1" name="y" type="float" />
			<argument index="2" name="z" type="float" />
			<description>
				Возвращает Vector3 с заданными компонентами.
			</description>
		</method>
		<method name="abs">
			<return type="Vector3" />
			<description>
				Возвращает новый вектор, все компоненты которого имеют абсолютные значения (т.е. положительные).
			</description>
		</method>
		<method name="angle_to">
			<return type="float" />
			<argument index="0" name="to" type="Vector3" />
			<description>
				Возвращает беззнаковый минимальный угол к заданному вектору, в радианах.
			</description>
		</method>
		<method name="bounce">
			<return type="Vector3" />
			<argument index="0" name="n" type="Vector3" />
			<description>
				Возвращает вектор, "отскочивший" от плоскости, заданной данной нормалью.
			</description>
		</method>
		<method name="ceil">
			<return type="Vector3" />
			<description>
				Возвращает новый вектор, все компоненты которого округлены в большую сторону (до положительной бесконечности).
			</description>
		</method>
		<method name="cross">
			<return type="Vector3" />
			<argument index="0" name="b" type="Vector3" />
			<description>
				Возвращает кросс-произведение данного вектора и [code]b[/code].
			</description>
		</method>
		<method name="cubic_interpolate">
			<return type="Vector3" />
			<argument index="0" name="b" type="Vector3" />
			<argument index="1" name="pre_a" type="Vector3" />
			<argument index="2" name="post_b" type="Vector3" />
			<argument index="3" name="weight" type="float" />
			<description>
				Выполняет кубическую интерполяцию между данным вектором и [code]b[/code], используя [code]pre_a[/code] и [code]post_b[/code] в качестве хэндлов, и возвращает результат в позиции [code]weight[/code]. [code]weight[/code] находится в диапазоне от 0.0 до 1.0 и представляет собой величину интерполяции.
			</description>
		</method>
		<method name="direction_to">
			<return type="Vector3" />
			<argument index="0" name="b" type="Vector3" />
			<description>
				Возвращает нормализованный вектор, направленный из данного вектора в [code]b[/code]. Это эквивалентно использованию [code](b - a).normalized()[/code].
			</description>
		</method>
		<method name="distance_squared_to">
			<return type="float" />
			<argument index="0" name="b" type="Vector3" />
			<description>
				Возвращает квадратное расстояние между этим вектором и [code]b[/code].
				Этот метод работает быстрее, чем [method distance_to], поэтому предпочтите его, если вам нужно сравнить векторы или получить квадратное расстояние для какой-либо формулы.
			</description>
		</method>
		<method name="distance_to">
			<return type="float" />
			<argument index="0" name="b" type="Vector3" />
			<description>
				Возвращает расстояние между данным вектором и [code]b[/code].
			</description>
		</method>
		<method name="dot">
			<return type="float" />
			<argument index="0" name="b" type="Vector3" />
			<description>
				Возвращает точечное произведение данного вектора и [code]b[/code]. Это можно использовать для сравнения угла между двумя векторами. Например, с его помощью можно определить, стоит ли враг лицом к игроку.
				Точечное произведение будет равно [code]0[/code] для прямого угла (90 градусов), больше 0 для углов меньше 90 градусов и меньше 0 для углов шире 90 градусов.
				При использовании единичных (нормализованных) векторов результат всегда будет находиться между [code]-1.0[/code] (угол 180 градусов), когда векторы направлены в противоположные стороны, и [code]1.0[/code] (угол 0 градусов), когда векторы выровнены.
				[b]Примечание:[/b] [code]a.dot(b)[/code] эквивалентно [code]b.dot(a)[/code].
			</description>
		</method>
		<method name="floor">
			<return type="Vector3" />
			<description>
				Возвращает новый вектор, все компоненты которого округлены вниз (в сторону отрицательной бесконечности).
			</description>
		</method>
		<method name="inverse">
			<return type="Vector3" />
			<description>
				Возвращает обратную величину вектора. Это то же самое, что [code]Vector3( 1.0 / v.x, 1.0 / v.y, 1.0 / v.z )[/code].
			</description>
		</method>
		<method name="is_equal_approx">
			<return type="bool" />
			<argument index="0" name="v" type="Vector3" />
			<description>
				Возвращает [code]true[/code], если данный вектор и [code]v[/code] приблизительно равны, выполнив [метод @GDScript.is_equal_approx] для каждой компоненты.
			</description>
		</method>
		<method name="is_normalized">
			<return type="bool" />
			<description>
				Возвращает [code]true[/code], если вектор нормализован, [code]false[/code] в противном случае.
			</description>
		</method>
		<method name="is_zero_approx">
			<return type="bool" />
			<description>
				Возвращает [code]true[/code], если значения этого вектора приблизительно равны нулю, выполняя [метод @GDScript.is_zero_approx] для каждого компонента.
				Этот метод быстрее, чем использование [метода is_equal_approx] с одним значением в качестве нулевого вектора.
			</description>
		</method>
		<method name="length">
			<return type="float" />
			<description>
				Возвращает длину (величину) данного вектора.
			</description>
		</method>
		<method name="length_squared">
			<return type="float" />
			<description>
				Возвращает квадрат длины (квадрат величины) данного вектора.
				Этот метод работает быстрее, чем [method length], поэтому предпочтите его, если вам нужно сравнить векторы или получить квадрат расстояния для какой-либо формулы.
			</description>
		</method>
		<method name="limit_length">
			<return type="Vector3" />
			<argument index="0" name="length" type="float" default="1.0" />
			<description>
				Возвращает вектор с максимальной длиной, ограничивая его длину значением [code]length[/code].
			</description>
		</method>
		<method name="linear_interpolate">
			<return type="Vector3" />
			<argument index="0" name="to" type="Vector3" />
			<argument index="1" name="weight" type="float" />
			<description>
				Возвращает результат линейной интерполяции между данным вектором и [code]to[/code] на величину [code]t[/code]. [code]weight[/code] находится в диапазоне от 0.0 до 1.0 и представляет собой величину интерполяции.
			</description>
		</method>
		<method name="max_axis">
			<return type="int" />
			<description>
				Возвращает ось наибольшего значения вектора. См. константы [code]AXIS_*[/code]. Если все компоненты равны, этот метод возвращает [константу AXIS_X].
			</description>
		</method>
		<method name="min_axis">
			<return type="int" />
			<description>
				Возвращает ось наименьшего значения вектора. См. константы [code]AXIS_*[/code]. Если все компоненты равны, этот метод возвращает [константу AXIS_Z].
			</description>
		</method>
		<method name="move_toward">
			<return type="Vector3" />
			<argument index="0" name="to" type="Vector3" />
			<argument index="1" name="delta" type="float" />
			<description>
				Возвращает новый вектор, сдвинутый в сторону [code]to[/code] на фиксированную величину [code]delta[/code]. Не выходит за пределы конечного значения.
			</description>
		</method>
		<method name="normalized">
			<return type="Vector3" />
			<description>
				Возвращает вектор, масштабированный на единицу длины. Эквивалентно [code]v / v.length()[/code].
			</description>
		</method>
		<method name="outer">
			<return type="Basis" />
			<argument index="0" name="b" type="Vector3" />
			<description>
				Возвращает внешнее произведение с [code]b[/code].
			</description>
		</method>
		<method name="posmod">
			<return type="Vector3" />
			<argument index="0" name="mod" type="float" />
			<description>
				Возвращает вектор, состоящий из [метод @GDScript.fposmod] компонент этого вектора и [code]mod[/code].
			</description>
		</method>
		<method name="posmodv">
			<return type="Vector3" />
			<argument index="0" name="modv" type="Vector3" />
			<description>
				Возвращает вектор, состоящий из [метод @GDScript.fposmod] компонент этого вектора и [code]modv[/code] компонент.
			</description>
		</method>
		<method name="project">
			<return type="Vector3" />
			<argument index="0" name="b" type="Vector3" />
			<description>
				Возвращает данный вектор, спроецированный на вектор [code]b[/code].
			</description>
		</method>
		<method name="reflect">
			<return type="Vector3" />
			<argument index="0" name="n" type="Vector3" />
			<description>
				Возвращает данный вектор, отраженный от плоскости, заданной данной нормалью.
			</description>
		</method>
		<method name="rotated">
			<return type="Vector3" />
			<argument index="0" name="axis" type="Vector3" />
			<argument index="1" name="angle" type="float" />
			<description>
				Поворачивает данный вектор вокруг заданной оси на [code]угол[/code] (в радианах). Ось должна быть нормализованным вектором.
			</description>
		</method>
		<method name="round">
			<return type="Vector3" />
			<description>
				Возвращает новый вектор, все компоненты которого округлены до ближайшего целого числа, а полуцелые случаи округлены от нуля.
			</description>
		</method>
		<method name="sign">
			<return type="Vector3" />
			<description>
				Возвращает новый вектор, каждый компонент которого равен единице или отрицательной единице, в зависимости от знаков компонентов. Если компонент равен нулю, возвращается положительная единица.
			</description>
		</method>
		<method name="signed_angle_to">
			<return type="float" />
			<argument index="0" name="to" type="Vector3" />
			<argument index="1" name="axis" type="Vector3" />
			<description>
				Возвращает знаковый угол к заданному вектору в радианах. Знак угла положителен в направлении против часовой стрелки и отрицателен в направлении по часовой стрелке, если смотреть со стороны, указанной [code]осью[/code].
			</description>
		</method>
		<method name="slerp">
			<return type="Vector3" />
			<argument index="0" name="to" type="Vector3" />
			<argument index="1" name="weight" type="float" />
			<description>
				Возвращает результат сферической линейной интерполяции между данным вектором и [code]to[/code], на величину [code]weight[/code]. [code]weight[/code] находится в диапазоне от 0.0 до 1.0 и представляет собой величину интерполяции.
				[b]Примечание:[/b] Оба вектора должны быть нормализованы.
			</description>
		</method>
		<method name="slide">
			<return type="Vector3" />
			<argument index="0" name="n" type="Vector3" />
			<description>
				Возвращает данный вектор, сдвинутый вдоль плоскости, определяемой заданной нормалью.
			</description>
		</method>
		<method name="snapped">
			<return type="Vector3" />
			<argument index="0" name="by" type="Vector3" />
			<description>
				Возвращает данный вектор с каждой компонентой, округленной до ближайшего кратного [code]шага[/code]. Это также можно использовать для округления до произвольного числа десятичных дробей.
			</description>
		</method>
		<method name="to_diagonal_matrix">
			<return type="Basis" />
			<description>
				Возвращает диагональную матрицу с вектором в качестве главной диагонали.
				Это эквивалентно Basis без вращения и сдвига, а компоненты этого вектора заданы в качестве масштаба.
			</description>
		</method>
	</methods>
	<members>
		<member name="x" type="float" setter="" getter="" default="0.0">
			Компонент вектора по оси X. Также доступна через индексную позицию [code][0][/code].
		</member>
		<member name="y" type="float" setter="" getter="" default="0.0">
			Компонент Y вектора. Также доступна через индексную позицию [code][1][/code].
		</member>
		<member name="z" type="float" setter="" getter="" default="0.0">
			Компонент вектора по оси Z. Также доступна через индексную позицию [code][2][/code].
		</member>
	</members>
	<constants>
		<constant name="AXIS_X" value="0">
			Перечисляемое значение для оси X. Возвращается методами [метод max_axis] и [метод min_axis].
		</constant>
		<constant name="AXIS_Y" value="1">
			Перечисляемое значение для оси Y. Возвращается методами [метод max_axis] и [метод min_axis].
		</constant>
		<constant name="AXIS_Z" value="2">
			Перечисляемое значение для оси Z. Возвращается методами [метод max_axis] и [метод min_axis].
		</constant>
		<constant name="ZERO" value="Vector3( 0, 0, 0 )">
			Нулевой вектор - вектор, все компоненты которого равны [code]0[/code].
		</constant>
		<constant name="ONE" value="Vector3( 1, 1, 1 )">
			Один вектор - вектор, все компоненты которого равны [code]1[/code].
		</constant>
		<constant name="INF" value="Vector3( inf, inf, inf )">
			Бесконечный вектор, вектор, все компоненты которого равны [константа @GDScript.INF].
		</constant>
		<constant name="LEFT" value="Vector3( -1, 0, 0 )">
			Единичный вектор левого направления. Представляет локальное направление налево и глобальное направление на запад.
		</constant>
		<constant name="RIGHT" value="Vector3( 1, 0, 0 )">
			Правый единичный вектор. Представляет локальное направление вправо и глобальное направление на восток.
		</constant>
		<constant name="UP" value="Vector3( 0, 1, 0 )">
			Единичный вектор вверх.
		</constant>
		<constant name="DOWN" value="Vector3( 0, -1, 0 )">
			Единичный вектор вниз.
		</constant>
		<constant name="FORWARD" value="Vector3( 0, 0, -1 )">
			Единичный вектор направления вперед. Представляет локальное направление вперед и глобальное направление на север.
		</constant>
		<constant name="BACK" value="Vector3( 0, 0, 1 )">
			Единичный вектор спины. Представляет локальное направление назад и глобальное направление на юг.
		</constant>
	</constants>
</class>
