<?xml version="1.0" encoding="UTF-8" ?>
<class name="TextureProgress" inherits="Range" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Прогресс-бар на основе текстур. Пригодится для экранов загрузки и индикаторов жизни или выносливости.
	</brief_description>
	<description>
		TextureProgress работает как [ProgressBar], но использует до 3 текстур вместо ресурса Godot [Theme]. С его помощью можно создавать горизонтальные, вертикальные и радиальные прогресс-бары.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_stretch_margin" qualifiers="const">
			<return type="int" />
			<argument index="0" name="margin" type="int" enum="Margin" />
			<description>
			</description>
		</method>
		<method name="set_stretch_margin">
			<return type="void" />
			<argument index="0" name="margin" type="int" enum="Margin" />
			<argument index="1" name="value" type="int" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="fill_mode" type="int" setter="set_fill_mode" getter="get_fill_mode" default="0">
			Направление заливки. Возможные значения см. в [enum FillMode].
		</member>
		<member name="mouse_filter" type="int" setter="set_mouse_filter" getter="get_mouse_filter" overrides="Control" enum="Control.MouseFilter" default="1" />
		<member name="nine_patch_stretch" type="bool" setter="set_nine_patch_stretch" getter="get_nine_patch_stretch" default="false">
			Если [code]true[/code], Godot обрабатывает текстуры полос как в [NinePatchRect]. Используйте свойства [code]stretch_margin_*[/code], например [member stretch_margin_bottom], чтобы настроить сетку 3×3 для девяти патчей. При использовании радиального [member fill_mode] эта настройка включает растяжение.
		</member>
		<member name="radial_center_offset" type="Vector2" setter="set_radial_center_offset" getter="get_radial_center_offset" default="Vector2( 0, 0 )">
			Смещает [член texture_progress], если [член fill_mode] имеет значение [constant FILL_CLOCKWISE] или [constant FILL_COUNTER_CLOCKWISE].
		</member>
		<member name="radial_fill_degrees" type="float" setter="set_fill_degrees" getter="get_fill_degrees" default="360.0">
			Верхний предел заливки [member texture_progress], если [member fill_mode] - [constant FILL_CLOCKWISE] или [constant FILL_COUNTER_CLOCKWISE]. Когда [code]значение[/code] узла равно его [code]max_value[/code], текстура заполняется до этого угла.
			См. [member Range.value], [member Range.max_value].
		</member>
		<member name="radial_initial_angle" type="float" setter="set_radial_initial_angle" getter="get_radial_initial_angle" default="0.0">
			Начальный угол для заливки [member texture_progress], если [member fill_mode] - [constant FILL_CLOCKWISE] или [constant FILL_COUNTER_CLOCKWISE]. Когда [code]value[/code] узла равно его [code]min_value[/code], текстура не отображается вообще. Когда [code]value[/code] увеличивается, текстура заполняется и стремится к [member radial_fill_degrees].
		</member>
		<member name="stretch_margin_bottom" type="int" setter="set_stretch_margin" getter="get_stretch_margin" default="0">
			Высота нижней строки 9-фрагмента. Значение margin 16 означает, что нижние углы и боковые стороны 9-фрагмента будут иметь высоту 16 пикселей. Для создания панелей с неравномерными границами можно задать все 4 значения отступов по отдельности.
		</member>
		<member name="stretch_margin_left" type="int" setter="set_stretch_margin" getter="get_stretch_margin" default="0">
			Ширина левой колонки 9-патча.
		</member>
		<member name="stretch_margin_right" type="int" setter="set_stretch_margin" getter="get_stretch_margin" default="0">
			Ширина правой колонки 9-патча.
		</member>
		<member name="stretch_margin_top" type="int" setter="set_stretch_margin" getter="get_stretch_margin" default="0">
			Высота верхнего ряда 9-патча.
		</member>
		<member name="texture_over" type="Texture" setter="set_over_texture" getter="get_over_texture">
			[Texture], которая рисуется поверх полосы прогресса. Используйте его для добавления бликов или верхней рамки, скрывающей часть [member texture_progress].
		</member>
		<member name="texture_progress" type="Texture" setter="set_progress_texture" getter="get_progress_texture">
			[Texture], которая клипируется на основе [code]value[/code] узла и [member fill_mode]. По мере увеличения [code]value[/code] текстура заполняется. Она полностью отображается, когда [code]value[/code] достигает [code]max_value[/code]. Она совсем не отображается, если [code]value[/code] равно [code]min_value[/code].
			Свойство [code]value[/code] берется из [Range]. См. [member Range.value], [member Range.min_value], [member Range.max_value].
		</member>
		<member name="texture_progress_offset" type="Vector2" setter="set_texture_progress_offset" getter="get_texture_progress_offset" default="Vector2( 0, 0 )">
			Смещение [member texture_progress]. Полезно для [member texture_over] и [member texture_under] с фантазийными границами, чтобы избежать прозрачных полей в текстуре прогресса.
		</member>
		<member name="texture_under" type="Texture" setter="set_under_texture" getter="get_under_texture">
			[Texture], которая рисуется под индикатором выполнения. Фон полосы прогресса.
		</member>
		<member name="tint_over" type="Color" setter="set_tint_over" getter="get_tint_over" default="Color( 1, 1, 1, 1 )">
			Умножает цвет текстуры [code]texture_over[/code] панели. Эффект похож на [member CanvasItem.modulate], за исключением того, что он влияет только на эту конкретную текстуру, а не на весь узел.
		</member>
		<member name="tint_progress" type="Color" setter="set_tint_progress" getter="get_tint_progress" default="Color( 1, 1, 1, 1 )">
			Умножает цвет текстуры [code]texture_progress[/code] бара.
		</member>
		<member name="tint_under" type="Color" setter="set_tint_under" getter="get_tint_under" default="Color( 1, 1, 1, 1 )">
			Умножает цвет текстуры [code]texture_under[/code] бара.
		</member>
	</members>
	<constants>
		<constant name="FILL_LEFT_TO_RIGHT" value="0" enum="FillMode">
			[member texture_progress] заполняется слева направо.
		</constant>
		<constant name="FILL_RIGHT_TO_LEFT" value="1" enum="FillMode">
			[member texture_progress] заполняется справа налево.
		</constant>
		<constant name="FILL_TOP_TO_BOTTOM" value="2" enum="FillMode">
			[member texture_progress] заполняется сверху вниз.
		</constant>
		<constant name="FILL_BOTTOM_TO_TOP" value="3" enum="FillMode">
			[member texture_progress] заполняется снизу вверх.
		</constant>
		<constant name="FILL_CLOCKWISE" value="4" enum="FillMode">
			Превращает узел в радиальную полосу. Заполнение [member texture_progress] происходит по часовой стрелке. Смотрите [member radial_center_offset], [member radial_initial_angle] и [member radial_fill_degrees] для управления способом заполнения полосы.
		</constant>
		<constant name="FILL_COUNTER_CLOCKWISE" value="5" enum="FillMode">
			Превращает узел в радиальную полосу. [member texture_progress] заполняется против часовой стрелки. Смотрите [member radial_center_offset], [member radial_initial_angle] и [member radial_fill_degrees] для управления способом заполнения полосы.
		</constant>
		<constant name="FILL_BILINEAR_LEFT_AND_RIGHT" value="6" enum="FillMode">
			[member texture_progress] заполняется из центра, расширяясь как влево, так и вправо.
		</constant>
		<constant name="FILL_BILINEAR_TOP_AND_BOTTOM" value="7" enum="FillMode">
			[member texture_progress] заполняется от центра, расширяясь как к верху, так и к низу.
		</constant>
		<constant name="FILL_CLOCKWISE_AND_COUNTER_CLOCKWISE" value="8" enum="FillMode">
			Превращает узел в радиальную полосу. [member texture_progress] заполняется радиально от центра, расширяясь как по часовой, так и против часовой стрелки. Смотрите [member radial_center_offset], [member radial_initial_angle] и [member radial_fill_degrees], чтобы управлять способом заполнения полосы.
		</constant>
	</constants>
</class>
