<?xml version="1.0" encoding="UTF-8" ?>
<class name="Vector2" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Вектор, используемый для 2D-математики.
	</brief_description>
	<description>
		Двухэлементная структура, которая может использоваться для представления позиций в двумерном пространстве или любой другой пары числовых значений.
		[b]Примечание:[/b] В булевом контексте Vector2 будет иметь значение [code]false[/code], если он равен [code]Vector2(0, 0)[/code]. В противном случае Vector2 всегда будет оцениваться как [code]true[/code].
	</description>
	<tutorials>
		<link title="Math tutorial index">$DOCS_URL/tutorials/math/index.html</link>
		<link title="Vector math">$DOCS_URL/tutorials/math/vector_math.html</link>
		<link title="Advanced vector math">$DOCS_URL/tutorials/math/vectors_advanced.html</link>
		<link title="3Blue1Brown Essence of Linear Algebra">https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab</link>
		<link title="Matrix Transform Demo">https://godotengine.org/asset-library/asset/584</link>
		<link title="All 2D Demos">https://github.com/godotengine/godot-demo-projects/tree/master/2d</link>
	</tutorials>
	<methods>
		<method name="Vector2">
			<return type="Vector2" />
			<argument index="0" name="x" type="float" />
			<argument index="1" name="y" type="float" />
			<description>
				Создает новый Vector2 из заданных [code]x[/code] и [code]y[/code].
			</description>
		</method>
		<method name="abs">
			<return type="Vector2" />
			<description>
				Возвращает новый вектор, все компоненты которого имеют абсолютные значения (т.е. положительные).
			</description>
		</method>
		<method name="angle">
			<return type="float" />
			<description>
				Возвращает угол этого вектора по отношению к положительной оси X или [code](1, 0)[/code] вектора в радианах.
				Например, [code]Vector2.RIGHT.angle()[/code] вернет ноль, [code]Vector2.DOWN.angle()[/code] вернет [code]PI / 2[/code] (четверть оборота, или 90 градусов), а [code]Vector2(1, -1).angle()[/code] вернет [code]-PI / 4[/code] (отрицательную восьмую оборота, или -45 градусов).
				[url=https://raw.githubusercontent.com/godotengine/godot-docs/master/img/vector2_angle.png]Иллюстрация возвращаемого угла[/url].
				Эквивалентно результату работы [метода @GDScript.atan2] при вызове с параметрами [member y] и [member x] вектора: [code]atan2(y, x)[/code].
			</description>
		</method>
		<method name="angle_to">
			<return type="float" />
			<argument index="0" name="to" type="Vector2" />
			<description>
				Возвращает угол к заданному вектору, в радианах.
				[url=https://raw.githubusercontent.com/godotengine/godot-docs/master/img/vector2_angle_to.png]Иллюстрация возвращаемого угла[/url].
			</description>
		</method>
		<method name="angle_to_point">
			<return type="float" />
			<argument index="0" name="to" type="Vector2" />
			<description>
				Возвращает угол между линией, соединяющей две точки, и осью X, в радианах.
				[url=https://raw.githubusercontent.com/godotengine/godot-docs/stable/img/vector2_angle_to_point.png]Иллюстрация возвращаемого угла[/url].
			</description>
		</method>
		<method name="aspect">
			<return type="float" />
			<description>
				Возвращает соотношение сторон данного вектора, отношение [member x] к [member y].
			</description>
		</method>
		<method name="bounce">
			<return type="Vector2" />
			<argument index="0" name="n" type="Vector2" />
			<description>
				Возвращает вектор, "отскочивший" от плоскости, заданной данной нормалью.
			</description>
		</method>
		<method name="ceil">
			<return type="Vector2" />
			<description>
				Возвращает новый вектор, все компоненты которого округлены в большую сторону (до положительной бесконечности).
			</description>
		</method>
		<method name="clamped">
			<return type="Vector2" />
			<argument index="0" name="length" type="float" />
			<description>
				Утратил силу, вместо него используйте [метод limit_length].
				Возвращает вектор с максимальной длиной, ограничивая его длину значением [code]length[/code].
			</description>
		</method>
		<method name="cross">
			<return type="float" />
			<argument index="0" name="with" type="Vector2" />
			<description>
				Возвращает двумерный аналог кросс-продукта для данного вектора и [code]with[/code].
				Это знаковая площадь параллелограмма, образованного двумя векторами. Если второй вектор расположен по часовой стрелке относительно первого, то поперечное произведение будет положительной площадью. Если против часовой стрелки, то перекрестное произведение будет отрицательной площадью.
				[b]Примечание:[/b] Перекрестное произведение не определено в 2D математически. В данном методе 2D-векторы помещаются в плоскость XY 3D-пространства, а в качестве аналога используется Z-компонента их перекрестного произведения.
			</description>
		</method>
		<method name="cubic_interpolate">
			<return type="Vector2" />
			<argument index="0" name="b" type="Vector2" />
			<argument index="1" name="pre_a" type="Vector2" />
			<argument index="2" name="post_b" type="Vector2" />
			<argument index="3" name="weight" type="float" />
			<description>
				Кубически интерполирует между данным вектором и [code]b[/code], используя [code]pre_a[/code] и [code]post_b[/code] в качестве дескрипторов, и возвращает результат в позиции [code]weight[/code]. [code]weight[/code] находится в диапазоне от 0.0 до 1.0 и представляет собой величину интерполяции.
			</description>
		</method>
		<method name="direction_to">
			<return type="Vector2" />
			<argument index="0" name="b" type="Vector2" />
			<description>
				Возвращает нормализованный вектор, направленный из данного вектора в [code]b[/code]. Это эквивалентно использованию [code](b - a).normalized()[/code].
			</description>
		</method>
		<method name="distance_squared_to">
			<return type="float" />
			<argument index="0" name="to" type="Vector2" />
			<description>
				Возвращает квадратное расстояние между этим вектором и [code]b[/code].
				Этот метод работает быстрее, чем [method distance_to], поэтому предпочтите его, если вам нужно сравнить векторы или получить квадратное расстояние для какой-либо формулы.
			</description>
		</method>
		<method name="distance_to">
			<return type="float" />
			<argument index="0" name="to" type="Vector2" />
			<description>
				Возвращает расстояние между этим вектором и [code]to[/code].
			</description>
		</method>
		<method name="dot">
			<return type="float" />
			<argument index="0" name="with" type="Vector2" />
			<description>
				Возвращает точечное произведение данного вектора и [code]с[/code]. Это можно использовать для сравнения угла между двумя векторами. Например, с его помощью можно определить, стоит ли враг лицом к игроку.
				Точечное произведение будет равно [code]0[/code] для прямого угла (90 градусов), больше 0 для углов меньше 90 градусов и меньше 0 для углов шире 90 градусов.
				При использовании единичных (нормализованных) векторов результат всегда будет находиться между [code]-1.0[/code] (угол 180 градусов), когда векторы направлены в противоположные стороны, и [code]1.0[/code] (угол 0 градусов), когда векторы выровнены.
				[b]Примечание:[/b] [code]a.dot(b)[/code] эквивалентно [code]b.dot(a)[/code].
			</description>
		</method>
		<method name="floor">
			<return type="Vector2" />
			<description>
				Возвращает новый вектор, все компоненты которого округлены вниз (в сторону отрицательной бесконечности).
			</description>
		</method>
		<method name="is_equal_approx">
			<return type="bool" />
			<argument index="0" name="v" type="Vector2" />
			<description>
				Возвращает [code]true[/code], если данный вектор и [code]v[/code] приблизительно равны, выполнив [метод @GDScript.is_equal_approx] для каждой компоненты.
			</description>
		</method>
		<method name="is_normalized">
			<return type="bool" />
			<description>
				Возвращает [code]true[/code], если вектор нормализован, [code]false[/code] в противном случае.
			</description>
		</method>
		<method name="is_zero_approx">
			<return type="bool" />
			<description>
				Возвращает [code]true[/code], если значения этого вектора приблизительно равны нулю, выполняя [метод @GDScript.is_zero_approx] для каждого компонента.
				Этот метод быстрее, чем использование [метода is_equal_approx] с одним значением в качестве нулевого вектора.
			</description>
		</method>
		<method name="length">
			<return type="float" />
			<description>
				Возвращает длину (величину) данного вектора.
			</description>
		</method>
		<method name="length_squared">
			<return type="float" />
			<description>
				Возвращает квадрат длины (квадрат величины) данного вектора.
				Этот метод работает быстрее, чем [method length], поэтому предпочтите его, если вам нужно сравнить векторы или получить квадрат расстояния для какой-либо формулы.
			</description>
		</method>
		<method name="limit_length">
			<return type="Vector2" />
			<argument index="0" name="length" type="float" default="1.0" />
			<description>
				Возвращает вектор с максимальной длиной, ограничивая его длину значением [code]length[/code].
			</description>
		</method>
		<method name="linear_interpolate">
			<return type="Vector2" />
			<argument index="0" name="to" type="Vector2" />
			<argument index="1" name="weight" type="float" />
			<description>
				Возвращает результат линейной интерполяции между данным вектором и [code]to[/code] на величину [code]weight[/code]. [code]weight[/code] находится в диапазоне от 0.0 до 1.0 и представляет собой величину интерполяции.
			</description>
		</method>
		<method name="move_toward">
			<return type="Vector2" />
			<argument index="0" name="to" type="Vector2" />
			<argument index="1" name="delta" type="float" />
			<description>
				Возвращает новый вектор, сдвинутый в сторону [code]to[/code] на фиксированную величину [code]delta[/code]. Не выходит за пределы конечного значения.
			</description>
		</method>
		<method name="normalized">
			<return type="Vector2" />
			<description>
				Возвращает вектор, масштабированный на единицу длины. Эквивалентно [code]v / v.length()[/code].
			</description>
		</method>
		<method name="posmod">
			<return type="Vector2" />
			<argument index="0" name="mod" type="float" />
			<description>
				Возвращает вектор, состоящий из [метод @GDScript.fposmod] компонент этого вектора и [code]mod[/code].
			</description>
		</method>
		<method name="posmodv">
			<return type="Vector2" />
			<argument index="0" name="modv" type="Vector2" />
			<description>
				Возвращает вектор, состоящий из [метод @GDScript.fposmod] компонент этого вектора и [code]modv[/code] компонент.
			</description>
		</method>
		<method name="project">
			<return type="Vector2" />
			<argument index="0" name="b" type="Vector2" />
			<description>
				Возвращает данный вектор, спроецированный на вектор [code]b[/code].
			</description>
		</method>
		<method name="reflect">
			<return type="Vector2" />
			<argument index="0" name="n" type="Vector2" />
			<description>
				Возвращает вектор, отраженный (т.е. зеркальный или симметричный) от линии, заданной вектором направления [code]n[/code].
			</description>
		</method>
		<method name="rotated">
			<return type="Vector2" />
			<argument index="0" name="angle" type="float" />
			<description>
				Возвращает вектор, повернутый на [code]угол[/code] (в радианах). См. также [метод @GDScript.deg2rad].
			</description>
		</method>
		<method name="round">
			<return type="Vector2" />
			<description>
				Возвращает новый вектор, все компоненты которого округлены до ближайшего целого числа, а полуцелые случаи округлены от нуля.
			</description>
		</method>
		<method name="sign">
			<return type="Vector2" />
			<description>
				Возвращает новый вектор, каждый компонент которого равен единице или отрицательной единице, в зависимости от знаков компонентов. Если компонент равен нулю, возвращается положительная единица.
			</description>
		</method>
		<method name="slerp">
			<return type="Vector2" />
			<argument index="0" name="to" type="Vector2" />
			<argument index="1" name="weight" type="float" />
			<description>
				Возвращает результат сферической линейной интерполяции между данным вектором и [code]to[/code], на величину [code]weight[/code]. [code]weight[/code] находится в диапазоне от 0.0 до 1.0 и представляет собой величину интерполяции.
				[b]Примечание:[/b] Оба вектора должны быть нормализованы.
			</description>
		</method>
		<method name="slide">
			<return type="Vector2" />
			<argument index="0" name="n" type="Vector2" />
			<description>
				Возвращает данный вектор, сдвинутый вдоль плоскости, определяемой заданной нормалью.
			</description>
		</method>
		<method name="snapped">
			<return type="Vector2" />
			<argument index="0" name="by" type="Vector2" />
			<description>
				Возвращает данный вектор с каждой компонентой, округленной до ближайшего кратного [code]шага[/code]. Это также можно использовать для округления до произвольного числа десятичных дробей.
			</description>
		</method>
		<method name="tangent">
			<return type="Vector2" />
			<description>
				Возвращает перпендикулярный вектор, повернутый на 90 градусов против часовой стрелки по сравнению с исходным, с той же длиной.
			</description>
		</method>
	</methods>
	<members>
		<member name="x" type="float" setter="" getter="" default="0.0">
			Компонент вектора по оси X. Также доступна через индексную позицию [code][0][/code].
		</member>
		<member name="y" type="float" setter="" getter="" default="0.0">
			Компонент Y вектора. Также доступна через индексную позицию [code][1][/code].
		</member>
	</members>
	<constants>
		<constant name="AXIS_X" value="0">
			Перечисляемое значение для оси X.
		</constant>
		<constant name="AXIS_Y" value="1">
			Перечисляемое значение для оси Y.
		</constant>
		<constant name="ZERO" value="Vector2( 0, 0 )">
			Нулевой вектор - вектор, все компоненты которого равны [code]0[/code].
		</constant>
		<constant name="ONE" value="Vector2( 1, 1 )">
			Один вектор - вектор, все компоненты которого равны [code]1[/code].
		</constant>
		<constant name="INF" value="Vector2( inf, inf )">
			Бесконечный вектор, вектор, все компоненты которого равны [константа @GDScript.INF].
		</constant>
		<constant name="LEFT" value="Vector2( -1, 0 )">
			Левый единичный вектор. Представляет направление влево.
		</constant>
		<constant name="RIGHT" value="Vector2( 1, 0 )">
			Правый единичный вектор. Представляет направление вправо.
		</constant>
		<constant name="UP" value="Vector2( 0, -1 )">
			Единичный вектор вверх. Y в 2D направлен вниз, поэтому этот вектор указывает на -Y.
		</constant>
		<constant name="DOWN" value="Vector2( 0, 1 )">
			Единичный вектор вниз. Y в 2D направлен вниз, поэтому этот вектор указывает на +Y.
		</constant>
	</constants>
</class>
