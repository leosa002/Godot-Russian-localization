<?xml version="1.0" encoding="UTF-8" ?>
<class name="NavigationServer" inherits="Object" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Серверный интерфейс для низкоуровневого доступа к 3D-навигации.
	</brief_description>
	<description>
		NavigationServer - это сервер, отвечающий за всю 3D-навигацию. Он работает с несколькими объектами, а именно с картами, регионами и агентами.
		Карты состоят из регионов, которые состоят из навигационных сеток. Вместе они определяют навигационные области в 3D-мире.
		[b]Примечание:[/b] Большинство изменений NavigationServer вступают в силу после следующего кадра физики, а не сразу. Сюда относятся все изменения, внесенные в карты, регионы или агентов связанными с навигацией узлами в SceneTree или сделанные с помощью скриптов.
		Чтобы два региона были связаны друг с другом, они должны иметь общее ребро. Ребро считается соединенным с другим, если обе его вершины находятся на расстоянии меньше, чем [member Navigation.edge_connection_margin] до соответствующей вершины другого ребра.
		Чтобы использовать систему предотвращения столкновений, вы можете использовать агентов. Вы можете задать агенту целевую скорость, после чего серверы выдадут обратный вызов с измененной скоростью.
		[b]Примечание:[/b] Система предотвращения столкновений игнорирует регионы. Использование модифицированной скорости как таковой может привести к толчку и агенту за пределами зоны навигации. Это ограничение системы предотвращения столкновений, для более сложных ситуаций может потребоваться использование физического движка.
		[b]Примечание:[/b] По умолчанию дорогостоящие вычисления для предотвращения столкновений выполняются в потоке. В HTML5-экспорте без поддержки потоков они будут выполняться в главном потоке, что может привести к проблемам с производительностью.
		Этот сервер отслеживает все вызовы и выполняет их на этапе синхронизации. Это означает, что вы можете запросить любое изменение в карте, используя любой поток, не беспокоясь об этом.
	</description>
	<tutorials>
		<link title="3D Navmesh Demo">https://godotengine.org/asset-library/asset/124</link>
	</tutorials>
	<methods>
		<method name="agent_create" qualifiers="const">
			<return type="RID" />
			<description>
				Создает агент.
			</description>
		</method>
		<method name="agent_get_map" qualifiers="const">
			<return type="RID" />
			<argument index="0" name="agent" type="RID" />
			<description>
				Возвращает навигационную карту [RID], к которой в данный момент приписан запрашиваемый [code]агент[/code].
			</description>
		</method>
		<method name="agent_is_map_changed" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="agent" type="RID" />
			<description>
				Возвращает [code]true[/code], если карта была изменена в предыдущем кадре.
			</description>
		</method>
		<method name="agent_set_callback" qualifiers="const">
			<return type="void" />
			<argument index="0" name="agent" type="RID" />
			<argument index="1" name="receiver" type="Object" />
			<argument index="2" name="method" type="String" />
			<argument index="3" name="userdata" type="Variant" default="null" />
			<description>
				Обратный вызов, вызываемый в конце процесса RVO. Если обратный вызов создан вручную и агент помещен на навигационную карту, он рассчитает для него уклонение и отправит рассчитанную [code]safe_velocity[/code] объекту [code]receiver[/code] с сигналом на выбранное имя [code]метода[/code].
				[b]Примечание:[/b] Созданные обратные вызовы всегда обрабатываются независимо от состояния SceneTree, пока агент находится на навигационной карте и не освобожден. Чтобы отключить отправку обратного вызова от агента, снова используйте [метод agent_set_callback] с [code]null[/code] объектом в качестве [code]получателя[/code].
			</description>
		</method>
		<method name="agent_set_map" qualifiers="const">
			<return type="void" />
			<argument index="0" name="agent" type="RID" />
			<argument index="1" name="map" type="RID" />
			<description>
				Помещает агента на карту.
			</description>
		</method>
		<method name="agent_set_max_neighbors" qualifiers="const">
			<return type="void" />
			<argument index="0" name="agent" type="RID" />
			<argument index="1" name="count" type="int" />
			<description>
				Задает максимальное количество других агентов, которых агент учитывает при навигации. Чем больше это число, тем больше время работы симуляции. Если число слишком мало, симуляция будет небезопасной.
			</description>
		</method>
		<method name="agent_set_max_speed" qualifiers="const">
			<return type="void" />
			<argument index="0" name="agent" type="RID" />
			<argument index="1" name="max_speed" type="float" />
			<description>
				Устанавливает максимальную скорость агента. Должна быть положительной.
			</description>
		</method>
		<method name="agent_set_neighbor_dist" qualifiers="const">
			<return type="void" />
			<argument index="0" name="agent" type="RID" />
			<argument index="1" name="dist" type="float" />
			<description>
				Задает максимальное расстояние до других агентов, которое этот агент учитывает при навигации. Чем больше это число, тем больше время работы симуляции. Если число слишком мало, симуляция будет небезопасной.
			</description>
		</method>
		<method name="agent_set_position" qualifiers="const">
			<return type="void" />
			<argument index="0" name="agent" type="RID" />
			<argument index="1" name="position" type="Vector3" />
			<description>
				Устанавливает положение агента в мировом пространстве.
			</description>
		</method>
		<method name="agent_set_radius" qualifiers="const">
			<return type="void" />
			<argument index="0" name="agent" type="RID" />
			<argument index="1" name="radius" type="float" />
			<description>
				Устанавливает радиус агента.
			</description>
		</method>
		<method name="agent_set_target_velocity" qualifiers="const">
			<return type="void" />
			<argument index="0" name="agent" type="RID" />
			<argument index="1" name="target_velocity" type="Vector3" />
			<description>
				Устанавливает новую скорость цели.
			</description>
		</method>
		<method name="agent_set_time_horizon" qualifiers="const">
			<return type="void" />
			<argument index="0" name="agent" type="RID" />
			<argument index="1" name="time" type="float" />
			<description>
				Минимальный промежуток времени, в течение которого скорости агента, вычисленные в ходе симуляции, безопасны по отношению к другим агентам. Чем больше это число, тем быстрее агент отреагирует на присутствие других агентов, но тем меньше у него свободы в выборе скоростей. Должно быть положительным.
			</description>
		</method>
		<method name="agent_set_velocity" qualifiers="const">
			<return type="void" />
			<argument index="0" name="agent" type="RID" />
			<argument index="1" name="velocity" type="Vector3" />
			<description>
				Устанавливает текущую скорость агента.
			</description>
		</method>
		<method name="free_rid" qualifiers="const">
			<return type="void" />
			<argument index="0" name="rid" type="RID" />
			<description>
				Уничтожает заданный RID.
			</description>
		</method>
		<method name="get_maps" qualifiers="const">
			<return type="Array" />
			<description>
				Возвращает все созданные навигационные карты [RID] на NavigationServer. Возвращаются как 2D, так и 3D созданные навигационные карты, поскольку технически между ними нет различий.
			</description>
		</method>
		<method name="map_create" qualifiers="const">
			<return type="RID" />
			<description>
				Create a new map.
			</description>
		</method>
		<method name="map_force_update">
			<return type="void" />
			<argument index="0" name="map" type="RID" />
			<description>
				Эта функция немедленно заставляет синхронизировать указанную навигационную [code]карту[/code] [RID]. По умолчанию навигационные карты синхронизируются только в конце каждого физического кадра. Эта функция может быть использована для немедленного (повторного) расчета всех навигационных сеток и соединений регионов навигационной карты. Это позволяет запрашивать навигационный путь для измененной карты немедленно и в том же кадре (при необходимости несколько раз).
				В связи с техническими ограничениями текущая очередь команд NavigationServer будет очищена. Это означает, что все уже поставленные в очередь команды обновления для данного кадра физики будут выполнены, даже те, которые предназначены для других карт, регионов и агентов, не входящих в указанную карту. Дорогостоящие вычисления навигационных сеток и связей регионов карты будут выполняться только для указанной карты. Другие карты получат обычную синхронизацию в конце физического кадра. Если указанная карта получит изменения после принудительного обновления, она обновится снова, когда остальные карты получат свои обновления.
				Обработка избегания и отправка сигналов [code]safe_velocity[/code] не затрагивается этой функцией и продолжает происходить для всех карт и агентов в конце физического кадра.
				[b]Примечание:[/b] С большой силой приходит большая ответственность. Эта функция должна использоваться только теми пользователями, которые действительно знают, что делают, и имеют на это веские причины. Принудительное немедленное обновление навигационной карты требует блокировки NavigationServer и очистки всей очереди команд NavigationServer. Это может не только сильно повлиять на производительность игры, но и привести к ошибкам, если использовать ее не по назначению и без особой предусмотрительности.
			</description>
		</method>
		<method name="map_get_agents" qualifiers="const">
			<return type="Array" />
			<argument index="0" name="map" type="RID" />
			<description>
				Возвращает все навигационные агенты [RID], которые в настоящее время назначены для запрашиваемой навигационной [код]карты[/код].
			</description>
		</method>
		<method name="map_get_cell_height" qualifiers="const">
			<return type="float" />
			<argument index="0" name="map" type="RID" />
			<description>
				Возвращает высоту ячейки карты.
			</description>
		</method>
		<method name="map_get_cell_size" qualifiers="const">
			<return type="float" />
			<argument index="0" name="map" type="RID" />
			<description>
				Возвращает размер ячейки карты.
			</description>
		</method>
		<method name="map_get_closest_point" qualifiers="const">
			<return type="Vector3" />
			<argument index="0" name="map" type="RID" />
			<argument index="1" name="to_point" type="Vector3" />
			<description>
				Возвращает точку, ближайшую к указанной [code]to_point[/code] на поверхности навигационной сетки.
			</description>
		</method>
		<method name="map_get_closest_point_normal" qualifiers="const">
			<return type="Vector3" />
			<argument index="0" name="map" type="RID" />
			<argument index="1" name="to_point" type="Vector3" />
			<description>
				Возвращает нормаль для точки, возвращенной [методом map_get_closest_point].
			</description>
		</method>
		<method name="map_get_closest_point_owner" qualifiers="const">
			<return type="RID" />
			<argument index="0" name="map" type="RID" />
			<argument index="1" name="to_point" type="Vector3" />
			<description>
				Возвращает RID региона-владельца для точки, возвращенной [методом map_get_closest_point].
			</description>
		</method>
		<method name="map_get_closest_point_to_segment" qualifiers="const">
			<return type="Vector3" />
			<argument index="0" name="map" type="RID" />
			<argument index="1" name="start" type="Vector3" />
			<argument index="2" name="end" type="Vector3" />
			<argument index="3" name="use_collision" type="bool" default="false" />
			<description>
				Возвращает ближайшую точку между поверхностью навигации и сегментом.
			</description>
		</method>
		<method name="map_get_edge_connection_margin" qualifiers="const">
			<return type="float" />
			<argument index="0" name="map" type="RID" />
			<description>
				Возвращает расстояние между гранями карты. Это расстояние - минимальное расстояние между вершинами, необходимое для соединения двух ребер из разных регионов.
			</description>
		</method>
		<method name="map_get_path" qualifiers="const">
			<return type="PoolVector3Array" />
			<argument index="0" name="map" type="RID" />
			<argument index="1" name="origin" type="Vector3" />
			<argument index="2" name="destination" type="Vector3" />
			<argument index="3" name="optimize" type="bool" />
			<argument index="4" name="navigation_layers" type="int" default="1" />
			<description>
				Возвращает навигационный путь к пункту назначения из начала координат. [code]navigation_layers[/code] - битовая маска всех слоев региона, которые могут быть в пути.
			</description>
		</method>
		<method name="map_get_regions" qualifiers="const">
			<return type="Array" />
			<argument index="0" name="map" type="RID" />
			<description>
				Возвращает все навигационные регионы [RID], которые в настоящее время назначены для запрашиваемой навигационной [code]карты[/code].
			</description>
		</method>
		<method name="map_get_up" qualifiers="const">
			<return type="Vector3" />
			<argument index="0" name="map" type="RID" />
			<description>
				Возвращает направление движения карты вверх.
			</description>
		</method>
		<method name="map_is_active" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="map" type="RID" />
			<description>
				Возвращает [code]true[/code], если карта активна.
			</description>
		</method>
		<method name="map_set_active" qualifiers="const">
			<return type="void" />
			<argument index="0" name="map" type="RID" />
			<argument index="1" name="active" type="bool" />
			<description>
				Устанавливает активную карту.
			</description>
		</method>
		<method name="map_set_cell_height" qualifiers="const">
			<return type="void" />
			<argument index="0" name="map" type="RID" />
			<argument index="1" name="cell_height" type="float" />
			<description>
				Установите высоту ячейки карты, используемую для сварки полигонов навигационной сетки.
			</description>
		</method>
		<method name="map_set_cell_size" qualifiers="const">
			<return type="void" />
			<argument index="0" name="map" type="RID" />
			<argument index="1" name="cell_size" type="float" />
			<description>
				Установите размер ячейки карты, используемой для сварки полигонов навигационной сетки.
			</description>
		</method>
		<method name="map_set_edge_connection_margin" qualifiers="const">
			<return type="void" />
			<argument index="0" name="map" type="RID" />
			<argument index="1" name="margin" type="float" />
			<description>
				Установите поле соединения краев карты, используемое для сваривания совместимых краев региона.
			</description>
		</method>
		<method name="map_set_up" qualifiers="const">
			<return type="void" />
			<argument index="0" name="map" type="RID" />
			<argument index="1" name="up" type="Vector3" />
			<description>
				Устанавливает направление движения карты вверх.
			</description>
		</method>
		<method name="process">
			<return type="void" />
			<argument index="0" name="delta_time" type="float" />
			<description>
				Обработка агентов предотвращения столкновений.
				Результат этого процесса нужен физическому серверу, поэтому эта функция должна вызываться в главном потоке.
				[b]Примечание:[/b] Эта функция не является потокобезопасной.
			</description>
		</method>
		<method name="region_bake_navmesh" qualifiers="const">
			<return type="void" />
			<argument index="0" name="mesh" type="NavigationMesh" />
			<argument index="1" name="node" type="Node" />
			<description>
				Запекает навигационную сетку.
			</description>
		</method>
		<method name="region_create" qualifiers="const">
			<return type="RID" />
			<description>
				Создание нового региона.
			</description>
		</method>
		<method name="region_get_connection_pathway_end" qualifiers="const">
			<return type="Vector3" />
			<argument index="0" name="region" type="RID" />
			<argument index="1" name="connection" type="int" />
			<description>
				Возвращает конечную точку двери соединения. [code]connection[/code] - это индекс от 0 до возвращаемого значения [метода region_get_connections_count].
			</description>
		</method>
		<method name="region_get_connection_pathway_start" qualifiers="const">
			<return type="Vector3" />
			<argument index="0" name="region" type="RID" />
			<argument index="1" name="connection" type="int" />
			<description>
				Возвращает начальную точку двери соединения. [code]connection[/code] - это индекс от 0 до возвращаемого значения [метода region_get_connections_count].
			</description>
		</method>
		<method name="region_get_connections_count" qualifiers="const">
			<return type="int" />
			<argument index="0" name="region" type="RID" />
			<description>
				Возвращает количество связей данного [code]региона[/code] с другими регионами на карте.
			</description>
		</method>
		<method name="region_get_enter_cost" qualifiers="const">
			<return type="float" />
			<argument index="0" name="region" type="RID" />
			<description>
				Возвращает [code]enter_cost[/code] этого [code]региона[/code].
			</description>
		</method>
		<method name="region_get_map" qualifiers="const">
			<return type="RID" />
			<argument index="0" name="region" type="RID" />
			<description>
				Возвращает навигационную карту [RID], к которой в данный момент относится запрашиваемый [code]регион[/code].
			</description>
		</method>
		<method name="region_get_navigation_layers" qualifiers="const">
			<return type="int" />
			<argument index="0" name="region" type="RID" />
			<description>
				Возвращает навигационные слои региона.
			</description>
		</method>
		<method name="region_get_travel_cost" qualifiers="const">
			<return type="float" />
			<argument index="0" name="region" type="RID" />
			<description>
				Возвращает [code]travel_cost[/code] этого [code]региона[/code].
			</description>
		</method>
		<method name="region_owns_point" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="region" type="RID" />
			<argument index="1" name="point" type="Vector3" />
			<description>
				Возвращает [code]true[/code], если указанная [code]точка[/code] в мировом пространстве в данный момент принадлежит указанному навигационному [code]региону[/code]. Владение в данном контексте означает, что одна из граней полигона навигационной сетки региона имеет возможную позицию на самом близком расстоянии к этой точке по сравнению со всеми другими навигационными сетками из других навигационных регионов, которые также зарегистрированы на навигационной карте предоставленного региона.
				Если несколько навигационных сеток имеют позиции на одинаковом расстоянии, то побеждает тот навигационный регион, чьи полигоны обрабатываются первыми. Полигоны обрабатываются в том же порядке, в котором навигационные регионы были зарегистрированы на NavigationServer.
				[b]Примечание:[/b] Если навигационные сетки из разных навигационных регионов пересекаются (чего следует избегать в целом), результат может оказаться не таким, как ожидалось.
			</description>
		</method>
		<method name="region_set_enter_cost" qualifiers="const">
			<return type="void" />
			<argument index="0" name="region" type="RID" />
			<argument index="1" name="enter_cost" type="float" />
			<description>
				Устанавливает [code]enter_cost[/code] для данного [code]региона[/code].
			</description>
		</method>
		<method name="region_set_map" qualifiers="const">
			<return type="void" />
			<argument index="0" name="region" type="RID" />
			<argument index="1" name="map" type="RID" />
			<description>
				Устанавливает карту для региона.
			</description>
		</method>
		<method name="region_set_navigation_layers" qualifiers="const">
			<return type="void" />
			<argument index="0" name="region" type="RID" />
			<argument index="1" name="navigation_layers" type="int" />
			<description>
				Устанавливает навигационные слои региона. Это позволяет выбирать регионы из запроса пути (при использовании [метода NavigationServer.map_get_path]).
			</description>
		</method>
		<method name="region_set_navmesh" qualifiers="const">
			<return type="void" />
			<argument index="0" name="region" type="RID" />
			<argument index="1" name="nav_mesh" type="NavigationMesh" />
			<description>
				Устанавливает навигационную сетку для региона.
			</description>
		</method>
		<method name="region_set_transform" qualifiers="const">
			<return type="void" />
			<argument index="0" name="region" type="RID" />
			<argument index="1" name="transform" type="Transform" />
			<description>
				Устанавливает глобальное преобразование для региона.
			</description>
		</method>
		<method name="region_set_travel_cost" qualifiers="const">
			<return type="void" />
			<argument index="0" name="region" type="RID" />
			<argument index="1" name="travel_cost" type="float" />
			<description>
				Устанавливает [code]travel_cost[/code] для данного [code]региона[/code].
			</description>
		</method>
		<method name="set_active" qualifiers="const">
			<return type="void" />
			<argument index="0" name="active" type="bool" />
			<description>
				Контроль активации данного сервера.
			</description>
		</method>
	</methods>
	<signals>
		<signal name="map_changed">
			<argument index="0" name="map" type="RID" />
			<description>
				Выдается при обновлении навигационной карты, при перемещении или изменении региона.
			</description>
		</signal>
	</signals>
	<constants>
	</constants>
</class>
