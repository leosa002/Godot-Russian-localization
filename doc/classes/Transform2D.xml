<?xml version="1.0" encoding="UTF-8" ?>
<class name="Transform2D" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		2D-преобразование (матрица 2×3).
	</brief_description>
	<description>
		Матрица 2×3 (2 строки, 3 столбца), используемая для двумерных линейных преобразований. Она может представлять такие преобразования, как перевод, поворот или масштабирование. Она состоит из трех значений [Vector2]: [член x], [член y] и [член origin].
		Для получения дополнительной информации читайте статью документации "Матрицы и преобразования".
	</description>
	<tutorials>
		<link title="Math tutorial index">$DOCS_URL/tutorials/math/index.html</link>
		<link title="Matrices and transforms">$DOCS_URL/tutorials/math/matrices_and_transforms.html</link>
		<link title="Matrix Transform Demo">https://godotengine.org/asset-library/asset/584</link>
		<link title="2.5D Demo">https://godotengine.org/asset-library/asset/583</link>
	</tutorials>
	<methods>
		<method name="Transform2D">
			<return type="Transform2D" />
			<argument index="0" name="from" type="Transform" />
			<description>
				Создает преобразование из 3D [Transform].
			</description>
		</method>
		<method name="Transform2D">
			<return type="Transform2D" />
			<argument index="0" name="x_axis" type="Vector2" />
			<argument index="1" name="y_axis" type="Vector2" />
			<argument index="2" name="origin" type="Vector2" />
			<description>
				Создает преобразование из 3 значений [Vector2], представляющих [member x], [member y] и [member origin] (три вектора-столбца).
			</description>
		</method>
		<method name="Transform2D">
			<return type="Transform2D" />
			<argument index="0" name="rotation" type="float" />
			<argument index="1" name="position" type="Vector2" />
			<description>
				Строит преобразование из заданного угла (в радианах) и положения.
			</description>
		</method>
		<method name="affine_inverse">
			<return type="Transform2D" />
			<description>
				Возвращает обратную величину преобразования в предположении, что преобразование состоит из вращения, масштабирования и перевода.
			</description>
		</method>
		<method name="basis_xform">
			<return type="Vector2" />
			<argument index="0" name="v" type="Vector2" />
			<description>
				Возвращает вектор, преобразованный (умноженный) на базисную матрицу.
				Этот метод не учитывает трансляцию (вектор начала координат).
			</description>
		</method>
		<method name="basis_xform_inv">
			<return type="Vector2" />
			<argument index="0" name="v" type="Vector2" />
			<description>
				Возвращает вектор, преобразованный (умноженный) на обратную basis матрицу.
				Этот метод не учитывает перевод (вектор начала координат).
			</description>
		</method>
		<method name="get_origin">
			<return type="Vector2" />
			<description>
				Возвращает начало координат (перевод/translation) трансформации.
			</description>
		</method>
		<method name="get_rotation">
			<return type="float" />
			<description>
				Возвращает вращение трансформации (в радианах).
			</description>
		</method>
		<method name="get_scale">
			<return type="Vector2" />
			<description>
				Возвращает значение масштаба.
			</description>
		</method>
		<method name="interpolate_with">
			<return type="Transform2D" />
			<argument index="0" name="transform" type="Transform2D" />
			<argument index="1" name="weight" type="float" />
			<description>
				Возвращает преобразование, интерполированное между этим и другим преобразованием на заданный [code]вес[/code] (в диапазоне от 0.0 до 1.0).
			</description>
		</method>
		<method name="inverse">
			<return type="Transform2D" />
			<description>
				Возвращает обратную величину преобразования в предположении, что преобразование состоит из вращения и перевода (без масштабирования, для преобразований с масштабированием используйте [метод affine_inverse]).
			</description>
		</method>
		<method name="is_equal_approx">
			<return type="bool" />
			<argument index="0" name="transform" type="Transform2D" />
			<description>
				Возвращает [code]true[/code], если данное преобразование и [code]transform[/code] приблизительно равны, вызывая [code]is_equal_approx[/code] для каждого компонента.
			</description>
		</method>
		<method name="orthonormalized">
			<return type="Transform2D" />
			<description>
				Возвращает преобразование с базисом, ортогональным (90 градусов), и нормализованными осевыми векторами (масштаб 1 или -1).
			</description>
		</method>
		<method name="rotated">
			<return type="Transform2D" />
			<argument index="0" name="angle" type="float" />
			<description>
				Возвращает копию преобразования, повернутого на заданный [code]угол[/code] (в радианах), с использованием матричного умножения.
			</description>
		</method>
		<method name="scaled">
			<return type="Transform2D" />
			<argument index="0" name="scale" type="Vector2" />
			<description>
				Возвращает копию трансформации, масштабированную на заданный [code]scale[/code] коэффициент, используя матричное умножение.
				[b]Примечание:[/b] Отрицательные масштабы по X в 2D не разлагаются из матрицы преобразования. Из-за того, как масштаб представлен в матрицах трансформации в Godot, отрицательные масштабы по оси X будут заменены на отрицательные масштабы по оси Y и поворот на 180 градусов при декомпозиции.
			</description>
		</method>
		<method name="translated">
			<return type="Transform2D" />
			<argument index="0" name="offset" type="Vector2" />
			<description>
				Возвращает копию преобразования, переведенную на заданное [code]смещение[/code], относительно базисных векторов преобразования.
				В отличие от [method rotated] и [method scaled], здесь не используется матричное умножение.
			</description>
		</method>
		<method name="xform">
			<return type="Variant" />
			<argument index="0" name="v" type="Variant" />
			<description>
				Преобразовывает заданный [Vector2], [Rect2] или [PoolVector2Array] с помощью данного преобразования.
			</description>
		</method>
		<method name="xform_inv">
			<return type="Variant" />
			<argument index="0" name="v" type="Variant" />
			<description>
				Инверсия - преобразование заданного [Vector2], [Rect2] или [PoolVector2Array] данным преобразованием в предположении, что преобразование состоит из вращения и перевода (без масштабирования). Эквивалентно вызову [code]inverse().xform(v)[/code] для этого преобразования. Для аффинных преобразований (например, с масштабированием) смотрите метод [method affine_inverse].
			</description>
		</method>
	</methods>
	<members>
		<member name="origin" type="Vector2" setter="" getter="" default="Vector2( 0, 0 )">
			Вектор начала координат (столбец 2, третий столбец). Эквивалентен индексу массива [code]2[/code]. Вектор начала координат представляет собой перевод.
		</member>
		<member name="x" type="Vector2" setter="" getter="" default="Vector2( 1, 0 )">
			Вектор X basis матрицы (столбец 0). Эквивалентен индексу массива [code]0[/code].
		</member>
		<member name="y" type="Vector2" setter="" getter="" default="Vector2( 0, 1 )">
			Вектор Y basis матрицы (столбец 1). Эквивалентен индексу массива [code]1[/code].
		</member>
	</members>
	<constants>
		<constant name="IDENTITY" value="Transform2D( 1, 0, 0, 1, 0, 0 )">
			Идентичность [Transform2D] без применения перевода, вращения или масштабирования. При применении к другим структурам данных [constant IDENTITY] не выполняет никаких преобразований.
		</constant>
		<constant name="FLIP_X" value="Transform2D( -1, 0, 0, 1, 0, 0 )">
			[Transform2D], который будет переворачивать что-либо вдоль оси X.
		</constant>
		<constant name="FLIP_Y" value="Transform2D( 1, 0, 0, -1, 0, 0 )">
			[Transform2D], который будет переворачивать что-то по оси Y.
		</constant>
	</constants>
</class>
