<?xml version="1.0" encoding="UTF-8" ?>
<class name="CollisionObject" inherits="Spatial" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Базовый узел для объектов столкновения.
	</brief_description>
	<description>
		CollisionObject - это базовый класс для объектов физики. Он может содержать любое количество столкновений [Shape]s. Каждая форма должна быть назначена владельцу [i]формы[/i]. Объект CollisionObject может иметь любое количество владельцев фигур. Владельцы фигур не являются узлами и не отображаются в редакторе, но доступны через код с помощью методов [code]shape_owner_*[/code].
		[b]Предупреждение:[/b] При неравномерном масштабе этот узел, вероятно, не будет работать так, как ожидается. Пожалуйста, убедитесь, что его масштаб равномерен (т.е. одинаков по всем осям), и вместо этого измените размер (размеры) его формы (форм) столкновения.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_input_event" qualifiers="virtual">
			<return type="void" />
			<argument index="0" name="camera" type="Object" />
			<argument index="1" name="event" type="InputEvent" />
			<argument index="2" name="position" type="Vector3" />
			<argument index="3" name="normal" type="Vector3" />
			<argument index="4" name="shape_idx" type="int" />
			<description>
				Получает необработанные события [InputEvent]s. [code]position[/code] - это местоположение в мировом пространстве указателя мыши на поверхности фигуры с индексом [code]shape_idx[/code], а [code]normal[/code] - вектор нормали к поверхности в этой точке. Подключитесь к сигналу [signal input_event], чтобы легко улавливать эти события.
			</description>
		</method>
		<method name="create_shape_owner">
			<return type="int" />
			<argument index="0" name="owner" type="Object" />
			<description>
				Создает нового владельца формы для данного объекта. Возвращает [code]owner_id[/code] нового владельца для дальнейшего использования.
			</description>
		</method>
		<method name="get_collision_layer_bit" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="bit" type="int" />
			<description>
				Возвращает, установлен или нет указанный [code]бит[/code] в [member collision_layer].
			</description>
		</method>
		<method name="get_collision_mask_bit" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="bit" type="int" />
			<description>
				Возвращает, установлен или нет указанный [code]бит[/code] в [member collision_mask].
			</description>
		</method>
		<method name="get_rid" qualifiers="const">
			<return type="RID" />
			<description>
				Возвращает [RID] объекта.
			</description>
		</method>
		<method name="get_shape_owners">
			<return type="Array" />
			<description>
				Возвращает [массив] идентификаторов [code]owner_id[/code]. Вы можете использовать эти идентификаторы в других методах, принимающих [code]owner_id[/code] в качестве аргумента.
			</description>
		</method>
		<method name="is_shape_owner_disabled" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="owner_id" type="int" />
			<description>
				Если [code]true[/code], то владелец фигуры и его фигуры отключены.
			</description>
		</method>
		<method name="remove_shape_owner">
			<return type="void" />
			<argument index="0" name="owner_id" type="int" />
			<description>
				Удаляет владельца данной фигуры.
			</description>
		</method>
		<method name="set_collision_layer_bit">
			<return type="void" />
			<argument index="0" name="bit" type="int" />
			<argument index="1" name="value" type="bool" />
			<description>
				Если [code]value[/code] равно [code]true[/code], устанавливает указанный [code]бит[/code] в [member collision_layer].
				Если [code]value[/code] равно [code]false[/code], очищает указанный [code]бит[/code] в [member collision_layer].
			</description>
		</method>
		<method name="set_collision_mask_bit">
			<return type="void" />
			<argument index="0" name="bit" type="int" />
			<argument index="1" name="value" type="bool" />
			<description>
				Если [code]value[/code] равно [code]true[/code], устанавливает указанный [code]бит[/code] в [member collision_mask].
				Если [code]value[/code] равно [code]false[/code], очищает указанный [code]бит[/code] в [member collision_mask].
			</description>
		</method>
		<method name="shape_find_owner" qualifiers="const">
			<return type="int" />
			<argument index="0" name="shape_index" type="int" />
			<description>
				Возвращает [code]owner_id[/code] данной формы.
			</description>
		</method>
		<method name="shape_owner_add_shape">
			<return type="void" />
			<argument index="0" name="owner_id" type="int" />
			<argument index="1" name="shape" type="Shape" />
			<description>
				Добавляет [Shape] к владельцу фигуры.
			</description>
		</method>
		<method name="shape_owner_clear_shapes">
			<return type="void" />
			<argument index="0" name="owner_id" type="int" />
			<description>
				Удаляет все фигуры из владельца фигур.
			</description>
		</method>
		<method name="shape_owner_get_owner" qualifiers="const">
			<return type="Object" />
			<argument index="0" name="owner_id" type="int" />
			<description>
				Возвращает родительский объект данного владельца фигуры.
			</description>
		</method>
		<method name="shape_owner_get_shape" qualifiers="const">
			<return type="Shape" />
			<argument index="0" name="owner_id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<description>
				Возвращает [Shape] с заданным идентификатором из данного владельца формы.
			</description>
		</method>
		<method name="shape_owner_get_shape_count" qualifiers="const">
			<return type="int" />
			<argument index="0" name="owner_id" type="int" />
			<description>
				Возвращает количество фигур, которые содержит данный владелец фигуры.
			</description>
		</method>
		<method name="shape_owner_get_shape_index" qualifiers="const">
			<return type="int" />
			<argument index="0" name="owner_id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<description>
				Возвращает дочерний индекс [Shape] с заданным id от данного владельца формы.
			</description>
		</method>
		<method name="shape_owner_get_transform" qualifiers="const">
			<return type="Transform" />
			<argument index="0" name="owner_id" type="int" />
			<description>
				Возвращает [Transform] владельца формы.
			</description>
		</method>
		<method name="shape_owner_remove_shape">
			<return type="void" />
			<argument index="0" name="owner_id" type="int" />
			<argument index="1" name="shape_id" type="int" />
			<description>
				Удаляет фигуру из данного владельца фигуры.
			</description>
		</method>
		<method name="shape_owner_set_disabled">
			<return type="void" />
			<argument index="0" name="owner_id" type="int" />
			<argument index="1" name="disabled" type="bool" />
			<description>
				Если [code]true[/code], отключает данного владельца фигуры.
			</description>
		</method>
		<method name="shape_owner_set_transform">
			<return type="void" />
			<argument index="0" name="owner_id" type="int" />
			<argument index="1" name="transform" type="Transform" />
			<description>
				Устанавливает [Transform] для данного владельца фигуры.
			</description>
		</method>
	</methods>
	<members>
		<member name="collision_layer" type="int" setter="set_collision_layer" getter="get_collision_layer" default="1">
			Слои физики, в которых находится данный CollisionObject3D. Объекты столкновений могут существовать в одном или нескольких из 32 различных слоев. См. также [member collision_mask].
			[b]Примечание:[/b] Контакт обнаруживается, если объект A находится в любом из слоев, которые сканирует объект B, или объект B находится в любом слое, который сканирует объект A. Дополнительные сведения см. в документации [url=$DOCS_URL/tutorials/physics/physics_introduction.html#collision-layers-and-masks]Collision layers and masks[/url].
		</member>
		<member name="collision_mask" type="int" setter="set_collision_mask" getter="get_collision_mask" default="1">
			Физические слои, которые сканирует данный CollisionObject3D. Объекты столкновений могут сканировать один или несколько из 32 различных слоев. См. также [member collision_layer].
			[b]Примечание:[/b] Контакт обнаруживается, если объект A находится в любом из слоев, которые сканирует объект B, или объект B находится в любом из слоев, которые сканирует объект A. Дополнительные сведения см. в документации [url=$DOCS_URL/tutorials/physics/physics_introduction.html#collision-layers-and-masks]Collision layers and masks[/url].
		</member>
		<member name="input_capture_on_drag" type="bool" setter="set_capture_input_on_drag" getter="get_capture_input_on_drag" default="false">
			Если [code]true[/code], то объект [CollisionObject] будет продолжать получать события ввода при перетаскивании мыши по его фигурам.
		</member>
		<member name="input_ray_pickable" type="bool" setter="set_ray_pickable" getter="is_ray_pickable" default="true">
			Если [code]true[/code], то этот объект является pickable. Объект pickable может обнаружить вход/выход указателя мыши и, если мышь находится внутри него, сообщить о событиях ввода. Требуется, чтобы был установлен хотя бы один бит [member collision_layer].
		</member>
	</members>
	<signals>
		<signal name="input_event">
			<argument index="0" name="camera" type="Node" />
			<argument index="1" name="event" type="InputEvent" />
			<argument index="2" name="position" type="Vector3" />
			<argument index="3" name="normal" type="Vector3" />
			<argument index="4" name="shape_idx" type="int" />
			<description>
				Выдается, когда объект получает необработанное событие [InputEvent]. [code]position[/code] - это положение в мировом пространстве указателя мыши на поверхности фигуры с индексом [code]shape_idx[/code], а [code]normal[/code] - вектор нормали к поверхности в этой точке.
			</description>
		</signal>
		<signal name="mouse_entered">
			<description>
				Выдается, когда указатель мыши попадает в любую из фигур этого объекта.
			</description>
		</signal>
		<signal name="mouse_exited">
			<description>
				Выдается, когда указатель мыши выходит из всех фигур этого объекта.
			</description>
		</signal>
	</signals>
	<constants>
	</constants>
</class>
