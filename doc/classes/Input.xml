<?xml version="1.0" encoding="UTF-8" ?>
<class name="Input" inherits="Object" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Синглтон, который работает с входными данными.
	</brief_description>
	<description>
		Синглтон, работающий с входными данными. Сюда входят нажатия клавиш, кнопки мыши и перемещения, джойпады и действия ввода. Действия и их события можно задать на вкладке [b]Input Map[/b] в [b]Project &gt; Project Settings[/b] или с помощью класса [InputMap].
	</description>
	<tutorials>
		<link title="Inputs tutorial index">$DOCS_URL/tutorials/inputs/index.html</link>
		<link title="2D Dodge The Creeps Demo">https://godotengine.org/asset-library/asset/515</link>
		<link title="3D Voxel Demo">https://godotengine.org/asset-library/asset/676</link>
	</tutorials>
	<methods>
		<method name="action_press">
			<return type="void" />
			<argument index="0" name="action" type="String" />
			<argument index="1" name="strength" type="float" default="1.0" />
			<description>
				Это имитирует нажатие указанного действия.
				Сила может быть использована для небулевых действий, она варьируется от 0 до 1, представляя интенсивность данного действия.
				[b]Примечание:[/b] Этот метод не вызывает никаких вызовов [method Node._input]. Он предназначен для использования с [method is_action_pressed] и [method is_action_just_pressed]. Если вы хотите имитировать [code]_input[/code], используйте вместо него [method parse_input_event].
			</description>
		</method>
		<method name="action_release">
			<return type="void" />
			<argument index="0" name="action" type="String" />
			<description>
				Если указанное действие уже нажато, это действие отпустит его.
			</description>
		</method>
		<method name="add_joy_mapping">
			<return type="void" />
			<argument index="0" name="mapping" type="String" />
			<argument index="1" name="update_existing" type="bool" default="false" />
			<description>
				Добавляет новую запись отображения (в формате SDL2) в базу данных отображения. Опционально обновляет уже подключенные устройства.
			</description>
		</method>
		<method name="flush_buffered_events">
			<return type="void" />
			<description>
				Отправляет все события ввода, находящиеся в текущем буфере, в игровой цикл. Эти события могут быть помещены в буфер в результате накопленного ввода ([member use_accumulated_input]) или проворной промывки ввода ([member ProjectSettings.input_devices/buffering/agile_event_flushing]).
				Движок уже сам будет делать это в ключевых точках выполнения (по крайней мере, раз в кадр). Однако это может быть полезно в сложных случаях, когда вам нужен точный контроль над временем обработки событий.
			</description>
		</method>
		<method name="get_accelerometer" qualifiers="const">
			<return type="Vector3" />
			<description>
				Возвращает ускорение датчика акселерометра устройства, если он есть. В противном случае метод возвращает [константу Vector3.ZERO].
				Обратите внимание, что этот метод возвращает пустой [Vector3] при запуске из редактора, даже если в устройстве есть акселерометр. Чтобы считать значения с акселерометра, необходимо экспортировать проект на поддерживаемое устройство.
				[b]Примечание:[/b] Этот метод работает только на iOS, Android и UWP. На других платформах он всегда возвращает [константу Vector3.ZERO]. На Android единицей измерения для каждой оси является м/с², а на iOS и UWP - кратное гравитационное ускорение Земли [code]g[/code] (~9,81 м/с²).
			</description>
		</method>
		<method name="get_action_raw_strength" qualifiers="const">
			<return type="float" />
			<argument index="0" name="action" type="String" />
			<argument index="1" name="exact" type="bool" default="false" />
			<description>
				Возвращает значение от 0 до 1, представляющее сырую интенсивность данного действия, без учета мертвой зоны действия. В большинстве случаев вместо этого следует использовать [метод get_action_strength].
				Если [code]exact[/code] имеет значение [code]false[/code], то игнорируются дополнительные модификаторы ввода для событий [InputEventKey] и [InputEventMouseButton], а также направление для событий [InputEventJoypadMotion].
			</description>
		</method>
		<method name="get_action_strength" qualifiers="const">
			<return type="float" />
			<argument index="0" name="action" type="String" />
			<argument index="1" name="exact" type="bool" default="false" />
			<description>
				Возвращает значение от 0 до 1, отражающее интенсивность данного действия. Например, на джойпаде, чем дальше ось (аналоговые стики или триггеры L2, R2) от мертвой зоны, тем ближе значение будет к 1. Если действие отображается на элемент управления, у которого нет оси, как у клавиатуры, возвращаемое значение будет 0 или 1.
				Если [code]exact[/code] имеет значение [code]false[/code], то игнорируются дополнительные модификаторы ввода для событий [InputEventKey] и [InputEventMouseButton], а также направление для событий [InputEventJoypadMotion].
			</description>
		</method>
		<method name="get_axis" qualifiers="const">
			<return type="float" />
			<argument index="0" name="negative_action" type="String" />
			<argument index="1" name="positive_action" type="String" />
			<description>
				Получите вход оси, указав два действия, одно отрицательное и одно положительное.
				Это сокращение для написания [code]Input.get_action_strength("positive_action") - Input.get_action_strength("negative_action")[/code].
			</description>
		</method>
		<method name="get_connected_joypads">
			<return type="Array" />
			<description>
				Возвращает [Array], содержащий идентификаторы устройств всех подключенных в данный момент джойпадов.
			</description>
		</method>
		<method name="get_current_cursor_shape" qualifiers="const">
			<return type="int" enum="Input.CursorShape" />
			<description>
				Возвращает текущую назначенную форму курсора (см. [enum CursorShape]).
			</description>
		</method>
		<method name="get_gravity" qualifiers="const">
			<return type="Vector3" />
			<description>
				Возвращает значение силы тяжести датчика акселерометра устройства, если он есть. В противном случае метод возвращает [константу Vector3.ZERO].
				[b]Примечание:[/b] Этот метод работает только на Android и iOS. На других платформах он всегда возвращает [константу Vector3.ZERO]. На Android единицей измерения для каждой оси является м/с², а на iOS - кратное гравитационное ускорение Земли [code]g[/code] (~9,81 м/с²).
			</description>
		</method>
		<method name="get_gyroscope" qualifiers="const">
			<return type="Vector3" />
			<description>
				Возвращает скорость вращения в рад/с вокруг осей X, Y и Z гироскопа устройства, если он есть. В противном случае метод возвращает [константу Vector3.ZERO].
				[b]Примечание:[/b] Этот метод работает только на Android и iOS. На других платформах он всегда возвращает [константу Vector3.ZERO].
			</description>
		</method>
		<method name="get_joy_axis" qualifiers="const">
			<return type="float" />
			<argument index="0" name="device" type="int" />
			<argument index="1" name="axis" type="int" />
			<description>
				Возвращает текущее значение оси джойстика с заданным индексом (см. [enum JoystickList]).
			</description>
		</method>
		<method name="get_joy_axis_index_from_string">
			<return type="int" />
			<argument index="0" name="axis" type="String" />
			<description>
				Возвращает индекс имени указанной оси.
			</description>
		</method>
		<method name="get_joy_axis_string">
			<return type="String" />
			<argument index="0" name="axis_index" type="int" />
			<description>
				Получает ось [enum JoystickList] и возвращает ее эквивалентное имя в виде строки.
			</description>
		</method>
		<method name="get_joy_button_index_from_string">
			<return type="int" />
			<argument index="0" name="button" type="String" />
			<description>
				Возвращает индекс указанного имени кнопки.
			</description>
		</method>
		<method name="get_joy_button_string">
			<return type="String" />
			<argument index="0" name="button_index" type="int" />
			<description>
				Получает кнопку геймпада из [enum JoystickList] и возвращает ее эквивалентное имя в виде строки.
			</description>
		</method>
		<method name="get_joy_guid" qualifiers="const">
			<return type="String" />
			<argument index="0" name="device" type="int" />
			<description>
				Возвращает SDL2-совместимый GUID устройства на платформах, использующих ремаппинг геймпада, например, [code]030000004c050000c405000000010000[/code]. В противном случае возвращается [code]"Default Gamepad"[/code]. Godot использует базу данных игровых контроллеров [url=https://github.com/gabomdq/SDL_GameControllerDB]SDL2[/url] для определения имен и сопоставления геймпадов на основе этого GUID.
			</description>
		</method>
		<method name="get_joy_name">
			<return type="String" />
			<argument index="0" name="device" type="int" />
			<description>
				Возвращает название джойпада по указанному индексу устройства, например [code]PS4 Controller[/code]. Для определения имен геймпадов Godot использует [url=https://github.com/gabomdq/SDL_GameControllerDB] базу данных игровых контроллеров SDL2[/url].
			</description>
		</method>
		<method name="get_joy_vibration_duration">
			<return type="float" />
			<argument index="0" name="device" type="int" />
			<description>
				Возвращает длительность текущего эффекта вибрации в секундах.
			</description>
		</method>
		<method name="get_joy_vibration_strength">
			<return type="Vector2" />
			<argument index="0" name="device" type="int" />
			<description>
				Возвращает силу вибрации джойпада: x - сила слабого двигателя, y - сила сильного двигателя.
			</description>
		</method>
		<method name="get_last_mouse_speed" qualifiers="const">
			<return type="Vector2" />
			<description>
				Возвращает скорость движения мыши в последний раз, когда курсор был перемещен, и до следующего кадра, в котором мышь движется. Это означает, что даже если мышь не движется, эта функция все равно вернет значение последнего движения.
			</description>
		</method>
		<method name="get_magnetometer" qualifiers="const">
			<return type="Vector3" />
			<description>
				Возвращает напряженность магнитного поля в микротеслах для всех осей магнитометрического датчика устройства, если он есть. В противном случае метод возвращает [константу Vector3.ZERO].
				[b]Примечание:[/b] Этот метод работает только на Android, iOS и UWP. На других платформах он всегда возвращает [константу Vector3.ZERO].
			</description>
		</method>
		<method name="get_mouse_button_mask" qualifiers="const">
			<return type="int" />
			<description>
				Возвращает кнопки мыши в виде битовой маски. Если несколько кнопок мыши нажаты одновременно, биты суммируются.
			</description>
		</method>
		<method name="get_vector" qualifiers="const">
			<return type="Vector2" />
			<argument index="0" name="negative_x" type="String" />
			<argument index="1" name="positive_x" type="String" />
			<argument index="2" name="negative_y" type="String" />
			<argument index="3" name="positive_y" type="String" />
			<argument index="4" name="deadzone" type="float" default="-1.0" />
			<description>
				Получает вектор ввода, указывая четыре действия для положительных и отрицательных осей X и Y.
				Этот метод полезен при получении векторного ввода, например, от джойстика, курсора, стрелок или WASD. Длина вектора ограничена 1 и имеет круговую мертвую зону, что удобно при использовании векторного ввода в качестве движения.
				По умолчанию мертвая зона автоматически рассчитывается из среднего значения мертвых зон действий. Однако вы можете изменить значение мертвой зоны на любое (в диапазоне от 0 до 1).
			</description>
		</method>
		<method name="is_action_just_pressed" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="action" type="String" />
			<argument index="1" name="exact" type="bool" default="false" />
			<description>
				Возвращает [code]true[/code], когда пользователь начинает нажимать на событие действия, то есть [code]true[/code] только на том кадре, когда пользователь нажал на кнопку.
				Это полезно для кода, который должен выполняться только один раз, когда действие нажато, а не каждый кадр, пока оно нажато.
				Если [code]exact[/code] имеет значение [code]false[/code], то игнорируются дополнительные модификаторы ввода для событий [InputEventKey] и [InputEventMouseButton], а также направление для событий [InputEventJoypadMotion].
				[b]Примечание:[/b] Из-за призрачности клавиатуры [метод is_action_just_pressed] может вернуть [code]false[/code], даже если одна из клавиш действия нажата. Дополнительную информацию см. в документации [url=$DOCS_URL/tutorials/inputs/input_examples.html#keyboard-events]Примеры ввода[/url].
			</description>
		</method>
		<method name="is_action_just_released" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="action" type="String" />
			<argument index="1" name="exact" type="bool" default="false" />
			<description>
				Возвращает [code]true[/code], когда пользователь перестает нажимать на событие действия, то есть [code]true[/code] только на том кадре, на котором пользователь отпустил кнопку.
				Если [code]exact[/code] равен [code]false[/code], то игнорируются дополнительные модификаторы ввода для событий [InputEventKey] и [InputEventMouseButton], а также направление для событий [InputEventJoypadMotion].
			</description>
		</method>
		<method name="is_action_pressed" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="action" type="String" />
			<argument index="1" name="exact" type="bool" default="false" />
			<description>
				Возвращает [code]true[/code], если вы нажимаете на событие действия. Обратите внимание, что если действию назначено несколько кнопок и нажато более одной из них, отпускание одной кнопки приведет к освобождению действия, даже если какая-то другая кнопка, назначенная этому действию, все еще нажата.
				Если [code]exact[/code] имеет значение [code]false[/code], то игнорируются дополнительные модификаторы ввода для событий [InputEventKey] и [InputEventMouseButton], а также направление для событий [InputEventJoypadMotion].
				[b]Примечание:[/b] Из-за призрачности клавиатуры [метод is_action_pressed] может возвращать [code]false[/code], даже если одна из клавиш действия нажата. Дополнительную информацию см. в документации [url=$DOCS_URL/tutorials/inputs/input_examples.html#keyboard-events]Примеры ввода[/url].
			</description>
		</method>
		<method name="is_joy_button_pressed" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="device" type="int" />
			<argument index="1" name="button" type="int" />
			<description>
				Возвращает [code]true[/code], если вы нажимаете кнопку джойстика (см. [enum JoystickList]).
			</description>
		</method>
		<method name="is_joy_known">
			<return type="bool" />
			<argument index="0" name="device" type="int" />
			<description>
				Возвращает [code]true[/code], если система знает указанное устройство. Это означает, что она устанавливает все индексы кнопок и осей точно так, как определено в [enum JoystickList]. Ожидается, что неизвестные джойстики не будут соответствовать этим константам, но вы все равно сможете получать от них события.
			</description>
		</method>
		<method name="is_key_pressed" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="scancode" type="int" />
			<description>
				Возвращает [code]true[/code], если вы нажимаете клавишу в текущей раскладке клавиатуры. Вы можете передать константу [enum KeyList].
				Метод [method is_key_pressed] рекомендуется использовать вместо [method is_physical_key_pressed] только в неигровых приложениях. Это гарантирует, что клавиши быстрого доступа будут вести себя так, как ожидается, в зависимости от раскладки клавиатуры пользователя, поскольку в неигровых приложениях комбинации клавиш обычно зависят от раскладки клавиатуры. Если вы сомневаетесь, используйте [метод is_physical_key_pressed].
				[b]Примечание:[/b] Из-за призрачности клавиатуры метод [is_key_pressed] может вернуть [code]false[/code], даже если одна из клавиш действия нажата. Дополнительные сведения см. в документации [url=$DOCS_URL/tutorials/inputs/input_examples.html#keyboard-events]Примеры ввода[/url].
			</description>
		</method>
		<method name="is_mouse_button_pressed" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="button" type="int" />
			<description>
				Возвращает [code]true[/code], если вы нажимаете кнопку мыши, указанную в [enum ButtonList].
			</description>
		</method>
		<method name="is_physical_key_pressed" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="scancode" type="int" />
			<description>
				Возвращает [code]true[/code], если вы нажимаете клавишу в физическом месте на 101/102-клавишной американской QWERTY-клавиатуре. Вы можете передать константу [enum KeyList].
				Метод [method is_physical_key_pressed] рекомендуется использовать для внутриигровых действий вместо [method is_key_pressed], так как в этом случае раскладки W/A/S/D будут работать независимо от раскладки клавиатуры пользователя. [method is_physical_key_pressed] также гарантирует, что цифровые клавиши верхнего ряда будут работать на любой раскладке клавиатуры. Если вы сомневаетесь, используйте [method is_physical_key_pressed].
				[b]Примечание:[/b] Из-за призрачности клавиатуры метод [is_physical_key_pressed] может вернуть [code]false[/code], даже если одна из клавиш действия нажата. Дополнительную информацию см. в документации [url=$DOCS_URL/tutorials/inputs/input_examples.html#keyboard-events]Примеры ввода[/url].
			</description>
		</method>
		<method name="joy_connection_changed">
			<return type="void" />
			<argument index="0" name="device" type="int" />
			<argument index="1" name="connected" type="bool" />
			<argument index="2" name="name" type="String" />
			<argument index="3" name="guid" type="String" />
			<description>
				Уведомляет синглтон [Input] об изменении соединения, чтобы обновить состояние для индекса [code]device[/code].
				Это используется внутренне и не должно вызываться из пользовательских скриптов. Смотрите [signal joy_connection_changed] для сигнала, издаваемого при этом внутреннем срабатывании.
			</description>
		</method>
		<method name="parse_input_event">
			<return type="void" />
			<argument index="0" name="event" type="InputEvent" />
			<description>
				Передает [InputEvent] в игру. Может использоваться для искусственного запуска событий ввода из кода. Также генерирует вызовы [метода Node._input].
				Пример:
				[codeblock]
				var a = InputEventAction.new()
				a.action = "ui_cancel"
				a.pressed = true
				Input.parse_input_event(a)
				[/codeblock]
			</description>
		</method>
		<method name="remove_joy_mapping">
			<return type="void" />
			<argument index="0" name="guid" type="String" />
			<description>
				Удаляет из внутренней базы данных все отображения, соответствующие заданному GUID.
			</description>
		</method>
		<method name="set_accelerometer">
			<return type="void" />
			<argument index="0" name="value" type="Vector3" />
			<description>
				Устанавливает значение ускорения датчика акселерометра. Может использоваться для отладки на устройствах без аппаратного датчика, например, в редакторе на ПК.
				[b]Примечание:[/b] Это значение может быть немедленно перезаписано значением аппаратного датчика на Android и iOS.
			</description>
		</method>
		<method name="set_custom_mouse_cursor">
			<return type="void" />
			<argument index="0" name="image" type="Resource" />
			<argument index="1" name="shape" type="int" enum="Input.CursorShape" default="0" />
			<argument index="2" name="hotspot" type="Vector2" default="Vector2( 0, 0 )" />
			<description>
				Устанавливает пользовательское изображение курсора мыши, которое будет видно только в игровом окне. Также можно указать горячую точку. При передаче [code]null[/code] в параметр image происходит сброс на системный курсор. Список форм см. в [enum CursorShape].
				Размер [code]image[/code] должен быть меньше или равен 256×256. Чтобы избежать проблем с рендерингом, рекомендуется использовать размеры меньше или равные 128×128.
				[code]hotspot[/code] должен находиться в пределах размера [code]изображения[/code].
				[b]Примечание:[/b] [AnimatedTexture]ы не поддерживаются в качестве пользовательских курсоров мыши. При использовании [AnimatedTexture] будет отображаться только первый кадр.
				[b]Примечание:[/b] Поддерживаются только изображения, импортированные с режимами сжатия [b]Lossless[/b], [b]Lossy[/b] или [b]Uncompressed[/b]. Режим сжатия [b]Video RAM[/b] не может быть использован для пользовательских курсоров.
				[b]Примечание:[/b] На веб-платформе максимально допустимый размер изображения курсора составляет 128×128. Изображения курсора размером более 32×32 также будут отображаться только в том случае, если изображение курсора мыши полностью расположено на странице по [url=https://chromestatus.com/feature/5825971391299584] соображениям безопасности[/url].
			</description>
		</method>
		<method name="set_default_cursor_shape">
			<return type="void" />
			<argument index="0" name="shape" type="int" enum="Input.CursorShape" default="0" />
			<description>
				Устанавливает форму курсора по умолчанию, которая будет использоваться во вьюпорте вместо [constant CURSOR_ARROW].
				[b]Примечание:[/b] Если вы хотите изменить форму курсора по умолчанию для узлов [Control], используйте вместо этого [member Control.mouse_default_cursor_shape].
				[b]Примечание:[/b] Этот метод генерирует событие [InputEventMouseMotion] для немедленного обновления курсора.
			</description>
		</method>
		<method name="set_gravity">
			<return type="void" />
			<argument index="0" name="value" type="Vector3" />
			<description>
				Устанавливает значение силы тяжести датчика акселерометра. Может использоваться для отладки на устройствах без аппаратного датчика, например, в редакторе на ПК.
				[b]Примечание:[/b] Это значение может быть немедленно перезаписано значением аппаратного датчика на Android и iOS.
			</description>
		</method>
		<method name="set_gyroscope">
			<return type="void" />
			<argument index="0" name="value" type="Vector3" />
			<description>
				Устанавливает значение скорости вращения датчика гироскопа. Может использоваться для отладки на устройствах без аппаратного датчика, например в редакторе на ПК.
				[b]Примечание:[/b] Это значение может быть немедленно перезаписано значением аппаратного датчика на Android и iOS.
			</description>
		</method>
		<method name="set_magnetometer">
			<return type="void" />
			<argument index="0" name="value" type="Vector3" />
			<description>
				Устанавливает значение магнитного поля датчика магнитометра. Может использоваться для отладки на устройствах без аппаратного датчика, например, в редакторе на ПК.
				[b]Примечание:[/b] Это значение может быть немедленно перезаписано значением аппаратного датчика на Android и iOS.
			</description>
		</method>
		<method name="start_joy_vibration">
			<return type="void" />
			<argument index="0" name="device" type="int" />
			<argument index="1" name="weak_magnitude" type="float" />
			<argument index="2" name="strong_magnitude" type="float" />
			<argument index="3" name="duration" type="float" default="0" />
			<description>
				Начинает вибрировать джойпад. Джойпады обычно поставляются с двумя моторами вибрации, сильным и слабым. [code]weak_magnitude[/code] - сила слабого мотора (от 0 до 1), а [code]strong_magnitude[/code] - сила сильного мотора (от 0 до 1). [code]duration[/code] - длительность эффекта в секундах (при длительности 0 вибрация будет воспроизводиться бесконечно).
				[b]Примечание:[/b] Не каждое оборудование совместимо с длительными эффектами; рекомендуется перезапускать эффект, если он должен воспроизводиться более нескольких секунд.
			</description>
		</method>
		<method name="stop_joy_vibration">
			<return type="void" />
			<argument index="0" name="device" type="int" />
			<description>
				Прекращение вибрации джойпада.
			</description>
		</method>
		<method name="vibrate_handheld">
			<return type="void" />
			<argument index="0" name="duration_ms" type="int" default="500" />
			<description>
				Вибрация портативных устройств.
				[b]Примечание:[/b] Этот метод реализован на Android, iOS и HTML5.
				[b]Примечание:[/b] Для Android требуется включить разрешение [code]VIBRATE[/code] в экспортируемой предустановке.
				[b]Примечание:[/b] Для iOS указание длительности поддерживается в iOS 13 и более поздних версиях.
				[b]Примечание:[/b] Некоторые веб-браузеры, такие как Safari и Firefox для Android, не поддерживают этот метод.
			</description>
		</method>
		<method name="warp_mouse_position">
			<return type="void" />
			<argument index="0" name="to" type="Vector2" />
			<description>
				Устанавливает положение мыши на указанный вектор, заданный в пикселях и относительно начала координат в левом верхнем углу игрового окна.
				Положение мыши обрезается до пределов разрешения экрана или до пределов игрового окна, если для [enum MouseMode] установлено значение [constant MOUSE_MODE_CONFINED].
			</description>
		</method>
	</methods>
	<members>
		<member name="mouse_mode" type="int" setter="set_mouse_mode" getter="get_mouse_mode" enum="Input.MouseMode">
			Управляет режимом работы мыши. Дополнительную информацию см. в [enum MouseMode].
		</member>
		<member name="use_accumulated_input" type="bool" setter="set_use_accumulated_input" getter="is_using_accumulated_input">
			Если [code]true[/code], то аналогичные события ввода, посылаемые операционной системой, накапливаются. Когда накопление входных данных включено, все входные события, сгенерированные в течение кадра, будут объединены и выданы, когда кадр закончит рендеринг. Таким образом, количество вызовов метода ввода в секунду ограничивается FPS рендеринга.
			Накопление ввода можно отключить, чтобы получить немного более точный/реактивный ввод ценой увеличения загрузки процессора. В приложениях, где требуется рисовать линии от руки, накопление ввода обычно отключается на время рисования линии пользователем, чтобы получить результаты, точно соответствующие реальному вводу.
			[b]Примечание:[/b] Накопление ввода [i]включено[/i] по умолчанию. Рекомендуется оставить его включенным для игр, в которых не требуется очень реактивный ввод, так как это снизит нагрузку на процессор.
		</member>
	</members>
	<signals>
		<signal name="joy_connection_changed">
			<argument index="0" name="device" type="int" />
			<argument index="1" name="connected" type="bool" />
			<description>
				Выдается, когда устройство джойпада было подключено или отключено.
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="MOUSE_MODE_VISIBLE" value="0" enum="MouseMode">
			Делает курсор мыши видимым, если он скрыт.
		</constant>
		<constant name="MOUSE_MODE_HIDDEN" value="1" enum="MouseMode">
			Делает курсор мыши скрытым, если он виден.
		</constant>
		<constant name="MOUSE_MODE_CAPTURED" value="2" enum="MouseMode">
			Захватывает мышь. Мышь будет скрыта, а ее положение зафиксировано в центре экрана.
			[b]Примечание:[/b] Если вы хотите обрабатывать движение мыши в этом режиме, вам нужно использовать [member InputEventMouseMotion.relative].
		</constant>
		<constant name="MOUSE_MODE_CONFINED" value="3" enum="MouseMode">
			Делает курсор мыши видимым, но ограничивает его рамками игрового окна.
		</constant>
		<constant name="CURSOR_ARROW" value="0" enum="CursorShape">
			Курсор со стрелками. Стандартный курсор по умолчанию.
		</constant>
		<constant name="CURSOR_IBEAM" value="1" enum="CursorShape">
			Курсор в виде двутавра. Обычно используется для того, чтобы показать, где появится текстовый курсор при нажатии кнопки мыши.
		</constant>
		<constant name="CURSOR_POINTING_HAND" value="2" enum="CursorShape">
			Курсор в виде указывающей руки. Обычно используется для указания на то, что указатель находится над ссылкой или другим взаимодействующим элементом.
		</constant>
		<constant name="CURSOR_CROSS" value="3" enum="CursorShape">
			Крестообразный курсор. Обычно появляется над областями, в которых можно выполнить операцию рисования, или для выделения.
		</constant>
		<constant name="CURSOR_WAIT" value="4" enum="CursorShape">
			Курсор ожидания. Указывает на то, что приложение занято выполнением какой-либо операции. Такая форма курсора означает, что приложение не может быть использовано во время выполнения операции (например, что-то блокирует его основной поток).
		</constant>
		<constant name="CURSOR_BUSY" value="5" enum="CursorShape">
			Занятый курсор. Указывает, что приложение занято выполнением операции. Такая форма курсора означает, что приложение все еще можно использовать во время выполнения операции.
		</constant>
		<constant name="CURSOR_DRAG" value="6" enum="CursorShape">
			Курсор перетаскивания. Обычно отображается при перетаскивании чего-либо.
		</constant>
		<constant name="CURSOR_CAN_DROP" value="7" enum="CursorShape">
			Курсор "Можно бросить". Обычно отображается при перетаскивании чего-либо, чтобы указать, что его можно опустить в текущей позиции.
		</constant>
		<constant name="CURSOR_FORBIDDEN" value="8" enum="CursorShape">
			Запрещенный курсор. Указывает, что текущее действие запрещено (например, при перетаскивании чего-либо) или что элемент управления в данной позиции отключен.
		</constant>
		<constant name="CURSOR_VSIZE" value="9" enum="CursorShape">
			Вертикальное изменение размера курсора мыши. Двуглавая вертикальная стрелка. Она указывает пользователю, что он может изменить размер окна или панели по вертикали.
		</constant>
		<constant name="CURSOR_HSIZE" value="10" enum="CursorShape">
			Горизонтальный курсор мыши для изменения размера. Двуглавая горизонтальная стрелка. Она указывает пользователю, что он может изменить размер окна или панели по горизонтали.
		</constant>
		<constant name="CURSOR_BDIAGSIZE" value="11" enum="CursorShape">
			Изменение размера курсора мыши в окне. Курсор представляет собой двунаправленную стрелку, идущую от левого нижнего угла к правому верхнему. Она указывает пользователю, что он может изменять размер окна или панели как по горизонтали, так и по вертикали.
		</constant>
		<constant name="CURSOR_FDIAGSIZE" value="12" enum="CursorShape">
			Изменение размера курсора мыши в окне. Курсор представляет собой двунаправленную стрелку, идущую от левого верхнего края к правому нижнему, противоположную [constant CURSOR_BDIAGSIZE]. Он сообщает пользователю, что он может изменять размеры окна или панели как по горизонтали, так и по вертикали.
		</constant>
		<constant name="CURSOR_MOVE" value="13" enum="CursorShape">
			Переместить курсор. Указывает на возможность перемещения.
		</constant>
		<constant name="CURSOR_VSPLIT" value="14" enum="CursorShape">
			Разделение курсора мыши по вертикали. В Windows это то же самое, что и [constant CURSOR_VSIZE].
		</constant>
		<constant name="CURSOR_HSPLIT" value="15" enum="CursorShape">
			Горизонтальное разделение курсора мыши. В Windows это то же самое, что и [constant CURSOR_HSIZE].
		</constant>
		<constant name="CURSOR_HELP" value="16" enum="CursorShape">
			Справочный курсор. Обычно это знак вопроса.
		</constant>
	</constants>
</class>
