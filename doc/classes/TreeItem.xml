<?xml version="1.0" encoding="UTF-8" ?>
<class name="TreeItem" inherits="Object" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Управление одним элементом внутри [Tree].
	</brief_description>
	<description>
		Элемент управления для одного элемента внутри [Tree]. Может иметь дочерние [TreeItem] и быть стилизованным, а также содержать кнопки.
		Удалить [TreeItem] можно с помощью [метода Object.free].
		[b]Примечание:[/b] Значения ID, используемые для кнопок, ограничены 32 битами, а не полными 64 битами [int]. Это диапазон от [code]-2^32[/code] до [code]2^32 - 1[/code], т.е. от [code]-2147483648[/code] до [code]2147483647[/code].
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="add_button">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="button" type="Texture" />
			<argument index="2" name="id" type="int" default="-1" />
			<argument index="3" name="disabled" type="bool" default="false" />
			<argument index="4" name="tooltip" type="String" default="&quot;&quot;" />
			<description>
				Добавляет кнопку с [текстурой] [code]button[/code] в колонку [code]column[/code]. Для идентификации кнопки используется [code]id[/code]. Если он не указан, используется следующий доступный индекс, который можно получить, вызвав [метод get_button_count] непосредственно перед этим методом. По желанию кнопка может быть [code]отключена[/code] и иметь [code]всплывающую подсказку[/code].
			</description>
		</method>
		<method name="call_recursive" qualifiers="vararg">
			<return type="Variant" />
			<argument index="0" name="method" type="String" />
			<description>
				Вызывает [code]метод[/code] на реальном TreeItem и его дочерних элементах рекурсивно. Передавайте параметры в виде списка, разделенного запятыми.
			</description>
		</method>
		<method name="clear_custom_bg_color">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<description>
				Устанавливает цвет фона для заданного столбца по умолчанию.
			</description>
		</method>
		<method name="clear_custom_color">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<description>
				Устанавливает цвет для заданного столбца по умолчанию.
			</description>
		</method>
		<method name="deselect">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<description>
				Отменяет выделение заданного столбца.
			</description>
		</method>
		<method name="erase_button">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="button_idx" type="int" />
			<description>
				Удаляет кнопку с индексом [code]button_idx[/code] в столбце [code]column[/code].
			</description>
		</method>
		<method name="get_button" qualifiers="const">
			<return type="Texture" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="button_idx" type="int" />
			<description>
				Возвращает [Texture] кнопки с индексом [code]button_idx[/code] в столбце [code]column[/code].
			</description>
		</method>
		<method name="get_button_by_id" qualifiers="const">
			<return type="int" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="id" type="int" />
			<description>
				Возвращает индекс кнопки, если в столбце [code]column[/code] есть кнопка с id [code]id[/code], иначе возвращает -1.
			</description>
		</method>
		<method name="get_button_count" qualifiers="const">
			<return type="int" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает количество кнопок в столбце [code]column[/code].
			</description>
		</method>
		<method name="get_button_id" qualifiers="const">
			<return type="int" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="button_idx" type="int" />
			<description>
				Возвращает идентификатор кнопки с индексом [code]button_idx[/code] в столбце [code]column[/code].
			</description>
		</method>
		<method name="get_button_tooltip" qualifiers="const">
			<return type="String" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="button_idx" type="int" />
			<description>
				Возвращает строку всплывающей подсказки для кнопки с индексом [code]button_idx[/code] в столбце [code]column[/code].
			</description>
		</method>
		<method name="get_cell_mode" qualifiers="const">
			<return type="int" enum="TreeItem.TreeCellMode" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает режим ячеек столбца.
			</description>
		</method>
		<method name="get_children">
			<return type="TreeItem" />
			<description>
				Возвращает первый дочерний элемент TreeItem или объект null, если таковой отсутствует.
			</description>
		</method>
		<method name="get_custom_bg_color" qualifiers="const">
			<return type="Color" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает пользовательский цвет фона колонки [code]column[/code].
			</description>
		</method>
		<method name="get_custom_color" qualifiers="const">
			<return type="Color" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает пользовательский цвет колонки [code]column[/code].
			</description>
		</method>
		<method name="get_expand_right" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает [code]true[/code], если установлено [code]expand_right[/code].
			</description>
		</method>
		<method name="get_icon" qualifiers="const">
			<return type="Texture" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает иконку [Texture] заданного столбца. Ошибка, если иконка не задана.
			</description>
		</method>
		<method name="get_icon_max_width" qualifiers="const">
			<return type="int" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает максимальную ширину значка столбца.
			</description>
		</method>
		<method name="get_icon_modulate" qualifiers="const">
			<return type="Color" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает [Color], модулирующий значок колонки.
			</description>
		</method>
		<method name="get_icon_region" qualifiers="const">
			<return type="Rect2" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает область иконки [Texture] в виде [Rect2].
			</description>
		</method>
		<method name="get_metadata" qualifiers="const">
			<return type="Variant" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает значение метаданных, которое было установлено для данного столбца с помощью [метода set_metadata].
			</description>
		</method>
		<method name="get_next">
			<return type="TreeItem" />
			<description>
				Возвращает следующий сиблинговый TreeItem в дереве или объект null, если его нет.
			</description>
		</method>
		<method name="get_next_visible">
			<return type="TreeItem" />
			<argument index="0" name="wrap" type="bool" default="false" />
			<description>
				Возвращает следующий видимый элемент TreeItem в дереве или объект null, если его нет.
				Если включена функция [code]wrap[/code], то при вызове метода на последнем видимом элементе он будет обернут к первому видимому элементу в дереве, в противном случае возвращается [code]null[/code].
			</description>
		</method>
		<method name="get_parent">
			<return type="TreeItem" />
			<description>
				Возвращает родительский TreeItem или объект null, если его нет.
			</description>
		</method>
		<method name="get_prev">
			<return type="TreeItem" />
			<description>
				Возвращает предыдущий дочерний элемент TreeItem в дереве или объект null, если таковой отсутствует.
			</description>
		</method>
		<method name="get_prev_visible">
			<return type="TreeItem" />
			<argument index="0" name="wrap" type="bool" default="false" />
			<description>
				Возвращает предыдущий видимый элемент TreeItem в дереве или объект null, если его нет.
				Если включена функция [code]wrap[/code], то при вызове метода на первом видимом элементе он будет обернут к последнему видимому элементу в дереве, в противном случае возвращается [code]null[/code].
			</description>
		</method>
		<method name="get_range" qualifiers="const">
			<return type="float" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает значение столбца [константа CELL_MODE_RANGE].
			</description>
		</method>
		<method name="get_range_config">
			<return type="Dictionary" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает словарь, содержащий параметры диапазона для заданного столбца. Ключами являются "min", "max", "step" и "expr".
			</description>
		</method>
		<method name="get_suffix" qualifiers="const">
			<return type="String" />
			<argument index="0" name="column" type="int" />
			<description>
				Получает строку суффикса, отображаемую после значения столбца.
			</description>
		</method>
		<method name="get_text" qualifiers="const">
			<return type="String" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает текст заданного столбца.
			</description>
		</method>
		<method name="get_text_align" qualifiers="const">
			<return type="int" enum="TreeItem.TextAlign" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает выравнивание текста в заданном столбце.
			</description>
		</method>
		<method name="get_tooltip" qualifiers="const">
			<return type="String" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает всплывающую подсказку данного столбца.
			</description>
		</method>
		<method name="is_button_disabled" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="button_idx" type="int" />
			<description>
				Возвращает [code]true[/code], если кнопка с индексом [code]button_idx[/code] для данного столбца отключена.
			</description>
		</method>
		<method name="is_checked" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает [code]true[/code], если указанный столбец отмечен.
			</description>
		</method>
		<method name="is_custom_set_as_button" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="column" type="int" />
			<description>
			</description>
		</method>
		<method name="is_editable">
			<return type="bool" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает [code]true[/code], если столбец [code]column[/code] является редактируемым.
			</description>
		</method>
		<method name="is_selectable" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает [code]true[/code], если столбец [code]column[/code] является выбираемым.
			</description>
		</method>
		<method name="is_selected">
			<return type="bool" />
			<argument index="0" name="column" type="int" />
			<description>
				Возвращает [code]true[/code], если выбран столбец [code]column[/code].
			</description>
		</method>
		<method name="move_to_bottom">
			<return type="void" />
			<description>
				Перемещает этот элемент дерева в самый низ иерархии [Tree].
			</description>
		</method>
		<method name="move_to_top">
			<return type="void" />
			<description>
				Перемещает этот элемент дерева на вершину иерархии [Tree].
			</description>
		</method>
		<method name="remove_child">
			<return type="void" />
			<argument index="0" name="child" type="Object" />
			<description>
				Удаляет заданный дочерний [TreeItem] и все его дочерние элементы из [Tree]. Обратите внимание, что при этом элемент не освобождается из памяти, так что его можно использовать повторно. Чтобы полностью удалить [TreeItem], используйте [метод Object.free].
			</description>
		</method>
		<method name="select">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<description>
				Выбор столбца [code]column[/code].
			</description>
		</method>
		<method name="set_button">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="button_idx" type="int" />
			<argument index="2" name="button" type="Texture" />
			<description>
				Устанавливает [Texture] кнопки данного столбца с индексом [code]button_idx[/code] на [code]button[/code].
			</description>
		</method>
		<method name="set_button_disabled">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="button_idx" type="int" />
			<argument index="2" name="disabled" type="bool" />
			<description>
				Если [code]true[/code], отключает кнопку с индексом [code]button_idx[/code] в столбце [code]column[/code].
			</description>
		</method>
		<method name="set_cell_mode">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="mode" type="int" enum="TreeItem.TreeCellMode" />
			<description>
				Устанавливает режим ячеек данного столбца в [code]mode[/code]. См. константы [enum TreeCellMode].
			</description>
		</method>
		<method name="set_checked">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="checked" type="bool" />
			<description>
				Если [code]true[/code], то проверяется столбец [code]column[/code].
			</description>
		</method>
		<method name="set_custom_as_button">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="enable" type="bool" />
			<description>
			</description>
		</method>
		<method name="set_custom_bg_color">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="color" type="Color" />
			<argument index="2" name="just_outline" type="bool" default="false" />
			<description>
				Устанавливает пользовательский цвет фона данного столбца и определяет, использовать ли его просто как контур.
			</description>
		</method>
		<method name="set_custom_color">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="color" type="Color" />
			<description>
				Устанавливает пользовательский цвет заданного столбца.
			</description>
		</method>
		<method name="set_custom_draw">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="object" type="Object" />
			<argument index="2" name="callback" type="String" />
			<description>
				Устанавливает пользовательский обратный вызов рисования данной колонки в метод [code]callback[/code] на [code]объекте[/code].
				Обратный вызов [code]callback[/code] должен принимать два аргумента: рисуемый элемент [TreeItem], его положение и размер в виде [Rect2].
			</description>
		</method>
		<method name="set_editable">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="enabled" type="bool" />
			<description>
				Если [code]true[/code], то столбец [code]column[/code] является редактируемым.
			</description>
		</method>
		<method name="set_expand_right">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="enable" type="bool" />
			<description>
				Если [code]true[/code], то столбец [code]column[/code] расширяется вправо.
			</description>
		</method>
		<method name="set_icon">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="texture" type="Texture" />
			<description>
				Устанавливает иконку [Texture] данного столбца.
			</description>
		</method>
		<method name="set_icon_max_width">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="width" type="int" />
			<description>
				Устанавливает максимальную ширину иконки данного столбца.
			</description>
		</method>
		<method name="set_icon_modulate">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="modulate" type="Color" />
			<description>
				Модулирует иконку заданного столбца с помощью [code]modulate[/code].
			</description>
		</method>
		<method name="set_icon_region">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="region" type="Rect2" />
			<description>
				Устанавливает область текстуры иконки данного столбца.
			</description>
		</method>
		<method name="set_metadata">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="meta" type="Variant" />
			<description>
				Устанавливает значение метаданных для данного столбца, которое впоследствии можно будет получить с помощью [метода get_metadata]. Это можно использовать, например, для хранения ссылки на исходные данные.
			</description>
		</method>
		<method name="set_range">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="value" type="float" />
			<description>
				Устанавливает значение столбца [constant CELL_MODE_RANGE].
			</description>
		</method>
		<method name="set_range_config">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="min" type="float" />
			<argument index="2" name="max" type="float" />
			<argument index="3" name="step" type="float" />
			<argument index="4" name="expr" type="bool" default="false" />
			<description>
				Устанавливает диапазон принимаемых значений для столбца. Столбец должен находиться в режиме [константа CELL_MODE_RANGE].
				Если [code]expr[/code] имеет значение [code]true[/code], ползунок режима редактирования будет использовать экспоненциальную шкалу, как в случае [member Range.exp_edit].
			</description>
		</method>
		<method name="set_selectable">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="selectable" type="bool" />
			<description>
				Если [code]true[/code], то данный столбец можно выбрать.
			</description>
		</method>
		<method name="set_suffix">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="text" type="String" />
			<description>
				Задает строку, которая будет отображаться после значения столбца (например, сокращение единиц измерения).
			</description>
		</method>
		<method name="set_text">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="text" type="String" />
			<description>
				Устанавливает текстовое значение данного столбца.
			</description>
		</method>
		<method name="set_text_align">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="text_align" type="int" enum="TreeItem.TextAlign" />
			<description>
				Устанавливает выравнивание текста в данном столбце. Возможные значения см. в [enum TextAlign].
			</description>
		</method>
		<method name="set_tooltip">
			<return type="void" />
			<argument index="0" name="column" type="int" />
			<argument index="1" name="tooltip" type="String" />
			<description>
				Устанавливает текст всплывающей подсказки для данного столбца.
			</description>
		</method>
	</methods>
	<members>
		<member name="collapsed" type="bool" setter="set_collapsed" getter="is_collapsed">
			Если [code]true[/code], то элемент TreeItem сворачивается.
		</member>
		<member name="custom_minimum_height" type="int" setter="set_custom_minimum_height" getter="get_custom_minimum_height">
			The custom minimum height.
		</member>
		<member name="disable_folding" type="bool" setter="set_disable_folding" getter="is_folding_disabled">
			Если [code]true[/code], то сворачивание для этого TreeItem отключено.
		</member>
	</members>
	<constants>
		<constant name="CELL_MODE_STRING" value="0" enum="TreeCellMode">
			Ячейка содержит строку.
		</constant>
		<constant name="CELL_MODE_CHECK" value="1" enum="TreeCellMode">
			Ячейка содержит флажок.
		</constant>
		<constant name="CELL_MODE_RANGE" value="2" enum="TreeCellMode">
			Ячейка содержит диапазон.
		</constant>
		<constant name="CELL_MODE_ICON" value="3" enum="TreeCellMode">
			Ячейка содержит значок.
		</constant>
		<constant name="CELL_MODE_CUSTOM" value="4" enum="TreeCellMode">
		</constant>
		<constant name="ALIGN_LEFT" value="0" enum="TextAlign">
			Выравнивание текста по левому краю. Смотрите [code]set_text_align()[/code].
		</constant>
		<constant name="ALIGN_CENTER" value="1" enum="TextAlign">
			Выравнивание текста по центру. См. [code]set_text_align()[/code].
		</constant>
		<constant name="ALIGN_RIGHT" value="2" enum="TextAlign">
			Выравнивание текста по правому краю. Смотрите [code]set_text_align()[/code].
		</constant>
	</constants>
</class>
