<?xml version="1.0" encoding="UTF-8" ?>
<class name="PropertyTweener" inherits="Tweener" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Интерполирует свойство [Object] с течением времени.
	</brief_description>
	<description>
		[PropertyTweener] используется для интерполяции свойства в объекте. Более подробную информацию об использовании смотрите в [method SceneTreeTween.tween_property].
		[b]Примечание:[/b] [метод SceneTreeTween.tween_property] является единственным правильным способом создания [PropertyTweener]. Любой [PropertyTweener], созданный вручную, будет работать некорректно.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="as_relative">
			<return type="PropertyTweener" />
			<description>
				При вызове конечное значение будет использоваться в качестве относительного. Пример:
				[codeblock]
				var tween = get_tree().create_tween()
				tween.tween_property(self, "position", Vector2.RIGHT * 100, 1).as_relative() #узел переместится на 100 пикселей вправо
				[/codeblock]
			</description>
		</method>
		<method name="from">
			<return type="PropertyTweener" />
			<argument index="0" name="value" type="Variant" />
			<description>
				Устанавливает пользовательское начальное значение для [PropertyTweener]. Пример:
				[codeblock]
				var tween = get_tree().create_tween()
				tween.tween_property(self, "position", Vector2(200, 100), 1).from(Vector2(100, 100) #Это переместит узел из позиции (100, 100) в позицию (200, 100)
				[/codeblock]
			</description>
		</method>
		<method name="from_current">
			<return type="PropertyTweener" />
			<description>
				Заставляет [PropertyTweener] использовать текущее значение свойства (т.е. на момент создания этого [PropertyTweener]) в качестве отправной точки. Это эквивалентно использованию [метода from] с текущим значением. Эти два вызова сделают то же самое:
				[codeblock]
				tween.tween_property(self, "position", Vector2(200, 100), 1).from(position)
				tween.tween_property(self, "position", Vector2(200, 100), 1).from_current()
				[/codeblock]
			</description>
		</method>
		<method name="set_delay">
			<return type="PropertyTweener" />
			<argument index="0" name="delay" type="float" />
			<description>
				Устанавливает время в секундах, через которое [PropertyTweener] начнет интерполировать. По умолчанию задержка отсутствует.
			</description>
		</method>
		<method name="set_ease">
			<return type="PropertyTweener" />
			<argument index="0" name="ease" type="int" enum="Tween.EaseType" />
			<description>
				Устанавливает тип используемого смягчения из [enum Tween.EaseType]. Если значение не задано, используется смягчение по умолчанию из [SceneTreeTween], содержащего этот твинер.
			</description>
		</method>
		<method name="set_trans">
			<return type="PropertyTweener" />
			<argument index="0" name="trans" type="int" enum="Tween.TransitionType" />
			<description>
				Устанавливает тип используемого перехода из [enum Tween.TransitionType]. Если значение не задано, используется переход по умолчанию из [SceneTreeTween], содержащего этот твинер.
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
