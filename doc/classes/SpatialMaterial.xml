<?xml version="1.0" encoding="UTF-8" ?>
<class name="SpatialMaterial" inherits="Material" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Материал 3D-рендеринга по умолчанию.
	</brief_description>
	<description>
		Это позволяет получить материал по умолчанию с широким набором функций и свойств рендеринга без необходимости писать код шейдеров. Подробности смотрите в учебнике ниже.
	</description>
	<tutorials>
		<link>$DOCS_URL/tutorials/3d/spatial_material.html</link>
	</tutorials>
	<methods>
		<method name="get_feature" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="feature" type="int" enum="SpatialMaterial.Feature" />
			<description>
				Возвращает [code]true[/code], если указанная [enum Feature] включена.
			</description>
		</method>
		<method name="get_flag" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="flag" type="int" enum="SpatialMaterial.Flags" />
			<description>
				Возвращает [code]true[/code], если указанный флаг включен. Опции см. в перечислителе [enum Flags].
			</description>
		</method>
		<method name="get_texture" qualifiers="const">
			<return type="Texture" />
			<argument index="0" name="param" type="int" enum="SpatialMaterial.TextureParam" />
			<description>
				Возвращает [Texture], связанную с указанным [enum TextureParam].
			</description>
		</method>
		<method name="set_feature">
			<return type="void" />
			<argument index="0" name="feature" type="int" enum="SpatialMaterial.Feature" />
			<argument index="1" name="enable" type="bool" />
			<description>
				Если [code]true[/code], включает указанную [enum Feature]. Многие функции, доступные в [SpatialMaterial]ах, должны быть включены перед использованием. Таким образом, затраты на использование функции возникают только при ее указании. Функции также можно включить, установив соответствующий член в [code]true[/code].
			</description>
		</method>
		<method name="set_flag">
			<return type="void" />
			<argument index="0" name="flag" type="int" enum="SpatialMaterial.Flags" />
			<argument index="1" name="enable" type="bool" />
			<description>
				Если [code]true[/code], включает указанный флаг. Флаги - это необязательное поведение, которое можно включать и выключать. Одновременно с помощью этой функции можно включить только один флаг, перечислители флагов не могут быть объединены битовой маской, чтобы включить или выключить несколько флагов одновременно. Флаги также можно включить, установив соответствующий член в [code]true[/code]. Варианты перечисления см. в перечислителе [enum Flags].
			</description>
		</method>
		<method name="set_texture">
			<return type="void" />
			<argument index="0" name="param" type="int" enum="SpatialMaterial.TextureParam" />
			<argument index="1" name="texture" type="Texture" />
			<description>
				Устанавливает [Texture], которая будет использоваться указанным [enum TextureParam]. Эта функция вызывается при установке членов, заканчивающихся на [code]*_texture[/code].
			</description>
		</method>
	</methods>
	<members>
		<member name="albedo_color" type="Color" setter="set_albedo" getter="get_albedo" default="Color( 1, 1, 1, 1 )">
			Основной цвет материала.
		</member>
		<member name="albedo_texture" type="Texture" setter="set_texture" getter="get_texture">
			Текстура для умножения на [member albedo_color]. Используется для базового текстурирования объектов.
		</member>
		<member name="anisotropy" type="float" setter="set_anisotropy" getter="get_anisotropy">
			Сила эффекта анизотропии. Умножается на альфа-канал [member anisotropy_flowmap], если там определена текстура и текстура содержит альфа-канал.
		</member>
		<member name="anisotropy_enabled" type="bool" setter="set_feature" getter="get_feature" default="false">
			Если [code]true[/code], анизотропия включена. Анизотропия изменяет форму зеркального пятна и выравнивает его по касательной к пространству. Это полезно для матового алюминия и отражения волос.
			[b]Примечание:[/b] Для работы анизотропии необходимы тангенсы сетки. Если сетка не содержит касательных, эффект анизотропии будет выглядеть нарушенным.
			[b]Примечание:[/b] Анизотропию материала не следует путать с анизотропной фильтрацией текстур. Анизотропную фильтрацию текстур можно включить, выбрав текстуру в доке FileSystem, перейдя в док Import, установив флажок [b]Anisotropic[/b] и нажав [b]Reimport[/b]. Уровень анизотропной фильтрации можно изменить, настроив [member ProjectSettings.rendering/quality/filters/anisotropic_filter_level].
		</member>
		<member name="anisotropy_flowmap" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, которая смещает карту касательных для расчетов анизотропии и опционально управляет эффектом анизотропии (если присутствует альфа-канал). Текстура flowmap должна быть производной, с красным каналом, представляющим искажение по оси X, и зеленым каналом, представляющим искажение по оси Y. Значения ниже 0,5 приводят к отрицательным искажениям, а значения выше 0,5 - к положительным.
			Если присутствует, альфа-канал текстуры будет использоваться для умножения силы эффекта [анизотропии членов]. Полностью непрозрачные пиксели сохранят исходную силу эффекта анизотропии, в то время как полностью прозрачные пиксели полностью отключат эффект анизотропии. Синий канал текстуры flowmap игнорируется.
		</member>
		<member name="ao_enabled" type="bool" setter="set_feature" getter="get_feature" default="false">
			Если [code]true[/code], то окклюзия окружения включена. Окружающая окклюзия затемняет области, основанные на [члене ao_texture].
		</member>
		<member name="ao_light_affect" type="float" setter="set_ao_light_affect" getter="get_ao_light_affect">
			Степень влияния окклюзии окружающей среды на освещение от фонарей. Если [code]0[/code], ambient occlusion влияет только на окружающий свет. Если [code]1[/code], окружающая окклюзия влияет на освещение так же сильно, как и на окружающий свет. Это можно использовать для влияния на силу эффекта ambient occlusion, но обычно он выглядит нереалистично.
		</member>
		<member name="ao_on_uv2" type="bool" setter="set_flag" getter="get_flag">
			Если [code]true[/code], используйте [code]UV2[/code] координаты для поиска вверх от [member ao_texture].
		</member>
		<member name="ao_texture" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, определяющая степень окклюзии для данной точки объекта.
		</member>
		<member name="ao_texture_channel" type="int" setter="set_ao_texture_channel" getter="get_ao_texture_channel" enum="SpatialMaterial.TextureChannel">
			Указывает канал [member ao_texture], в котором хранится информация об окклюзии окружения. Это полезно, когда вы храните информацию о нескольких эффектах в одной текстуре. Например, если вы сохраните металлический цвет в красном канале, шероховатость - в синем, а окружающую окклюзию - в зеленом, вы сможете сократить количество используемых текстур.
		</member>
		<member name="async_mode" type="int" setter="set_async_mode" getter="get_async_mode" enum="SpatialMaterial.AsyncMode" default="0">
			Если [member ProjectSettings.rendering/gles3/shaders/shader_compilation_mode] имеет значение [code]Synchronous[/code] (с кэшем или без), это определяет, как данный материал должен вести себя в отношении асинхронной компиляции шейдеров.
			[constant ASYNC_MODE_VISIBLE] - это значение по умолчанию и наилучшее для большинства случаев.
		</member>
		<member name="clearcoat" type="float" setter="set_clearcoat" getter="get_clearcoat">
			Устанавливает силу эффекта прозрачного покрытия. Установка значения [code]0[/code] аналогична отключению эффекта прозрачного покрытия.
		</member>
		<member name="clearcoat_enabled" type="bool" setter="set_feature" getter="get_feature" default="false">
			Если [code]true[/code], рендеринг прозрачного слоя включен. Добавляет вторичный прозрачный проход к расчету освещения, что приводит к добавлению спекулярного пятна. Благодаря этому материалы выглядят так, будто на них нанесен прозрачный слой, который может быть глянцевым или шероховатым.
			[b]Примечание:[/b] Рендеринг прозрачного слоя не будет виден, если для материала [member flags_unshaded] установлено значение [code]true[/code].
		</member>
		<member name="clearcoat_gloss" type="float" setter="set_clearcoat_gloss" getter="get_clearcoat_gloss">
			Устанавливает шероховатость прохода прозрачного покрытия. При большем значении получается более гладкое прозрачное покрытие, а при меньшем - более шероховатое.
		</member>
		<member name="clearcoat_texture" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, определяющая силу эффекта прозрачного покрытия и его блеск. Сила задается в красном канале, а блеск - в зеленом.
		</member>
		<member name="depth_deep_parallax" type="bool" setter="set_depth_deep_parallax" getter="is_depth_deep_parallax_enabled">
			Если [code]true[/code], шейдер будет считывать текстуру глубины в нескольких точках вдоль луча зрения, чтобы определить окклюзию и параллакс. Это может быть очень требовательно к производительности, но позволяет получить более реалистичное отображение глубины.
		</member>
		<member name="depth_enabled" type="bool" setter="set_feature" getter="get_feature" default="false">
			Если [code]true[/code], то включено отображение глубины (также называемое "отображением параллакса" или "отображением высоты"). См. также [member normal_enabled].
			[b]Примечание:[/b] Картирование глубины не поддерживается, если на одном и том же материале используется трипланарное отображение. Значение [member depth_enabled] будет игнорироваться, если включен [member uv1_triplanar].
		</member>
		<member name="depth_flip_binormal" type="bool" setter="set_depth_deep_parallax_flip_binormal" getter="get_depth_deep_parallax_flip_binormal">
			Если [code]true[/code], то направление бинормали будет перевернуто перед использованием в эффекте глубины. Это может понадобиться, если вы закодировали бинормали таким образом, что они конфликтуют с эффектом глубины.
		</member>
		<member name="depth_flip_tangent" type="bool" setter="set_depth_deep_parallax_flip_tangent" getter="get_depth_deep_parallax_flip_tangent">
			Если [code]true[/code], направление касательной будет перевернуто перед использованием в эффекте глубины. Это может понадобиться, если вы закодировали касательные таким образом, что они конфликтуют с эффектом глубины.
		</member>
		<member name="depth_max_layers" type="int" setter="set_depth_deep_parallax_max_layers" getter="get_depth_deep_parallax_max_layers">
			Количество слоев, используемых при использовании [member depth_deep_parallax] и направлении взгляда перпендикулярно поверхности объекта. Большее число будет более требовательным к производительности, в то время как меньшее число может выглядеть не так четко.
		</member>
		<member name="depth_min_layers" type="int" setter="set_depth_deep_parallax_min_layers" getter="get_depth_deep_parallax_min_layers">
			Количество слоев, используемых при использовании [member depth_deep_parallax] и направлении взгляда параллельно поверхности объекта. Большее число будет более требовательным к производительности, в то время как меньшее число может выглядеть не так четко.
		</member>
		<member name="depth_scale" type="float" setter="set_depth_scale" getter="get_depth_scale">
			Масштаб эффекта смещения глубины. Большее число создает большую глубину.
		</member>
		<member name="depth_texture" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, используемая для определения глубины в данном пикселе. Глубина всегда хранится в красном канале.
		</member>
		<member name="detail_albedo" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, задающая цвет наложения деталей.
		</member>
		<member name="detail_blend_mode" type="int" setter="set_detail_blend_mode" getter="get_detail_blend_mode" enum="SpatialMaterial.BlendMode">
			Определяет, как [член detail_albedo] должен сочетаться с текущим [code]ALBEDO[/code]. Варианты см. в [enum BlendMode].
		</member>
		<member name="detail_enabled" type="bool" setter="set_feature" getter="get_feature" default="false">
			Если [code]true[/code], включается наложение деталей. Деталь - это вторая текстура, которая накладывается на поверхность объекта на основе [member detail_mask]. Это можно использовать для добавления разнообразия объектам или для смешивания двух разных альбедо/нормальных текстур.
		</member>
		<member name="detail_mask" type="Texture" setter="set_texture" getter="get_texture">
			Текстура используется для указания способа смешивания текстур деталей с базовыми текстурами.
		</member>
		<member name="detail_normal" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, определяющая пиксельную нормаль наложения деталей.
			[b]Примечание:[/b] Godot ожидает, что карта нормалей будет использовать координаты X+, Y+ и Z+. Сравнение координат карты нормалей, ожидаемых популярными движками, приведено на [url=http://wiki.polycount.com/wiki/Normal_Map_Technical_Details#Common_Swizzle_Coordinates]этой странице[/url].
		</member>
		<member name="detail_uv_layer" type="int" setter="set_detail_uv" getter="get_detail_uv" enum="SpatialMaterial.DetailUV">
			Указывает, использовать ли [code]UV[/code] или [code]UV2[/code] для слоя детализации. Варианты см. в [enum DetailUV].
		</member>
		<member name="distance_fade_max_distance" type="float" setter="set_distance_fade_max_distance" getter="get_distance_fade_max_distance">
			Расстояние, на котором объект становится полностью непрозрачным.
			[b]Примечание:[/b] Если [code]distance_fade_max_distance[/code] меньше, чем [code]distance_fade_min_distance[/code], поведение будет обратным. Объект начнет исчезать на [code]distance_fade_max_distance[/code] и полностью исчезнет, когда достигнет [code]distance_fade_min_distance[/code].
		</member>
		<member name="distance_fade_min_distance" type="float" setter="set_distance_fade_min_distance" getter="get_distance_fade_min_distance">
			Расстояние, на котором объект начинает становиться видимым. Если объект находится на расстоянии меньше этого значения, он будет невидим.
			[b]Примечание:[/b] Если [code]distance_fade_min_distance[/code] больше, чем [code]distance_fade_max_distance[/code], поведение будет обратным. Объект начнет исчезать на [code]distance_fade_max_distance[/code] и полностью исчезнет, когда достигнет [code]distance_fade_min_distance[/code].
		</member>
		<member name="distance_fade_mode" type="int" setter="set_distance_fade" getter="get_distance_fade" enum="SpatialMaterial.DistanceFadeMode" default="0">
			Указывает, какой тип затухания следует использовать. Может быть любым из [enum DistanceFadeMode].
		</member>
		<member name="emission" type="Color" setter="set_emission" getter="get_emission">
			Цвет излучаемого света. См. [member emission_enabled].
		</member>
		<member name="emission_enabled" type="bool" setter="set_feature" getter="get_feature" default="false">
			Если [code]true[/code], тело излучает свет. Излучая свет, объект выглядит ярче. Объект также может отбрасывать свет на другие объекты, если используется [GIProbe] или [BakedLightmap] и этот объект используется в запеченном освещении.
		</member>
		<member name="emission_energy" type="float" setter="set_emission_energy" getter="get_emission_energy">
			Сила излучаемого света. См. [member emission_enabled].
		</member>
		<member name="emission_on_uv2" type="bool" setter="set_flag" getter="get_flag">
			Используйте [code]UV2[/code] для чтения из [member emission_texture].
		</member>
		<member name="emission_operator" type="int" setter="set_emission_operator" getter="get_emission_operator" enum="SpatialMaterial.EmissionOperator">
			Устанавливает, как [member emission] взаимодействует с [member emission_texture]. Может либо складывать, либо умножать. Варианты см. в [enum EmissionOperator].
		</member>
		<member name="emission_texture" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, определяющая, насколько сильно поверхность излучает свет в данной точке.
		</member>
		<member name="flags_albedo_tex_force_srgb" type="bool" setter="set_flag" getter="get_flag" default="false">
			Принудительное преобразование [member albedo_texture] из пространства sRGB в линейное пространство.
		</member>
		<member name="flags_albedo_tex_msdf" type="bool" setter="set_flag" getter="get_flag" default="false">
			Включает шейдер рендеринга поля расстояния с подписью.
		</member>
		<member name="flags_disable_ambient_light" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], объект не получает окружающего света.
		</member>
		<member name="flags_do_not_receive_shadows" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], объект не получает тени, которая в противном случае была бы отброшена на него.
		</member>
		<member name="flags_ensure_correct_normals" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], шейдер будет вычислять дополнительные операции, чтобы нормали оставались правильными при использовании неравномерного масштаба. Включать только при использовании неравномерного масштабирования.
		</member>
		<member name="flags_fixed_size" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], то объект будет отрисовываться в одном и том же размере независимо от расстояния.
		</member>
		<member name="flags_no_depth_test" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], тестирование глубины отключено, и объект будет отрисовываться в порядке рендеринга.
		</member>
		<member name="flags_transparent" type="bool" setter="set_feature" getter="get_feature" default="false">
			Если [code]true[/code], то для тела включена прозрачность. См. также [member params_blend_mode].
		</member>
		<member name="flags_unshaded" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], то на объект не влияет освещение.
		</member>
		<member name="flags_use_point_size" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], размер точки рендеринга может быть изменен.
			[b]Примечание:[/b] Это эффективно только для объектов, геометрия которых основана на точках, а не на треугольниках. См. также [member params_point_size].
		</member>
		<member name="flags_use_shadow_to_opacity" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], включается режим рендеринга "от тени к непрозрачности", при котором освещение изменяет альфа-канал так, что затененные области становятся непрозрачными, а незатененные - прозрачными. Полезно для наложения теней на камеру в AR.
		</member>
		<member name="flags_vertex_lighting" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], освещение рассчитывается на вершину, а не на пиксель. Это может повысить производительность на низкопроизводительных устройствах, особенно для сеток с меньшим количеством полигонов. Недостатком является то, что затенение становится гораздо менее точным, с заметной линейной интерполяцией между вершинами, которые соединяются вместе. Это можно компенсировать, обеспечив сеткам достаточный уровень деления (но не слишком большой, чтобы не снижать производительность). Некоторые свойства материалов также не поддерживаются, если включено вершинное затенение.
			См. также [member ProjectSettings.rendering/quality/shading/force_vertex_shading], который может глобально включить вершинное затенение для всех материалов.
			[b]Примечание:[/b] По умолчанию вершинное затенение на мобильных платформах обеспечивается переопределением [code]mobile[/code] в [member ProjectSettings.rendering/quality/shading/force_vertex_shading].
			[b]Примечание:[/b] [member flags_vertex_lighting] не имеет эффекта, если [member flags_unshaded] имеет значение [code]true[/code].
		</member>
		<member name="flags_world_triplanar" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], трипланарное отображение рассчитывается в мировом пространстве, а не в локальном пространстве объекта. См. также [member uv1_triplanar].
		</member>
		<member name="metallic" type="float" setter="set_metallic" getter="get_metallic" default="0.0">
			Высокое значение делает материал более похожим на металл. Неметаллы используют альбедо в качестве цвета рассеивания и добавляют рассеивание к зеркальному отражению. У неметаллов отражение появляется поверх цвета альбедо. Металлы используют свое альбедо как множитель к зеркальному отражению и устанавливают диффузный цвет на черный, в результате чего отражение получается тонированным. Материалы лучше работают, когда они полностью металлические или полностью неметаллические, значения между [code]0[/code] и [code]1[/code] следует использовать только для смешивания металлических и неметаллических секций. Для изменения степени отражения используйте [шероховатость члена].
		</member>
		<member name="metallic_specular" type="float" setter="set_specular" getter="get_specular" default="0.5">
			Устанавливает размер лепестка спекуляции. Зеркальный лепесток - это яркое пятно, которое отражается от источников света.
			[b]Примечание:[/b] В отличие от [member metallic], этот параметр не является энергосберегающим, поэтому в большинстве случаев его следует оставлять равным [code]0.5[/code]. См. также [member roughness].
		</member>
		<member name="metallic_texture" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, используемая для задания металлического цвета для объекта. Это значение умножается на [member metallic].
		</member>
		<member name="metallic_texture_channel" type="int" setter="set_metallic_texture_channel" getter="get_metallic_texture_channel" enum="SpatialMaterial.TextureChannel" default="0">
			Указывает канал [member metallic_texture], в котором хранится информация о металлике. Это полезно, когда вы храните информацию для нескольких эффектов в одной текстуре. Например, если вы сохраните металлический цвет в красном канале, шероховатость - в синем, а окружающую окклюзию - в зеленом, вы сможете сократить количество используемых текстур.
		</member>
		<member name="normal_enabled" type="bool" setter="set_feature" getter="get_feature" default="false">
			Если [code]true[/code], нормальное отображение включено.
		</member>
		<member name="normal_scale" type="float" setter="set_normal_scale" getter="get_normal_scale">
			Сила эффекта карты нормалей.
		</member>
		<member name="normal_texture" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, используемая для задания нормали в данном пикселе. В [code]normal_texture[/code] используются только красный и зеленый каналы; синий и альфа-каналы игнорируются. Нормаль, считанная из [code]normal_texture[/code], ориентирована вокруг нормали поверхности, заданной [Mesh].
			[b]Примечание:[/b] В вершинных данных сетки должны быть определены как нормали, так и касательные. В противном случае карта нормалей не будет отображаться корректно и будет казаться, что затемнена только вся поверхность. Если вы создаете геометрию с помощью [SurfaceTool], вы можете использовать [method SurfaceTool.generate_normals] и [method SurfaceTool.generate_tangents] для автоматической генерации нормалей и касательных соответственно.
			[b]Примечание:[/b] Godot ожидает, что карта нормалей будет использовать координаты X+, Y+ и Z+. Сравнение координат карты нормалей, ожидаемых популярными движками, приведено на [url=http://wiki.polycount.com/wiki/Normal_Map_Technical_Details#Common_Swizzle_Coordinates]этой странице[/url].
		</member>
		<member name="params_alpha_scissor_threshold" type="float" setter="set_alpha_scissor_threshold" getter="get_alpha_scissor_threshold">
			Порог, при котором альфа-ножницы будут отбрасывать значения.
		</member>
		<member name="params_billboard_keep_scale" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], шейдер сохранит масштаб, установленный для сетки. В противном случае масштаб будет потерян при билбординге. Применяется только в том случае, если [member params_billboard_mode] - [constant BILLBOARD_ENABLED].
		</member>
		<member name="params_billboard_mode" type="int" setter="set_billboard_mode" getter="get_billboard_mode" enum="SpatialMaterial.BillboardMode" default="0">
			Управляет тем, как объект обращен к камере. Смотрите [enum BillboardMode].
			[b]Примечание:[/b] Режим Billboard не подходит для VR, поскольку вектор камеры влево-вправо не является горизонтальным, когда экран прикреплен к голове, а не к столу. Подробности см. в [url=https://github.com/godotengine/godot/issues/41567]GitHub issue #41567[/url].
		</member>
		<member name="params_blend_mode" type="int" setter="set_blend_mode" getter="get_blend_mode" enum="SpatialMaterial.BlendMode" default="0">
			Режим наложения материала.
			[b]Примечание:[/b] Значения, отличные от [code]Mix[/code], заставляют объект переходить в прозрачный режим. Смотрите [enum BlendMode].
		</member>
		<member name="params_cull_mode" type="int" setter="set_cull_mode" getter="get_cull_mode" enum="SpatialMaterial.CullMode" default="0">
			Какая сторона объекта не рисуется при отрисовке задних граней. См. раздел [enum CullMode].
		</member>
		<member name="params_depth_draw_mode" type="int" setter="set_depth_draw_mode" getter="get_depth_draw_mode" enum="SpatialMaterial.DepthDrawMode" default="0">
			Определяет, когда происходит рендеринг глубины. См. [enum DepthDrawMode]. См. также [member flags_transparent].
		</member>
		<member name="params_diffuse_mode" type="int" setter="set_diffuse_mode" getter="get_diffuse_mode" enum="SpatialMaterial.DiffuseMode" default="0">
			Алгоритм, используемый для диффузного рассеивания света. См. [enum DiffuseMode].
		</member>
		<member name="params_grow" type="bool" setter="set_grow_enabled" getter="is_grow_enabled" default="false">
			Если [code]true[/code], включает настройку роста вершин. См. раздел [member params_grow_amount].
		</member>
		<member name="params_grow_amount" type="float" setter="set_grow" getter="get_grow">
			Увеличивает вершины объекта в направлении их нормалей.
		</member>
		<member name="params_line_width" type="float" setter="set_line_width" getter="get_line_width" default="1.0">
			В настоящее время не реализована в Godot.
		</member>
		<member name="params_point_size" type="float" setter="set_point_size" getter="get_point_size" default="1.0">
			Размер точки в пикселях. См. раздел [member flags_use_point_size].
		</member>
		<member name="params_specular_mode" type="int" setter="set_specular_mode" getter="get_specular_mode" enum="SpatialMaterial.SpecularMode" default="0">
			Метод рендеринга спекулярного пятна. См. [enum SpecularMode].
		</member>
		<member name="params_use_alpha_scissor" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], шейдер отбрасывает все пиксели, альфа-значение которых меньше, чем [member params_alpha_scissor_threshold].
		</member>
		<member name="particles_anim_h_frames" type="int" setter="set_particles_anim_h_frames" getter="get_particles_anim_h_frames">
			Количество горизонтальных кадров в спрайтовом листе частиц. Включается только при использовании [константы BILLBOARD_PARTICLES]. См. [member params_billboard_mode].
		</member>
		<member name="particles_anim_loop" type="bool" setter="set_particles_anim_loop" getter="get_particles_anim_loop">
			Если [code]true[/code], анимация частиц зацикливается. Включается только при использовании [константы BILLBOARD_PARTICLES]. См. раздел [member params_billboard_mode].
		</member>
		<member name="particles_anim_v_frames" type="int" setter="set_particles_anim_v_frames" getter="get_particles_anim_v_frames">
			Количество вертикальных кадров в спрайтовом листе частиц. Включается только при использовании [константы BILLBOARD_PARTICLES]. См. [member params_billboard_mode].
		</member>
		<member name="proximity_fade_distance" type="float" setter="set_proximity_fade_distance" getter="get_proximity_fade_distance">
			Расстояние, на котором происходит эффект затухания. Чем больше расстояние, тем дольше объект будет затухать.
		</member>
		<member name="proximity_fade_enable" type="bool" setter="set_proximity_fade" getter="is_proximity_fade_enabled" default="false">
			Если [code]true[/code], то эффект затухания близости включен. Эффект затухания при приближении затухает для каждого пикселя в зависимости от расстояния до другого объекта.
		</member>
		<member name="refraction_enabled" type="bool" setter="set_feature" getter="get_feature" default="false">
			Если [code]true[/code], то эффект преломления включен. Преломление искажает прозрачность, основываясь на свете, проходящем сзади объекта. При использовании бэкенда GLES3 значение шероховатости материала влияет на размытость преломления. При более высоких значениях шероховатости преломление будет выглядеть более размытым.
		</member>
		<member name="refraction_scale" type="float" setter="set_refraction" getter="get_refraction">
			Сила эффекта преломления. Более высокие значения приводят к более искаженному виду преломления.
		</member>
		<member name="refraction_texture" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, управляющая силой преломления на пиксель. Умножается на [member refraction_scale].
		</member>
		<member name="refraction_texture_channel" type="int" setter="set_refraction_texture_channel" getter="get_refraction_texture_channel" enum="SpatialMaterial.TextureChannel">
			Указывает канал [member refraction_texture], в котором хранится информация о преломлении. Это полезно, когда вы храните информацию для нескольких эффектов в одной текстуре. Например, если вы храните металлический цвет в красном канале, шероховатость - в синем, а окружающую окклюзию - в зеленом, вы можете сократить количество используемых текстур.
		</member>
		<member name="rim" type="float" setter="set_rim" getter="get_rim">
			Устанавливает силу эффекта освещения ободка.
		</member>
		<member name="rim_enabled" type="bool" setter="set_feature" getter="get_feature" default="false">
			Если [code]true[/code], эффект ободка включен. Окантовочное освещение увеличивает яркость под углами падения света на объект.
			[b]Примечание:[/b] Подсветка обода не видна, если для материала [member flags_unshaded] установлено значение [code]true[/code].
		</member>
		<member name="rim_texture" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, используемая для установки силы эффекта освещения обода на пиксель. Умножается на [member rim].
		</member>
		<member name="rim_tint" type="float" setter="set_rim_tint" getter="get_rim_tint">
			Количество смешивания цвета света и цвета альбедо при рендеринге эффекта ободка. Если [code]0[/code], то используется светлый цвет, а [code]1[/code] означает, что используется цвет альбедо. Обычно лучше всего работает промежуточное значение.
		</member>
		<member name="roughness" type="float" setter="set_roughness" getter="get_roughness" default="1.0">
			Отражение поверхности. Значение [code]0[/code] представляет собой идеальное зеркало, а значение [code]1[/code] полностью размывает отражение. См. также [member metallic].
		</member>
		<member name="roughness_texture" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, используемая для управления шероховатостью на пиксель. Умножается на [member roughness].
		</member>
		<member name="roughness_texture_channel" type="int" setter="set_roughness_texture_channel" getter="get_roughness_texture_channel" enum="SpatialMaterial.TextureChannel" default="0">
			Указывает канал [member ao_texture], в котором хранится информация об окклюзии окружения. Это полезно, когда вы храните информацию о нескольких эффектах в одной текстуре. Например, если вы сохраните металлический цвет в красном канале, шероховатость - в синем, а окружающую окклюзию - в зеленом, вы сможете сократить количество используемых текстур.
		</member>
		<member name="subsurf_scatter_enabled" type="bool" setter="set_feature" getter="get_feature" default="false">
			Если [code]true[/code], включается подповерхностное рассеивание. Эмулирует свет, который проникает через поверхность объекта, рассеивается и затем выходит наружу.
		</member>
		<member name="subsurf_scatter_strength" type="float" setter="set_subsurface_scattering_strength" getter="get_subsurface_scattering_strength">
			Сила эффекта подповерхностного рассеяния.
		</member>
		<member name="subsurf_scatter_texture" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, используемая для управления силой подповерхностного рассеивания. Хранится в красном канале текстуры. Умножается на [member subsurf_scatter_strength].
		</member>
		<member name="transmission" type="Color" setter="set_transmission" getter="get_transmission">
			Цвет, используемый в эффекте передачи. Представляет собой свет, проходящий через объект.
		</member>
		<member name="transmission_enabled" type="bool" setter="set_feature" getter="get_feature" default="false">
			Если [code]true[/code], эффект передачи включен.
		</member>
		<member name="transmission_texture" type="Texture" setter="set_texture" getter="get_texture">
			Текстура, используемая для управления эффектом передачи на пиксель. Добавлена в [member transmission].
		</member>
		<member name="uv1_offset" type="Vector3" setter="set_uv1_offset" getter="get_uv1_offset" default="Vector3( 0, 0, 0 )">
			На сколько смещать [code]UV[/code] координаты. Эта величина будет добавлена к [code]UV[/code] в функции вершин. Это можно использовать для смещения текстуры.
		</member>
		<member name="uv1_scale" type="Vector3" setter="set_uv1_scale" getter="get_uv1_scale" default="Vector3( 1, 1, 1 )">
			На сколько масштабировать [code]UV[/code] координаты. Это значение умножается на [code]UV[/code] в функции вершины.
		</member>
		<member name="uv1_triplanar" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], то вместо использования [code]UV[/code] текстуры будут использовать трипланарный поиск текстур для определения способа применения текстур. Трипланарный поиск использует ориентацию поверхности объекта для смешивания координат текстур. Он считывает данные из исходной текстуры 3 раза, по одному разу для каждой оси, а затем смешивает результаты, основываясь на том, насколько близко пиксель выровнен с каждой осью. Это часто используется для природных объектов, чтобы получить реалистичное смешение материалов. Поскольку трипланарное текстурирование требует гораздо большего количества считываний текстуры на пиксель, оно работает гораздо медленнее, чем обычное УФ-текстурирование. Кроме того, поскольку текстура смешивается между тремя осями, она не подходит для получения четкой текстуры.
		</member>
		<member name="uv1_triplanar_sharpness" type="float" setter="set_uv1_triplanar_blend_sharpness" getter="get_uv1_triplanar_blend_sharpness" default="1.0">
			Меньшее число делает текстуру более мягкой, а большее - более резкой.
		</member>
		<member name="uv2_offset" type="Vector3" setter="set_uv2_offset" getter="get_uv2_offset" default="Vector3( 0, 0, 0 )">
			На сколько смещать координаты [code]UV2[/code]. Эта величина будет добавлена к [code]UV2[/code] в функции вершин. Это можно использовать для смещения текстуры.
		</member>
		<member name="uv2_scale" type="Vector3" setter="set_uv2_scale" getter="get_uv2_scale" default="Vector3( 1, 1, 1 )">
			На сколько масштабировать координаты [code]UV2[/code]. Это умножается на [code]UV2[/code] в функции вершины.
		</member>
		<member name="uv2_triplanar" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], то вместо использования [code]UV2[/code] текстуры будут использовать трипланарный поиск текстур для определения способа применения текстур. Трипланарный поиск использует ориентацию поверхности объекта для смешивания координат текстур. Он считывает данные из исходной текстуры 3 раза, по одному разу для каждой оси, а затем смешивает результаты, основываясь на том, насколько близко пиксель выровнен с каждой осью. Это часто используется для природных объектов, чтобы получить реалистичное смешение материалов. Поскольку трипланарное текстурирование требует гораздо большего количества считываний текстуры на пиксель, оно работает гораздо медленнее, чем обычное UV-текстурирование. Кроме того, поскольку текстура смешивается между тремя осями, она не подходит для получения четкой текстуры.
		</member>
		<member name="uv2_triplanar_sharpness" type="float" setter="set_uv2_triplanar_blend_sharpness" getter="get_uv2_triplanar_blend_sharpness" default="1.0">
			Меньшее число делает текстуру более мягкой, а большее - более резкой.
		</member>
		<member name="vertex_color_is_srgb" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], то цвета вершин модели обрабатываются в режиме sRGB.
		</member>
		<member name="vertex_color_use_as_albedo" type="bool" setter="set_flag" getter="get_flag" default="false">
			Если [code]true[/code], цвет вершины используется как цвет альбедо.
		</member>
	</members>
	<constants>
		<constant name="TEXTURE_ALBEDO" value="0" enum="TextureParam">
			Текстура, задающая пиксельный цвет (Per-pixel).
		</constant>
		<constant name="TEXTURE_METALLIC" value="1" enum="TextureParam">
			Текстура, задающая пиксельное значение металлика (Per-pixel).
		</constant>
		<constant name="TEXTURE_ROUGHNESS" value="2" enum="TextureParam">
			Текстура, задающая пиксельное значение шероховатости (Per-pixel).
		</constant>
		<constant name="TEXTURE_EMISSION" value="3" enum="TextureParam">
			Текстура, задающая пиксельный цвет излучения (Per-pixel).
		</constant>
		<constant name="TEXTURE_NORMAL" value="4" enum="TextureParam">
			Текстура, задающая вектор нормали на пиксель (Per-pixel).
		</constant>
		<constant name="TEXTURE_RIM" value="5" enum="TextureParam">
			Текстура, задающая пиксельное значение обода (Per-pixel).
		</constant>
		<constant name="TEXTURE_CLEARCOAT" value="6" enum="TextureParam">
			Текстура с указанием пиксельного значения прозрачного покрытия (Per-pixel).
		</constant>
		<constant name="TEXTURE_FLOWMAP" value="7" enum="TextureParam">
			Текстура, определяющая направление пиксельной карты потока, для использования с [member anisotropy] (Per-pixel).
		</constant>
		<constant name="TEXTURE_AMBIENT_OCCLUSION" value="8" enum="TextureParam">
			Текстура, определяющая пиксельное значение окклюзии окружающего мира (Per-pixel).
		</constant>
		<constant name="TEXTURE_DEPTH" value="9" enum="TextureParam">
			Текстура с указанием пиксельной глубины (Per-pixel).
		</constant>
		<constant name="TEXTURE_SUBSURFACE_SCATTERING" value="10" enum="TextureParam">
			Текстура, определяющая подповерхностное рассеяние на пиксель (Per-pixel).
		</constant>
		<constant name="TEXTURE_TRANSMISSION" value="11" enum="TextureParam">
			Текстура, определяющая цвет передачи на пиксель (Per-pixel).
		</constant>
		<constant name="TEXTURE_REFRACTION" value="12" enum="TextureParam">
			Текстура, определяющая силу преломления на пиксель (Per-pixel).
		</constant>
		<constant name="TEXTURE_DETAIL_MASK" value="13" enum="TextureParam">
			Текстура, определяющая значение смешивания маски деталей на пиксель (Per-pixel).
		</constant>
		<constant name="TEXTURE_DETAIL_ALBEDO" value="14" enum="TextureParam">
			Текстура, определяющая цвет деталей на пиксель (Per-pixel).
		</constant>
		<constant name="TEXTURE_DETAIL_NORMAL" value="15" enum="TextureParam">
			Текстура, задающая нормальную детализацию на пиксель(Per-pixel).
		</constant>
		<constant name="TEXTURE_MAX" value="16" enum="TextureParam">
			Представляет собой размер перечисления [enum TextureParam].
		</constant>
		<constant name="DETAIL_UV_1" value="0" enum="DetailUV">
			Используйте [code]UV[/code] с текстурой деталей.
		</constant>
		<constant name="DETAIL_UV_2" value="1" enum="DetailUV">
			Используйте [code]UV2[/code] с текстурой деталей.
		</constant>
		<constant name="FEATURE_TRANSPARENT" value="0" enum="Feature">
			Константа для установки [member flags_transparent].
		</constant>
		<constant name="FEATURE_EMISSION" value="1" enum="Feature">
			Константа для установки [member emission_enabled].
		</constant>
		<constant name="FEATURE_NORMAL_MAPPING" value="2" enum="Feature">
			Константа для установки [member normal_enabled].
		</constant>
		<constant name="FEATURE_RIM" value="3" enum="Feature">
			Константа для установки [member rim_enabled].
		</constant>
		<constant name="FEATURE_CLEARCOAT" value="4" enum="Feature">
			Константа для установки [member clearcoat_enabled].
		</constant>
		<constant name="FEATURE_ANISOTROPY" value="5" enum="Feature">
			Константа для установки [member anisotropy_enabled].
		</constant>
		<constant name="FEATURE_AMBIENT_OCCLUSION" value="6" enum="Feature">
			Константа для установки [member ao_enabled].
		</constant>
		<constant name="FEATURE_DEPTH_MAPPING" value="7" enum="Feature">
			Константа для установки [member depth_enabled].
		</constant>
		<constant name="FEATURE_SUBSURACE_SCATTERING" value="8" enum="Feature">
			Константа для установки [member subsurf_scatter_enabled].
		</constant>
		<constant name="FEATURE_TRANSMISSION" value="9" enum="Feature">
			Константа для настройки [member transmission_enabled].
		</constant>
		<constant name="FEATURE_REFRACTION" value="10" enum="Feature">
			Константа для установки [member refraction_enabled].
		</constant>
		<constant name="FEATURE_DETAIL" value="11" enum="Feature">
			Константа для установки [member detail_enabled].
		</constant>
		<constant name="FEATURE_MAX" value="12" enum="Feature">
			Представляет размер перечисления [enum Feature].
		</constant>
		<constant name="BLEND_MODE_MIX" value="0" enum="BlendMode">
			Режим наложения по умолчанию. Цвет объекта смешивается с фоном на основе альфа-значения объекта.
		</constant>
		<constant name="BLEND_MODE_ADD" value="1" enum="BlendMode">
			Цвет объекта добавляется к фону.
		</constant>
		<constant name="BLEND_MODE_SUB" value="2" enum="BlendMode">
			Цвет объекта вычитается из цвета фона.
		</constant>
		<constant name="BLEND_MODE_MUL" value="3" enum="BlendMode">
			Цвет объекта умножается на цвет фона.
		</constant>
		<constant name="DEPTH_DRAW_OPAQUE_ONLY" value="0" enum="DepthDrawMode">
			Режим отрисовки глубины по умолчанию. Глубина прорисовывается только для непрозрачных объектов.
		</constant>
		<constant name="DEPTH_DRAW_ALWAYS" value="1" enum="DepthDrawMode">
			Глубинная прорисовка рассчитывается как для непрозрачных, так и для прозрачных объектов.
		</constant>
		<constant name="DEPTH_DRAW_DISABLED" value="2" enum="DepthDrawMode">
			Прорисовка глубины отсутствует
		</constant>
		<constant name="DEPTH_DRAW_ALPHA_OPAQUE_PREPASS" value="3" enum="DepthDrawMode">
			Для прозрачных объектов сначала выполняется проход по непрозрачным частям, а затем прорисовывается прозрачность.
		</constant>
		<constant name="CULL_BACK" value="0" enum="CullMode">
			Режим обрезки по умолчанию. Задняя часть объекта обрезается, если она не видна.
		</constant>
		<constant name="CULL_FRONT" value="1" enum="CullMode">
			Передняя часть объекта удаляется, если она не видна.
		</constant>
		<constant name="CULL_DISABLED" value="2" enum="CullMode">
			Выбраковка не производится.
		</constant>
		<constant name="FLAG_UNSHADED" value="0" enum="Flags">
			На объекте не используется освещение. Цвет берется непосредственно из [code]ALBEDO[/code].
		</constant>
		<constant name="FLAG_USE_VERTEX_LIGHTING" value="1" enum="Flags">
			Освещение рассчитывается на вершину, а не на пиксель. Это может быть использовано для увеличения скорости работы шейдера за счет снижения качества.
		</constant>
		<constant name="FLAG_DISABLE_DEPTH_TEST" value="2" enum="Flags">
			Отключает проверку глубины, поэтому данный объект рисуется поверх всех остальных. Однако объекты, нарисованные после него в порядке рисования, могут перекрыть его.
		</constant>
		<constant name="FLAG_ALBEDO_FROM_VERTEX_COLOR" value="3" enum="Flags">
			Установите [code]ALBEDO[/code] на цвет каждой вершины, указанный в сетке.
		</constant>
		<constant name="FLAG_SRGB_VERTEX_COLOR" value="4" enum="Flags">
			Цвет вершин находится в пространстве sRGB и должен быть преобразован в линейный. Применяется только в рендере GLES3.
		</constant>
		<constant name="FLAG_USE_POINT_SIZE" value="5" enum="Flags">
			Использует размер точки для изменения размера примитивных точек. Также изменяет поиск текстуры альбедо, чтобы использовать [code]POINT_COORD[/code] вместо [code]UV[/code].
		</constant>
		<constant name="FLAG_FIXED_SIZE" value="6" enum="Flags">
			Объект масштабируется по глубине, поэтому на экране он всегда выглядит одинакового размера.
		</constant>
		<constant name="FLAG_BILLBOARD_KEEP_SCALE" value="7" enum="Flags">
			Шейдер сохранит масштаб, установленный для сетки. В противном случае масштаб будет потерян при создании билборда. Применяется только в том случае, если [member params_billboard_mode] - [constant BILLBOARD_ENABLED].
		</constant>
		<constant name="FLAG_UV1_USE_TRIPLANAR" value="8" enum="Flags">
			Используйте трипланарный поиск текстур для всех поисков текстур, которые обычно используют [code]UV[/code].
		</constant>
		<constant name="FLAG_UV2_USE_TRIPLANAR" value="9" enum="Flags">
			Используйте трипланарный поиск текстур для всех поисков текстур, которые обычно используют [code]UV2[/code].
		</constant>
		<constant name="FLAG_AO_ON_UV2" value="11" enum="Flags">
			Используйте координаты [code]UV2[/code], чтобы смотреть вверх от [member ao_texture].
		</constant>
		<constant name="FLAG_EMISSION_ON_UV2" value="12" enum="Flags">
			Используйте координаты [code]UV2[/code], чтобы смотреть вверх от [member emission_texture].
		</constant>
		<constant name="FLAG_USE_ALPHA_SCISSOR" value="13" enum="Flags">
			Использовать альфа-ножницы. Устанавливается [member params_use_alpha_scissor].
		</constant>
		<constant name="FLAG_TRIPLANAR_USE_WORLD" value="10" enum="Flags">
			Используйте мировые координаты при поиске трипланарных текстур вместо локальных.
		</constant>
		<constant name="FLAG_ALBEDO_TEXTURE_FORCE_SRGB" value="14" enum="Flags">
			Заставляет шейдер преобразовать альбедо из пространства sRGB в линейное пространство.
		</constant>
		<constant name="FLAG_DONT_RECEIVE_SHADOWS" value="15" enum="Flags">
			Отключает получение теней от других объектов.
		</constant>
		<constant name="FLAG_DISABLE_AMBIENT_LIGHT" value="17" enum="Flags">
			Отключает прием окружающего света.
		</constant>
		<constant name="FLAG_ENSURE_CORRECT_NORMALS" value="16" enum="Flags">
			Обеспечивает корректное отображение нормалей даже при неравномерном масштабировании.
		</constant>
		<constant name="FLAG_USE_SHADOW_TO_OPACITY" value="18" enum="Flags">
			Включает функцию изменения непрозрачности тени.
		</constant>
		<constant name="FLAG_ALBEDO_TEXTURE_SDF" value="19" enum="Flags">
			Включает шейдер рендеринга поля расстояния с подписью.
		</constant>
		<constant name="FLAG_MAX" value="20" enum="Flags">
			Представляет размер перечисления [enum Flags].
		</constant>
		<constant name="DIFFUSE_BURLEY" value="0" enum="DiffuseMode">
			Алгоритм диффузного рассеяния по умолчанию.
		</constant>
		<constant name="DIFFUSE_LAMBERT" value="1" enum="DiffuseMode">
			Диффузное рассеяние не учитывает шероховатости.
		</constant>
		<constant name="DIFFUSE_LAMBERT_WRAP" value="2" enum="DiffuseMode">
			Расширение Ламберта для охвата более 90 градусов при увеличении шероховатости.
		</constant>
		<constant name="DIFFUSE_OREN_NAYAR" value="3" enum="DiffuseMode">
			Попытка использовать шероховатость для эмуляции микрошлифов.
		</constant>
		<constant name="DIFFUSE_TOON" value="4" enum="DiffuseMode">
			Для освещения используется жесткий срез, а сглаживание зависит от шероховатости.
		</constant>
		<constant name="SPECULAR_SCHLICK_GGX" value="0" enum="SpecularMode">
			Спекулярный блоб по умолчанию.
		</constant>
		<constant name="SPECULAR_BLINN" value="1" enum="SpecularMode">
			Старый алгоритм спекуляции, включенный для совместимости.
		</constant>
		<constant name="SPECULAR_PHONG" value="2" enum="SpecularMode">
			Старый алгоритм спекуляции, включенный для совместимости.
		</constant>
		<constant name="SPECULAR_TOON" value="3" enum="SpecularMode">
			Toon blob, который меняет размер в зависимости от шероховатости.
		</constant>
		<constant name="SPECULAR_DISABLED" value="4" enum="SpecularMode">
			Нет спекулярного пятна.
		</constant>
		<constant name="BILLBOARD_DISABLED" value="0" enum="BillboardMode">
			Режим билборда отключен.
		</constant>
		<constant name="BILLBOARD_ENABLED" value="1" enum="BillboardMode">
			Ось Z объекта всегда будет обращена к камере.
		</constant>
		<constant name="BILLBOARD_FIXED_Y" value="2" enum="BillboardMode">
			Ось X объекта всегда будет обращена к камере.
		</constant>
		<constant name="BILLBOARD_PARTICLES" value="3" enum="BillboardMode">
			Используется для систем частиц, когда назначается узлам [Particles] и [CPUParticles]. Включает свойства [code]particles_anim_*[/code].
			Для воспроизведения анимации [member ParticlesMaterial.anim_speed] или [member CPUParticles.anim_speed] также должно быть установлено положительное значение.
		</constant>
		<constant name="TEXTURE_CHANNEL_RED" value="0" enum="TextureChannel">
			Используется для считывания данных из красного канала текстуры.
		</constant>
		<constant name="TEXTURE_CHANNEL_GREEN" value="1" enum="TextureChannel">
			Используется для считывания данных из зеленого канала текстуры.
		</constant>
		<constant name="TEXTURE_CHANNEL_BLUE" value="2" enum="TextureChannel">
			Используется для считывания данных из синего канала текстуры.
		</constant>
		<constant name="TEXTURE_CHANNEL_ALPHA" value="3" enum="TextureChannel">
			Используется для чтения из альфа-канала текстуры.
		</constant>
		<constant name="TEXTURE_CHANNEL_GRAYSCALE" value="4" enum="TextureChannel">
			В настоящее время не используется.
		</constant>
		<constant name="EMISSION_OP_ADD" value="0" enum="EmissionOperator">
			Добавляет цвет эмиссии к цвету из текстуры эмиссии.
		</constant>
		<constant name="EMISSION_OP_MULTIPLY" value="1" enum="EmissionOperator">
			Умножает цвет излучения на цвет из текстуры излучения.
		</constant>
		<constant name="DISTANCE_FADE_DISABLED" value="0" enum="DistanceFadeMode">
			Не используйте затухание расстояния.
		</constant>
		<constant name="DISTANCE_FADE_PIXEL_ALPHA" value="1" enum="DistanceFadeMode">
			Плавное затухание объекта в зависимости от расстояния каждого пикселя от камеры с использованием альфа-канала.
		</constant>
		<constant name="DISTANCE_FADE_PIXEL_DITHER" value="2" enum="DistanceFadeMode">
			Плавное затухание объекта на основе расстояния каждого пикселя от камеры с использованием метода дизеринга. При дизеринге пиксели отбрасываются по заданному шаблону для плавного затухания без включения прозрачности. На определенном оборудовании это может быть быстрее, чем [constant DISTANCE_FADE_PIXEL_ALPHA].
		</constant>
		<constant name="DISTANCE_FADE_OBJECT_DITHER" value="3" enum="DistanceFadeMode">
			Плавное затухание объекта в зависимости от его расстояния до камеры с использованием метода дизеринга. При дизеринге пиксели отбрасываются по заданному шаблону для плавного затухания без включения прозрачности. На определенном оборудовании это может быть быстрее, чем [constant DISTANCE_FADE_PIXEL_ALPHA].
		</constant>
		<constant name="ASYNC_MODE_VISIBLE" value="0" enum="AsyncMode">
			Реальный условный шейдер, необходимый для каждой ситуации, будет отправлен на фоновую компиляцию. Тем временем будет использоваться очень сложный шейдер, адаптирующийся к каждой ситуации ("ubershader"). Этот ubershader намного медленнее рендерится, но позволяет поддерживать игру, не задерживаясь на компиляции. Как только компиляция шейдера будет завершена, убершейдер будет заменен традиционным оптимизированным шейдером.
		</constant>
		<constant name="ASYNC_MODE_HIDDEN" value="1" enum="AsyncMode">
			Все, к чему применен этот материал, не будет отрисовываться, пока шейдер этого материала компилируется.
			Это полезно для оптимизации, когда визуальные эффекты не будут страдать от отсутствия некоторых несущественных элементов в течение короткого времени, пока компилируются их шейдеры.
		</constant>
	</constants>
</class>
