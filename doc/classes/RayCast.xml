<?xml version="1.0" encoding="UTF-8" ?>
<class name="RayCast" inherits="Spatial" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Запрос ближайшего объекта, пересекающего луч.
	</brief_description>
	<description>
		RayCast представляет собой линию от начала до конечной позиции, [code]cast_to[/code]. Она используется для запроса 3D-пространства, чтобы найти ближайший объект на пути луча.
		RayCast может игнорировать некоторые объекты, добавляя их в список исключений с помощью [code]add_exception[/code] или устанавливая надлежащую фильтрацию с помощью слоев и масок столкновений.
		RayCast может быть настроен на сообщение о столкновениях с [Area]s ([member collide_with_areas]) и/или [PhysicsBody]s ([member collide_with_bodies]).
		Только включенные рэйкасты смогут опрашивать пространство и сообщать о столкновениях.
		RayCast вычисляет пересечение каждый кадр физики (см. [Node]), и результат кэшируется, чтобы его можно было использовать позже, до следующего кадра. Если требуется несколько запросов между кадрами физики (или в течение одного и того же кадра), используйте [метод force_raycast_update] после настройки raycast.
	</description>
	<tutorials>
		<link title="Ray-casting">$DOCS_URL/tutorials/physics/ray-casting.html</link>
		<link title="3D Voxel Demo">https://godotengine.org/asset-library/asset/676</link>
	</tutorials>
	<methods>
		<method name="add_exception">
			<return type="void" />
			<argument index="0" name="node" type="Object" />
			<description>
				Добавляет исключение столкновения, чтобы луч не сообщал о столкновениях с указанным узлом.
			</description>
		</method>
		<method name="add_exception_rid">
			<return type="void" />
			<argument index="0" name="rid" type="RID" />
			<description>
				Добавляет исключение столкновения, чтобы луч не сообщал о столкновениях с указанным [RID].
			</description>
		</method>
		<method name="clear_exceptions">
			<return type="void" />
			<description>
				Удаляет все исключения столкновений для этого луча.
			</description>
		</method>
		<method name="force_raycast_update">
			<return type="void" />
			<description>
				Обновляет информацию о столкновениях для луча. Используйте этот метод для немедленного обновления информации о столкновениях, а не для ожидания следующего вызова [code]_physics_process[/code], например, если луч или его родитель изменили состояние.
				[b]Примечание:[/b] [code]enabled[/code] не требуется для работы этого метода.
			</description>
		</method>
		<method name="get_collider" qualifiers="const">
			<return type="Object" />
			<description>
				Возвращает первый объект, который пересекает луч, или [code]null[/code], если ни один объект не пересекает луч (т.е. [method is_colliding] возвращает [code]false[/code]).
			</description>
		</method>
		<method name="get_collider_shape" qualifiers="const">
			<return type="int" />
			<description>
				Возвращает идентификатор формы первого объекта, который пересекает луч, или [code]0[/code], если ни один объект не пересекает луч (т.е. [method is_colliding] возвращает [code]false[/code]).
			</description>
		</method>
		<method name="get_collision_mask_bit" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="bit" type="int" />
			<description>
				Возвращает [code]true[/code], если переданный битовый индекс включен.
				[b]Примечание:[/b] Битовые индексы варьируются от 0 до 19.
			</description>
		</method>
		<method name="get_collision_normal" qualifiers="const">
			<return type="Vector3" />
			<description>
				Возвращает нормаль к форме пересекающегося объекта в точке столкновения.
			</description>
		</method>
		<method name="get_collision_point" qualifiers="const">
			<return type="Vector3" />
			<description>
				Возвращает точку столкновения, в которой луч пересекается с ближайшим объектом.
				[b]Примечание:[/b] Эта точка находится в [b]глобальной[/b] системе координат.
			</description>
		</method>
		<method name="is_colliding" qualifiers="const">
			<return type="bool" />
			<description>
				Возвращает, пересекается ли какой-либо объект с вектором луча (с учетом длины вектора).
			</description>
		</method>
		<method name="remove_exception">
			<return type="void" />
			<argument index="0" name="node" type="Object" />
			<description>
				Удаляет исключение столкновения, чтобы луч сообщал о столкновениях с указанным узлом.
			</description>
		</method>
		<method name="remove_exception_rid">
			<return type="void" />
			<argument index="0" name="rid" type="RID" />
			<description>
				Удаляет исключение столкновения, чтобы луч сообщал о столкновениях с указанным [RID].
			</description>
		</method>
		<method name="set_collision_mask_bit">
			<return type="void" />
			<argument index="0" name="bit" type="int" />
			<argument index="1" name="value" type="bool" />
			<description>
				Устанавливает переданный битовый индекс в переданное [code]значение[/code].
				[b]Примечание:[/b] Битовые индексы варьируются от 0 до 19.
			</description>
		</method>
	</methods>
	<members>
		<member name="cast_to" type="Vector3" setter="set_cast_to" getter="get_cast_to" default="Vector3( 0, -1, 0 )">
			Точка назначения луча, относительно [code]позиции[/code] RayCast.
		</member>
		<member name="collide_with_areas" type="bool" setter="set_collide_with_areas" getter="is_collide_with_areas_enabled" default="false">
			Если [code]true[/code], будет сообщено о столкновении с [Area]s.
		</member>
		<member name="collide_with_bodies" type="bool" setter="set_collide_with_bodies" getter="is_collide_with_bodies_enabled" default="true">
			Если [code]true[/code], то будет сообщено о столкновении с [PhysicsBody]s.
		</member>
		<member name="collision_mask" type="int" setter="set_collision_mask" getter="get_collision_mask" default="1">
			Маска столкновений луча. Будут обнаружены только объекты хотя бы одного слоя столкновений, включенного в маску. Дополнительные сведения см. в документации [url=$DOCS_URL/tutorials/physics/physics_introduction.html#collision-layers-and-masks]Collision layers and masks[/url].
		</member>
		<member name="debug_shape_custom_color" type="Color" setter="set_debug_shape_custom_color" getter="get_debug_shape_custom_color" default="Color( 0, 0, 0, 1 )">
			Пользовательский цвет, который будет использоваться для отрисовки фигуры в редакторе и во время выполнения, если [b]Visible Collision Shapes[/b] включен в меню [b]Debug[/b]. Этот цвет будет подсвечиваться во время выполнения, если [RayCast] с чем-то сталкивается.
			Если установлено значение [code]Color(0.0, 0.0, 0.0)[/code] (по умолчанию), то используется цвет, установленный в [member ProjectSettings.debug/shapes/collision/shape_color].
		</member>
		<member name="debug_shape_thickness" type="int" setter="set_debug_shape_thickness" getter="get_debug_shape_thickness" default="2">
			Если установлено значение [code]1[/code], в качестве отладочной формы используется линия. В противном случае для представления [RayCast] будет нарисована усеченная пирамида. Требуется включить [b]Visible Collision Shapes[/b] в меню [b]Debug[/b], чтобы отладочная фигура была видна во время выполнения.
		</member>
		<member name="enabled" type="bool" setter="set_enabled" getter="is_enabled" default="false">
			Если [code]true[/code], о столкновениях будет сообщаться.
		</member>
		<member name="exclude_parent" type="bool" setter="set_exclude_parent_body" getter="get_exclude_parent_body" default="true">
			Если [code]true[/code], столкновения будут игнорироваться для непосредственного родителя этого RayCast'а/Луча.
		</member>
	</members>
	<constants>
	</constants>
</class>
