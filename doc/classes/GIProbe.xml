<?xml version="1.0" encoding="UTF-8" ?>
<class name="GIProbe" inherits="VisualInstance" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Зонд глобального освещения (GI) в режиме реального времени.
	</brief_description>
	<description>
		[GIProbe] используются для создания высококачественного непрямого света в сценах в реальном времени. Они предварительно просчитывают эффект объектов, излучающих свет, и эффект статичной геометрии, чтобы смоделировать поведение сложного света в реальном времени. Перед использованием [GIProbe]ы необходимо запечь, однако после запекания динамические объекты будут получать от них свет. Кроме того, свет может быть полностью динамическим или запеченным.
		Наличие [GIProbe]ов в сцене может быть дорогостоящим, качество зонда может быть снижено в обмен на более высокую производительность в [ProjectSettings] с помощью [member ProjectSettings.rendering/quality/voxel_cone_tracing/high_quality].
		[b]Процедурная генерация:[/b] [GIProbe] может быть запечен в экспортируемом проекте, что делает его пригодным для процедурно генерируемых или пользовательских уровней, если вся геометрия сгенерирована заранее.
		[b]Производительность:[/b] [GIProbe] относительно требователен к GPU и не подходит для низкопроизводительного оборудования, такого как интегрированная графика (рассмотрите вместо него [BakedLightmap]). Чтобы обеспечить запасной вариант для низкопроизводительного оборудования, подумайте о добавлении опции отключения [GIProbe] в меню опций вашего проекта. Узел [GIProbe] можно отключить, скрыв его.
		[b]Примечание:[/b] У мешей должны быть достаточно толстые стенки, чтобы избежать утечки света (избегайте односторонних стенок). Для внутренних уровней заключите геометрию уровня в достаточно большую коробку и соедините петли, чтобы закрыть сетку. Чтобы еще больше предотвратить утечки света, вы также можете стратегически разместить временные узлы [MeshInstance] с включенным [member GeometryInstance.use_in_baked_light]. Эти временные узлы можно скрыть после запекания узла [GIProbe].
		[b]Примечание:[/b] Из-за ограничения рендерера эмиссионные [ShaderMaterial] не могут излучать свет при использовании в [GIProbe]. Только эмиссионные [SpatialMaterial]ы могут излучать свет в [GIProbe].
	</description>
	<tutorials>
		<link title="GI probes">$DOCS_URL/tutorials/3d/gi_probes.html</link>
		<link title="Third Person Shooter Demo">https://godotengine.org/asset-library/asset/678</link>
	</tutorials>
	<methods>
		<method name="bake">
			<return type="void" />
			<argument index="0" name="from_node" type="Node" default="null" />
			<argument index="1" name="create_visual_debug" type="bool" default="false" />
			<description>
				Запекает эффект из всех [GeometryInstance]ов, помеченных [member GeometryInstance.use_in_baked_light] и [Light]ов, помеченных либо [constant Light.BAKE_INDIRECT], либо [constant Light.BAKE_ALL]. Если [code]create_visual_debug[/code] имеет значение [code]true[/code], то после запекания света будет сгенерирован [MultiMesh], содержащий куб, представляющий каждую твердую ячейку, причем каждый куб окрашен в цвет альбедо ячейки. Это можно использовать для визуализации данных [GIProbe] и отладки любых проблем, которые могут возникнуть.
				[b]Примечание:[/b] [метод bake] работает как в редакторе, так и в экспортированных проектах. Это делает его подходящим для процедурно генерируемых или пользовательских уровней. Запекание [GIProbe] обычно занимает от 5 до 20 секунд в большинстве сцен. Уменьшение [member subdiv] может ускорить запекание.
				[b]Примечание:[/b] [GeometryInstance]ы и [Light]ы должны быть полностью готовы до вызова [метода bake]. Если вы создаете их процедурно и некоторые сетки или светильники отсутствуют в запекаемом [GIProbe], используйте [code]call_deferred("bake")[/code] вместо прямого вызова [метода bake].
			</description>
		</method>
		<method name="debug_bake">
			<return type="void" />
			<description>
				Вызывает [метод bake] с включенным [code]create_visual_debug[/code].
			</description>
		</method>
	</methods>
	<members>
		<member name="bias" type="float" setter="set_bias" getter="get_bias" default="1.5">
			Смещение поиска вклада света из [GIProbe]. Это может быть использовано для предотвращения самозатенения, но при больших значениях может вызвать утечку света. С этим параметром и [member normal_bias] следует поиграть, чтобы минимизировать самозатенение и утечку света.
			[b]Примечание:[/b] [code]bias[/code] обычно должен быть больше 1.0, так как это размер вокселей.
		</member>
		<member name="compress" type="bool" setter="set_compress" getter="is_compressed" default="false">
			[i]Утратило силу.[/i] Это свойство утратило силу в связи с известными ошибками и больше не имеет никакого эффекта при включении.
		</member>
		<member name="data" type="GIProbeData" setter="set_probe_data" getter="get_probe_data">
			Ресурс [GIProbeData], содержащий данные для этого [GIProbe].
		</member>
		<member name="dynamic_range" type="int" setter="set_dynamic_range" getter="get_dynamic_range" default="4">
			Максимальная яркость, которую распознает [GIProbe]. Яркость будет масштабироваться в пределах этого диапазона.
		</member>
		<member name="energy" type="float" setter="set_energy" getter="get_energy" default="1.0">
			Множитель энергии. Делает освещение от [GIProbe] ярче.
		</member>
		<member name="extents" type="Vector3" setter="set_extents" getter="get_extents" default="Vector3( 10, 10, 10 )">
			Размер области, охватываемой [GIProbe]. Если увеличить экстент без увеличения подразделений с помощью [member subdiv], размер каждой ячейки увеличится, что приведет к снижению детализации освещения.
		</member>
		<member name="interior" type="bool" setter="set_interior" getter="is_interior" default="false">
			Если [code]true[/code], то при расчете освещения игнорируется вклад неба.
		</member>
		<member name="normal_bias" type="float" setter="set_normal_bias" getter="get_normal_bias" default="0.0">
			Смещение поиска в [GIProbe] на основе направления нормали объекта. Может использоваться для уменьшения некоторых артефактов самозатенения.
		</member>
		<member name="propagation" type="float" setter="set_propagation" getter="get_propagation" default="0.7">
			Количество света, распространяющегося через внутреннюю часть зонда. Более высокое значение позволяет свету распространяться дальше.
		</member>
		<member name="subdiv" type="int" setter="set_subdiv" getter="get_subdiv" enum="GIProbe.Subdiv" default="1">
			Количество делений сетки, на которой работает [GIProbe]. Большее число приводит к более тонкой детализации и, следовательно, к более высокому визуальному качеству, в то время как меньшее число приводит к более высокой производительности.
		</member>
	</members>
	<constants>
		<constant name="SUBDIV_64" value="0" enum="Subdiv">
			Используйте 64 подразделения. Это самая низкая настройка качества, но самая быстрая. Используйте его, если есть возможность, но особенно используйте его на низкокачественном оборудовании.
		</constant>
		<constant name="SUBDIV_128" value="1" enum="Subdiv">
			Используйте 128 делений. Это настройка качества по умолчанию.
		</constant>
		<constant name="SUBDIV_256" value="2" enum="Subdiv">
			Используйте 256 подразделов.
		</constant>
		<constant name="SUBDIV_512" value="3" enum="Subdiv">
			Используйте 512 подразделений. Это самая высокая настройка качества, но самая медленная. На низкокачественном оборудовании это может привести к замиранию графического процессора.
		</constant>
		<constant name="SUBDIV_MAX" value="4" enum="Subdiv">
			Представляет размер перечисления [enum Subdiv].
		</constant>
	</constants>
</class>
