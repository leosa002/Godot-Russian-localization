<?xml version="1.0" encoding="UTF-8" ?>
<class name="EditorInterface" inherits="Node" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Интерфейс редактора Godot.
	</brief_description>
	<description>
		EditorInterface предоставляет вам контроль над окном редактора Godot. Он позволяет настраивать окно, сохранять и (повторно) загружать сцены, рендерить предварительные просмотры сетки, осматривать и редактировать ресурсы и объекты, а также предоставляет доступ к [EditorSettings], [EditorFileSystem], [EditorResourcePreview], [ScriptEditor], области просмотра редактора и информации о сценах.
		[b]Примечание:[/b] Этот класс не следует инстанцировать напрямую. Вместо этого обратитесь к синглтону, используя [метод EditorPlugin.get_editor_interface].
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="edit_node">
			<return type="void" />
			<argument index="0" name="node" type="Node" />
			<description>
				Редактирует заданный узел [Node]. Узел также будет выбран, если он находится в дереве сцены.
			</description>
		</method>
		<method name="edit_resource">
			<return type="void" />
			<argument index="0" name="resource" type="Resource" />
			<description>
				Редактирует заданный [Resource]. Если ресурс представляет собой [Script], вы также можете отредактировать его с помощью [method edit_script], чтобы указать позицию строки и столбца.
			</description>
		</method>
		<method name="edit_script">
			<return type="void" />
			<argument index="0" name="script" type="Script" />
			<argument index="1" name="line" type="int" default="-1" />
			<argument index="2" name="column" type="int" default="0" />
			<argument index="3" name="grab_focus" type="bool" default="true" />
			<description>
				Редактирует заданный [Script]. Также можно указать строку и столбец, в котором будет открыт скрипт. Сценарий будет открыт в редакторе, настроенном пользователем для языка сценария, который может быть внешним редактором.
			</description>
		</method>
		<method name="get_base_control">
			<return type="Control" />
			<description>
				Возвращает основной контейнер окна редактора Godot. Например, вы можете использовать его для получения размера контейнера и размещения элементов управления соответствующим образом.
				[b]Предупреждение:[/b] Удаление и освобождение этого узла сделает редактор бесполезным и может привести к аварийному завершению работы.
			</description>
		</method>
		<method name="get_current_path" qualifiers="const">
			<return type="String" />
			<description>
				Возвращает текущий путь, просматриваемый в [FileSystemDock].
			</description>
		</method>
		<method name="get_edited_scene_root">
			<return type="Node" />
			<description>
				Возвращает корень(root) [Node] редактируемой (текущей) сцены.
			</description>
		</method>
		<method name="get_editor_scale" qualifiers="const">
			<return type="float" />
			<description>
				Возвращает фактический масштаб пользовательского интерфейса редактора ([code]1.0[/code] - это 100% масштаб). Это может быть использовано для настройки положения и размеров пользовательского интерфейса, добавляемого плагинами.
				[b]Примечание:[/b] Это значение задается через настройки редактора [code]interface/editor/display_scale[/code] и [code]interface/editor/custom_display_scale[/code]. Для правильного применения изменений необходимо перезапустить редактор.
			</description>
		</method>
		<method name="get_editor_settings">
			<return type="EditorSettings" />
			<description>
				Возвращает экземпляр [EditorSettings] редактора.
			</description>
		</method>
		<method name="get_editor_viewport">
			<return type="Control" />
			<description>
				Возвращает главный элемент управления редактора. Используйте его в качестве родительского для основных экранов.
				[b]Примечание:[/b] Возвращается элемент управления главного редактора, содержащий весь редактор, а не конкретно 2D или 3D видовые экраны.
				[b]Предупреждение:[/b] Удаление и освобождение этого узла сделает часть редактора бесполезной и может привести к сбою.
			</description>
		</method>
		<method name="get_file_system_dock">
			<return type="FileSystemDock" />
			<description>
				Возвращает экземпляр [FileSystemDock] редактора.
				[b]Предупреждение:[/b] Удаление и освобождение этого узла сделает часть редактора бесполезной и может привести к аварийному завершению работы.
			</description>
		</method>
		<method name="get_inspector" qualifiers="const">
			<return type="EditorInspector" />
			<description>
				Возвращает экземпляр [EditorInspector] редактора.
				[b]Предупреждение:[/b] Удаление и освобождение этого узла сделает часть редактора бесполезной и может привести к сбою.
			</description>
		</method>
		<method name="get_open_scenes" qualifiers="const">
			<return type="Array" />
			<description>
				Возвращает [Array] с путями к файлам открытых в данный момент сцен.
			</description>
		</method>
		<method name="get_playing_scene" qualifiers="const">
			<return type="String" />
			<description>
				Возвращает название воспроизводимой сцены. Если в данный момент не проигрывается ни одна сцена, возвращается пустая строка.
			</description>
		</method>
		<method name="get_resource_filesystem">
			<return type="EditorFileSystem" />
			<description>
				Возвращает экземпляр [EditorFileSystem] редактора.
			</description>
		</method>
		<method name="get_resource_previewer">
			<return type="EditorResourcePreview" />
			<description>
				Возвращает экземпляр [EditorResourcePreview] редактора.
			</description>
		</method>
		<method name="get_script_editor">
			<return type="ScriptEditor" />
			<description>
				Возвращает экземпляр [ScriptEditor] редактора.
				[b]Предупреждение:[/b] Удаление и освобождение этого узла сделает часть редактора бесполезной и может привести к сбою.
			</description>
		</method>
		<method name="get_selected_path" qualifiers="const">
			<return type="String" />
			<description>
				Возвращает путь к директории, выбранной в данный момент в [FileSystemDock]. Если выбран файл, то вместо него будет возвращен его базовый каталог с помощью [метода String.get_base_dir].
			</description>
		</method>
		<method name="get_selection">
			<return type="EditorSelection" />
			<description>
				Возвращает экземпляр [EditorSelection] редактора.
			</description>
		</method>
		<method name="inspect_object">
			<return type="void" />
			<argument index="0" name="object" type="Object" />
			<argument index="1" name="for_property" type="String" default="&quot;&quot;" />
			<argument index="2" name="inspector_only" type="bool" default="false" />
			<description>
				Показывает заданное свойство для заданного [code]объекта[/code] в доке Inspector редактора. Если [code]inspector_only[/code] имеет значение [code]true[/code], плагины не будут пытаться редактировать [code]объект[/code].
			</description>
		</method>
		<method name="is_playing_scene" qualifiers="const">
			<return type="bool" />
			<description>
				Возвращает [code]true[/code], если сцена проигрывается в данный момент, [code]false[/code] - в противном случае. Приостановленные сцены считаются проигрываемыми.
			</description>
		</method>
		<method name="is_plugin_enabled" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="plugin" type="String" />
			<description>
				Возвращает [code]true[/code], если указанный [code]плагин[/code] включен. Имя плагина совпадает с именем его каталога.
			</description>
		</method>
		<method name="make_mesh_previews">
			<return type="Array" />
			<argument index="0" name="meshes" type="Array" />
			<argument index="1" name="preview_size" type="int" />
			<description>
				Возвращает предварительный просмотр сетки, отрисованной в заданном размере, в виде [Array] из [Texture].
			</description>
		</method>
		<method name="open_scene_from_path">
			<return type="void" />
			<argument index="0" name="scene_filepath" type="String" />
			<description>
				Открывает сцену по заданному пути.
			</description>
		</method>
		<method name="play_current_scene">
			<return type="void" />
			<description>
				Воспроизводит активную в данный момент сцену.
			</description>
		</method>
		<method name="play_custom_scene">
			<return type="void" />
			<argument index="0" name="scene_filepath" type="String" />
			<description>
				Воспроизводит сцену, указанную по пути к файлу.
			</description>
		</method>
		<method name="play_main_scene">
			<return type="void" />
			<description>
				Воспроизводит главную сцену.
			</description>
		</method>
		<method name="reload_scene_from_path">
			<return type="void" />
			<argument index="0" name="scene_filepath" type="String" />
			<description>
				Перезагружает сцену по указанному пути.
			</description>
		</method>
		<method name="save_scene">
			<return type="int" enum="Error" />
			<description>
				Сохраняет сцену. Возвращает либо [code]OK[/code], либо [code]ERR_CANT_CREATE[/code] (см. константы [@GlobalScope]).
			</description>
		</method>
		<method name="save_scene_as">
			<return type="void" />
			<argument index="0" name="path" type="String" />
			<argument index="1" name="with_preview" type="bool" default="true" />
			<description>
				Сохраняет сцену в файл по адресу [code]path[/code].
			</description>
		</method>
		<method name="select_file">
			<return type="void" />
			<argument index="0" name="file" type="String" />
			<description>
				Выбирает файл, путь к которому указан в [code]file[/code], в доке FileSystem.
			</description>
		</method>
		<method name="set_main_screen_editor">
			<return type="void" />
			<argument index="0" name="name" type="String" />
			<description>
				Устанавливает текущий главный экран редактора на тот, который указан в [code]name[/code]. [code]name[/code] должно точно соответствовать тексту данной вкладки ([code]2D[/code], [code]3D[/code], [code]Script[/code], [code]AssetLib[/code]).
			</description>
		</method>
		<method name="set_plugin_enabled">
			<return type="void" />
			<argument index="0" name="plugin" type="String" />
			<argument index="1" name="enabled" type="bool" />
			<description>
				Устанавливает статус включения плагина. Имя плагина совпадает с именем его каталога.
			</description>
		</method>
		<method name="stop_playing_scene">
			<return type="void" />
			<description>
				Остановка воспроизводимой сцены.
			</description>
		</method>
	</methods>
	<members>
		<member name="distraction_free_mode" type="bool" setter="set_distraction_free_mode" getter="is_distraction_free_mode_enabled">
			Если [code]true[/code], включается режим "Не отвлекает", который скрывает боковые доки, чтобы увеличить пространство, доступное для основного вида.
		</member>
	</members>
	<constants>
	</constants>
</class>
