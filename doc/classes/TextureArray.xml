<?xml version="1.0" encoding="UTF-8" ?>
<class name="TextureArray" inherits="TextureLayered" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Массив текстур, хранящихся в одном примитиве.
	</brief_description>
	<description>
		Массивы [TextureArray] хранят массив [Image]ов в одном примитиве [Texture]. Каждый слой массива текстур имеет свою собственную цепочку mipmap. Это делает его хорошей альтернативой текстурным атласам. См. также [Texture3D].
		Для отображения [TextureArray]ов необходимо использовать шейдеры. Импортировав файл как [TextureArray] и задав соответствующие горизонтальные и вертикальные срезы, отобразите его, задав в качестве униформы шейдер, например (2D):
		[codeblock]
		shader_type canvas_item;

		uniform sampler2DArray tex;
		uniform int index;

		void fragment() {
		    COLOR = texture(tex, vec3(UV.x, UV.y, float(index)));
		}
		[/codeblock]
		Установите целочисленную форму "index", чтобы показать определенную часть текстуры, как определено горизонтальными и вертикальными срезами в импортере.
		[b]Примечание:[/b] При выборке текстуры альбедо из массива текстур в 3D следует использовать подсказку линейного преобразования sRGB -&gt; ([code]hint_albedo[/code]), чтобы цвета не выглядели размытыми:
		[codeblock]
		shader_type spatial;

		uniform sampler2DArray tex : hint_albedo;
		uniform int index;

		void fragment() {
		    ALBEDO = texture(tex, vec3(UV.x, UV.y, float(index)));
		}
		[/codeblock]
		[b]Примечание:[/b] [TextureArray]ы могут быть сэмплированы в шейдерах только в бэкенде GLES3. В GLES2 доступ к их данным можно получить с помощью скриптов, но нет возможности рендерить их с аппаратным ускорением.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="create">
			<return type="void" />
			<argument index="0" name="width" type="int" />
			<argument index="1" name="height" type="int" />
			<argument index="2" name="depth" type="int" />
			<argument index="3" name="format" type="int" enum="Image.Format" />
			<argument index="4" name="flags" type="int" default="7" />
			<description>
				Создает массив текстур с указанными [code]шириной[/code], [code]высотой[/code] и [code]глубиной[/code]. Параметры [code]формата[/code] см. в [enum Image.Format]. Опции [code]flags[/code] см. в перечислителе [enum TextureLayered.Flags].
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
