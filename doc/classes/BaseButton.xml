<?xml version="1.0" encoding="UTF-8" ?>
<class name="BaseButton" inherits="Control" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Базовый класс для различных видов кнопок.
	</brief_description>
	<description>
		BaseButton - это абстрактный базовый класс для кнопок, поэтому его не следует использовать напрямую (он ничего не отображает). Другие типы кнопок наследуются от него.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_pressed" qualifiers="virtual">
			<return type="void" />
			<description>
				Вызывается, когда кнопка нажата. Если вам необходимо знать состояние нажатой кнопки (и активен [member toggle_mode]), используйте вместо этого [method _toggled].
			</description>
		</method>
		<method name="_toggled" qualifiers="virtual">
			<return type="void" />
			<argument index="0" name="button_pressed" type="bool" />
			<description>
				Вызывается при переключении кнопки (только если активен [member toggle_mode]).
			</description>
		</method>
		<method name="get_draw_mode" qualifiers="const">
			<return type="int" enum="BaseButton.DrawMode" />
			<description>
				Возвращает визуальное состояние, использованное для рисования кнопки. Это полезно в основном при реализации собственного кода рисования путем переопределения _draw() или подключения к сигналу "draw". Визуальное состояние кнопки определяется перечислением [enum DrawMode].
			</description>
		</method>
		<method name="is_hovered" qualifiers="const">
			<return type="bool" />
			<description>
				Возвращает [code]true[/code], если мышь вошла в кнопку и еще не покинула ее.
			</description>
		</method>
		<method name="set_pressed_no_signal">
			<return type="void" />
			<argument index="0" name="pressed" type="bool" />
			<description>
				Изменяет состояние кнопки [member pressed], не выдавая при этом [signal toggled]. Используется, когда нужно просто изменить состояние кнопки без отправки события нажатия (например, при инициализации сцены). Работает только в том случае, если [member toggle_mode] имеет значение [code]true[/code].
				[b]Примечание:[/b] Этот метод не разблокирует другие кнопки в своей группе [member group].
			</description>
		</method>
	</methods>
	<members>
		<member name="action_mode" type="int" setter="set_action_mode" getter="get_action_mode" enum="BaseButton.ActionMode" default="1">
			Определяет, когда кнопка считается нажатой, одна из констант [enum ActionMode].
		</member>
		<member name="button_mask" type="int" setter="set_button_mask" getter="get_button_mask" default="1">
			Двоичная маска, позволяющая выбрать, на какие кнопки мыши будет реагировать данная кнопка.
			Чтобы разрешить щелчок левой и правой кнопкой мыши, используйте [code]BUTTON_MASK_LEFT | BUTTON_MASK_RIGHT[/code].
		</member>
		<member name="disabled" type="bool" setter="set_disabled" getter="is_disabled" default="false">
			Если [code]true[/code], то кнопка находится в отключенном состоянии и не может быть нажата или переключена.
		</member>
		<member name="enabled_focus_mode" type="int" setter="set_enabled_focus_mode" getter="get_enabled_focus_mode" enum="Control.FocusMode" default="2">
			[i]Утратившее актуальность.[/i] Это свойство утратило актуальность из-за избыточности и будет удалено в Godot 4.0. Это свойство больше не имеет никакого эффекта при установке. Вместо него используйте [member Control.focus_mode].
		</member>
		<member name="focus_mode" type="int" setter="set_focus_mode" getter="get_focus_mode" overrides="Control" enum="Control.FocusMode" default="2" />
		<member name="group" type="ButtonGroup" setter="set_button_group" getter="get_button_group">
			[ButtonGroup], связанный с кнопкой.
		</member>
		<member name="keep_pressed_outside" type="bool" setter="set_keep_pressed_outside" getter="is_keep_pressed_outside" default="false">
			Если [code]true[/code], то кнопка остается нажатой при перемещении курсора за пределы кнопки во время ее нажатия.
			[b]Примечание:[/b] Это свойство влияет только на внешний вид кнопки. Сигналы будут подаваться в один и тот же момент времени независимо от значения этого свойства.
		</member>
		<member name="pressed" type="bool" setter="set_pressed" getter="is_pressed" default="false">
			Если [code]true[/code], то состояние кнопки - нажата. Означает, что кнопка нажата или переключена (если активен [member toggle_mode]). Работает только в том случае, если [member toggle_mode] имеет значение [code]true[/code].
			[b]Примечание:[/b] Установка [member pressed] приведет к тому, что будет выдан [signal toggled]. Если вы хотите изменить состояние нажатия без выдачи этого сигнала, используйте [method set_pressed_no_signal].
		</member>
		<member name="shortcut" type="ShortCut" setter="set_shortcut" getter="get_shortcut">
			[ShortCut], связанный с кнопкой.
		</member>
		<member name="shortcut_in_tooltip" type="bool" setter="set_shortcut_in_tooltip" getter="is_shortcut_in_tooltip_enabled" default="true">
			Если [code]true[/code], то кнопка будет добавлять информацию о своем ярлыке во всплывающую подсказку.
		</member>
		<member name="toggle_mode" type="bool" setter="set_toggle_mode" getter="is_toggle_mode" default="false">
			Если [code]true[/code], то кнопка находится в режиме переключения. При каждом нажатии на область кнопки она переключается из состояния "нажато" в состояние "не нажато".
		</member>
	</members>
	<signals>
		<signal name="button_down">
			<description>
				Выдается, когда кнопка начинает удерживаться нажатой.
			</description>
		</signal>
		<signal name="button_up">
			<description>
				Выдается, когда кнопка перестает удерживаться в нажатом состоянии.
			</description>
		</signal>
		<signal name="pressed">
			<description>
				Выдается при переключении или нажатии кнопки. Это происходит по [signal button_down], если [member action_mode] равен [constant ACTION_MODE_BUTTON_PRESS], и по [signal button_up] в противном случае.
				Если вам необходимо знать состояние нажатой кнопки (и активен [member toggle_mode]), используйте вместо этого [signal toggled].
			</description>
		</signal>
		<signal name="toggled">
			<argument index="0" name="button_pressed" type="bool" />
			<description>
				Выдается, когда кнопка только что была переключена между нажатым и обычным состояниями (только если активен [member toggle_mode]). Новое состояние содержится в аргументе [code]button_pressed[/code].
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="DRAW_NORMAL" value="0" enum="DrawMode">
			Нормальное состояние (т.е. не нажато, не наведено, не переключено и не включено) кнопок.
		</constant>
		<constant name="DRAW_PRESSED" value="1" enum="DrawMode">
			Состояние нажатых кнопок.
		</constant>
		<constant name="DRAW_HOVER" value="2" enum="DrawMode">
			Состояние кнопок при наведении.
		</constant>
		<constant name="DRAW_DISABLED" value="3" enum="DrawMode">
			Состояние кнопок отключено.
		</constant>
		<constant name="DRAW_HOVER_PRESSED" value="4" enum="DrawMode">
			Состояние кнопок - как наведенных, так и нажатых.
		</constant>
		<constant name="ACTION_MODE_BUTTON_PRESS" value="0" enum="ActionMode">
			Для того чтобы считать кнопку нажатой, достаточно одного нажатия.
		</constant>
		<constant name="ACTION_MODE_BUTTON_RELEASE" value="1" enum="ActionMode">
			Требуется пресса и последующий релиз, прежде чем считать кнопку нажатой.
		</constant>
	</constants>
</class>
