<?xml version="1.0" encoding="UTF-8" ?>
<class name="Label3D" inherits="GeometryInstance" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Отображает обычный текст в 3D мире.
	</brief_description>
	<description>
		Label3D отображает обычный текст в 3D мире. Он позволяет контролировать горизонтальное и вертикальное выравнивание.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="generate_triangle_mesh" qualifiers="const">
			<return type="TriangleMesh" />
			<description>
				Возвращает [TriangleMesh] с вершинами метки, следуя ее текущей конфигурации (например, ее [member pixel_size]).
			</description>
		</method>
		<method name="get_draw_flag" qualifiers="const">
			<return type="bool" />
			<argument index="0" name="flag" type="int" enum="Label3D.DrawFlags" />
			<description>
				Возвращает значение указанного флага.
			</description>
		</method>
		<method name="set_draw_flag">
			<return type="void" />
			<argument index="0" name="flag" type="int" enum="Label3D.DrawFlags" />
			<argument index="1" name="enabled" type="bool" />
			<description>
				Если [code]true[/code], то указанный флаг будет включен. Список флагов см. в [enum Label3D.DrawFlags].
			</description>
		</method>
	</methods>
	<members>
		<member name="alpha_cut" type="int" setter="set_alpha_cut_mode" getter="get_alpha_cut_mode" enum="Label3D.AlphaCutMode" default="0">
			Режим альфа-обрезки, который будет использоваться для спрайта. Возможные значения см. в [enum AlphaCutMode].
		</member>
		<member name="alpha_scissor_threshold" type="float" setter="set_alpha_scissor_threshold" getter="get_alpha_scissor_threshold" default="0.5">
			Порог, при котором альфа-ножницы будут отбрасывать значения.
		</member>
		<member name="autowrap" type="bool" setter="set_autowrap" getter="get_autowrap" default="false">
			Если [code]true[/code], то текст заворачивается на [member width].
		</member>
		<member name="billboard" type="int" setter="set_billboard_mode" getter="get_billboard_mode" enum="SpatialMaterial.BillboardMode" default="0">
			Режим билборда, который будет использоваться для этикетки. Возможные значения см. в [enum SpatialMaterial.BillboardMode].
		</member>
		<member name="double_sided" type="bool" setter="set_draw_flag" getter="get_draw_flag" default="true">
			Если [code]true[/code], то текст виден и со спины, если [code]false[/code], то он невидим при взгляде на него сзади.
		</member>
		<member name="fixed_size" type="bool" setter="set_draw_flag" getter="get_draw_flag" default="false">
			Если [code]true[/code], этикетка будет отображаться одинакового размера независимо от расстояния.
		</member>
		<member name="font" type="Font" setter="set_font" getter="get_font">
			[Font], используемый для текста [Label3D].
		</member>
		<member name="horizontal_alignment" type="int" setter="set_horizontal_alignment" getter="get_horizontal_alignment" enum="Label3D.Align" default="1">
			Управляет выравниванием текста по горизонтали. Поддерживает выравнивание по левому краю, по центру, по правому краю. Установите значение одной из констант [enum Align].
		</member>
		<member name="line_spacing" type="float" setter="set_line_spacing" getter="get_line_spacing" default="0.0">
			Вертикальное пространство между строками в многострочных [Label3D].
		</member>
		<member name="modulate" type="Color" setter="set_modulate" getter="get_modulate" default="Color( 1, 1, 1, 1 )">
			Текст [Color] надписи [Label3D].
		</member>
		<member name="no_depth_test" type="bool" setter="set_draw_flag" getter="get_draw_flag" default="false">
			Если [code]true[/code], тестирование глубины отключено, и объект будет отрисовываться в порядке рендеринга.
		</member>
		<member name="offset" type="Vector2" setter="set_offset" getter="get_offset" default="Vector2( 0, 0 )">
			Смещение отрисовки текста (в пикселях).
		</member>
		<member name="outline_modulate" type="Color" setter="set_outline_modulate" getter="get_outline_modulate" default="Color( 0, 0, 0, 1 )">
			Оттенок контура [Font].
		</member>
		<member name="outline_render_priority" type="int" setter="set_outline_render_priority" getter="get_outline_render_priority" default="-1">
			Устанавливает приоритет рендеринга для текстового контура. Объекты с более высоким приоритетом будут отсортированы перед объектами с более низким приоритетом.
			[b]Примечание:[/b] Это применимо только в том случае, если для параметра [member alpha_cut] установлено значение [constant ALPHA_CUT_DISABLED] (значение по умолчанию).
			[b]Примечание:[/b] Это относится только к сортировке прозрачных объектов. Это не влияет на то, как прозрачные объекты сортируются относительно непрозрачных. Это происходит потому, что непрозрачные объекты не сортируются, в то время как прозрачные объекты сортируются сзади наперед (с учетом приоритета).
		</member>
		<member name="pixel_size" type="float" setter="set_pixel_size" getter="get_pixel_size" default="0.01">
			Размер ширины одного пикселя на этикетке для масштабирования ее в 3D.
		</member>
		<member name="render_priority" type="int" setter="set_render_priority" getter="get_render_priority" default="0">
			Устанавливает приоритет рендеринга для текста. Объекты с более высоким приоритетом будут отсортированы перед объектами с более низким приоритетом.
			[b]Примечание:[/b] Это применимо только в том случае, если для параметра [member alpha_cut] установлено значение [constant ALPHA_CUT_DISABLED] (значение по умолчанию).
			[b]Примечание:[/b] Это относится только к сортировке прозрачных объектов. Это не влияет на то, как прозрачные объекты сортируются относительно непрозрачных. Это происходит потому, что непрозрачные объекты не сортируются, в то время как прозрачные объекты сортируются сзади наперед (с учетом приоритета).
		</member>
		<member name="shaded" type="bool" setter="set_draw_flag" getter="get_draw_flag" default="false">
			Если [code]true[/code], то [Light] в [Environment] влияет на метку.
		</member>
		<member name="text" type="String" setter="set_text" getter="get_text" default="&quot;&quot;">
			Текст, который будет отображаться на экране.
		</member>
		<member name="uppercase" type="bool" setter="set_uppercase" getter="is_uppercase" default="false">
			Если [code]true[/code], весь текст отображается в формате UPPERCASE.
		</member>
		<member name="vertical_alignment" type="int" setter="set_vertical_alignment" getter="get_vertical_alignment" enum="Label3D.VAlign" default="1">
			Управляет вертикальным выравниванием текста. Поддерживаются верхнее, центральное, нижнее. Установите значение одной из констант [enum VAlign].
		</member>
		<member name="width" type="float" setter="set_width" getter="get_width" default="500.0">
			Ширина текста (в пикселях), используемая для автообводки и выравнивания заливки.
		</member>
	</members>
	<constants>
		<constant name="FLAG_SHADED" value="0" enum="DrawFlags">
			Если этот параметр установлен, освещение в окружающей среде влияет на этикетку.
		</constant>
		<constant name="FLAG_DOUBLE_SIDED" value="1" enum="DrawFlags">
			Если установлено, текст можно увидеть и со спины. Если нет, текст будет невидим при взгляде сзади.
		</constant>
		<constant name="FLAG_DISABLE_DEPTH_TEST" value="2" enum="DrawFlags">
			Отключает проверку глубины, поэтому данный объект рисуется поверх всех остальных. Однако объекты, нарисованные после него в порядке рисования, могут перекрыть его.
		</constant>
		<constant name="FLAG_FIXED_SIZE" value="3" enum="DrawFlags">
			Ярлык масштабируется по глубине, поэтому на экране он всегда будет одинакового размера.
		</constant>
		<constant name="FLAG_MAX" value="4" enum="DrawFlags">
			Представляет размер перечисления [enum DrawFlags].
		</constant>
		<constant name="ALPHA_CUT_DISABLED" value="0" enum="AlphaCutMode">
			Этот режим выполняет стандартное альфа-смешивание. Он может отображать полупрозрачные области, но при наложении нескольких прозрачных материалов могут возникнуть проблемы с сортировкой прозрачности.
		</constant>
		<constant name="ALPHA_CUT_DISCARD" value="1" enum="AlphaCutMode">
			В этом режиме можно использовать только полностью прозрачные или полностью непрозрачные пиксели. Этот режим также известен как [i]альфа-тестирование[/i] или [i]1-битная прозрачность[/i].
			[b]Примечание:[/b] В этом режиме могут возникать проблемы со сглаженными шрифтами и контурами, попробуйте настроить [member alpha_scissor_threshold] или использовать шрифт SDF.
			[b]Примечание:[/b] При использовании текста с перекрывающимися глифами (например, скорописью) в этом режиме могут возникнуть проблемы с сортировкой прозрачности между основным текстом и контуром.
		</constant>
		<constant name="ALPHA_CUT_OPAQUE_PREPASS" value="2" enum="AlphaCutMode">
			Этот режим рисует полностью непрозрачные пиксели в препассе глубины. Это медленнее, чем [constant ALPHA_CUT_DISABLED] или [constant ALPHA_CUT_DISCARD], но позволяет отображать полупрозрачные области и гладкие края, используя при этом правильную сортировку.
			[b]Примечание:[/b] При использовании текста с перекрывающимися глифами (например, скорописью) в этом режиме могут возникнуть проблемы с сортировкой прозрачности между основным текстом и контуром.
		</constant>
		<constant name="ALIGN_LEFT" value="0" enum="Align">
			Выравнивание строк по левому краю (по умолчанию).
		</constant>
		<constant name="ALIGN_CENTER" value="1" enum="Align">
			Выровнять ряды по центру.
		</constant>
		<constant name="ALIGN_RIGHT" value="2" enum="Align">
			Выровнять строки в правую сторону.
		</constant>
		<constant name="ALIGN_FILL" value="3" enum="Align">
			Раскройте пробел строки, чтобы оно соответствовало ширине.
		</constant>
		<constant name="VALIGN_TOP" value="0" enum="VAlign">
			Выровнять весь текст вверх.
		</constant>
		<constant name="VALIGN_CENTER" value="1" enum="VAlign">
			Выровнять весь текст по центру.
		</constant>
		<constant name="VALIGN_BOTTOM" value="2" enum="VAlign">
			Выровнять весь текст вниз.
		</constant>
		<constant name="VALIGN_FILL" value="3" enum="VAlign">
			Выравнивание всего текста путем распространения строк.
		</constant>
	</constants>
</class>
