<?xml version="1.0" encoding="UTF-8" ?>
<class name="ARVRPositionalTracker" inherits="Reference" version="3.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
		Отслеживаемый объект.
	</brief_description>
	<description>
		Экземпляр этого объекта представляет отслеживаемое устройство, например контроллер или точку привязки. HMD здесь не представлены, поскольку они обрабатываются внутренними средствами.
		По мере включения контроллеров и обнаружения их AR/VR-интерфейсом экземпляры этого объекта автоматически добавляются в список активных объектов отслеживания, доступных через [ARVRServer].
		Объекты [ARVRController] и [ARVRAnchor] потребляют объекты этого типа и должны быть использованы в вашем проекте. Позиционные трекеры - это просто "подкапотные" объекты, с помощью которых все это работает. В основном они раскрываются для того, чтобы с ними могли взаимодействовать интерфейсы, основанные на GDNative.
	</description>
	<tutorials>
		<link>$DOCS_URL/tutorials/vr/index.html</link>
	</tutorials>
	<methods>
		<method name="get_hand" qualifiers="const">
			<return type="int" enum="ARVRPositionalTracker.TrackerHand" />
			<description>
				Возвращает руку, держащую данный трекер, если она известна. См. константы [enum TrackerHand].
			</description>
		</method>
		<method name="get_joy_id" qualifiers="const">
			<return type="int" />
			<description>
				Если это контроллер, который отслеживается, то он также будет представлен записью джойстика с этим идентификатором.
			</description>
		</method>
		<method name="get_mesh" qualifiers="const">
			<return type="Mesh" />
			<description>
				Возвращает сетку, связанную с контроллером или точкой привязки, если таковая имеется.
			</description>
		</method>
		<method name="get_name" qualifiers="const">
			<return type="String" />
			<description>
				Возвращает имя контроллера или опорной точки, если оно доступно.
			</description>
		</method>
		<method name="get_orientation" qualifiers="const">
			<return type="Basis" />
			<description>
				Возвращает матрицу ориентации контроллера.
			</description>
		</method>
		<method name="get_position" qualifiers="const">
			<return type="Vector3" />
			<description>
				Возвращает положение контроллера в мировом пространстве.
			</description>
		</method>
		<method name="get_tracker_id" qualifiers="const">
			<return type="int" />
			<description>
				Возвращает внутренний идентификатор трекера. Он однозначно идентифицирует трекер по типу трекера и соответствует идентификатору, который необходимо указывать для таких узлов, как [ARVRController] и [ARVRAnchor].
			</description>
		</method>
		<method name="get_tracks_orientation" qualifiers="const">
			<return type="bool" />
			<description>
				Возвращает [code]true[/code], если устройство отслеживает ориентацию.
			</description>
		</method>
		<method name="get_tracks_position" qualifiers="const">
			<return type="bool" />
			<description>
				Возвращает [code]true[/code], если устройство отслеживает положение.
			</description>
		</method>
		<method name="get_transform" qualifiers="const">
			<return type="Transform" />
			<argument index="0" name="adjust_by_reference_frame" type="bool" />
			<description>
				Returns the transform combining this device's orientation and .
			</description>
		</method>
		<method name="get_type" qualifiers="const">
			<return type="int" enum="ARVRServer.TrackerType" />
			<description>
				Возвращает тип трекера.
			</description>
		</method>
	</methods>
	<members>
		<member name="rumble" type="float" setter="set_rumble" getter="get_rumble" default="0.0">
			Степень грохота трекера. Варьируется от [code]0.0[/code] до [code]1.0[/code] с точностью [code].01[/code].
		</member>
	</members>
	<constants>
		<constant name="TRACKER_HAND_UNKNOWN" value="0" enum="TrackerHand">
			Рука, в которой находится этот трекер, неизвестна или неприменима.
		</constant>
		<constant name="TRACKER_LEFT_HAND" value="1" enum="TrackerHand">
			Этот трекер является левым контроллером.
		</constant>
		<constant name="TRACKER_RIGHT_HAND" value="2" enum="TrackerHand">
			Этот трекер является правым контроллером.
		</constant>
	</constants>
</class>
